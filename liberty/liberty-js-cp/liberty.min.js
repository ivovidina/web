/*! For license information please see liberty.min.js.LICENSE.txt */ ! function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.liberty = t() : e.liberty = t()
}(self, (() => (() => {
    var e = {
            630: (e, t, r) => {
                var i;
                ! function(e) {
                    ! function(t) {
                        var i = "object" == typeof globalThis ? globalThis : "object" == typeof r.g ? r.g : "object" == typeof self ? self : "object" == typeof this ? this : function() {
                                try {
                                    return Function("return this;")()
                                } catch (e) {}
                            }() || function() {
                                try {
                                    return (0, eval)("(function() { return this; })()")
                                } catch (e) {}
                            }(),
                            n = s(e);

                        function s(e, t) {
                            return function(r, i) {
                                Object.defineProperty(e, r, {
                                    configurable: !0,
                                    writable: !0,
                                    value: i
                                }), t && t(r, i)
                            }
                        }
                        void 0 !== i.Reflect && (n = s(i.Reflect, n)),
                            function(e, t) {
                                var r = Object.prototype.hasOwnProperty,
                                    i = "function" == typeof Symbol,
                                    n = i && void 0 !== Symbol.toPrimitive ? Symbol.toPrimitive : "@@toPrimitive",
                                    s = i && void 0 !== Symbol.iterator ? Symbol.iterator : "@@iterator",
                                    o = "function" == typeof Object.create,
                                    a = {
                                        __proto__: []
                                    }
                                instanceof Array, c = !o && !a, l = {
                                    create: o ? function() {
                                        return W(Object.create(null))
                                    } : a ? function() {
                                        return W({
                                            __proto__: null
                                        })
                                    } : function() {
                                        return W({})
                                    },
                                    has: c ? function(e, t) {
                                        return r.call(e, t)
                                    } : function(e, t) {
                                        return t in e
                                    },
                                    get: c ? function(e, t) {
                                        return r.call(e, t) ? e[t] : void 0
                                    } : function(e, t) {
                                        return e[t]
                                    }
                                }, d = Object.getPrototypeOf(Function), u = "function" == typeof Map && "function" == typeof Map.prototype.entries ? Map : function() {
                                    var e = {},
                                        t = [],
                                        r = function() {
                                            function e(e, t, r) {
                                                this._index = 0, this._keys = e, this._values = t, this._selector = r
                                            }
                                            return e.prototype["@@iterator"] = function() {
                                                return this
                                            }, e.prototype[s] = function() {
                                                return this
                                            }, e.prototype.next = function() {
                                                var e = this._index;
                                                if (e >= 0 && e < this._keys.length) {
                                                    var r = this._selector(this._keys[e], this._values[e]);
                                                    return e + 1 >= this._keys.length ? (this._index = -1, this._keys = t, this._values = t) : this._index++, {
                                                        value: r,
                                                        done: !1
                                                    }
                                                }
                                                return {
                                                    value: void 0,
                                                    done: !0
                                                }
                                            }, e.prototype.throw = function(e) {
                                                throw this._index >= 0 && (this._index = -1, this._keys = t, this._values = t), e
                                            }, e.prototype.return = function(e) {
                                                return this._index >= 0 && (this._index = -1, this._keys = t, this._values = t), {
                                                    value: e,
                                                    done: !0
                                                }
                                            }, e
                                        }();
                                    return function() {
                                        function t() {
                                            this._keys = [], this._values = [], this._cacheKey = e, this._cacheIndex = -2
                                        }
                                        return Object.defineProperty(t.prototype, "size", {
                                            get: function() {
                                                return this._keys.length
                                            },
                                            enumerable: !0,
                                            configurable: !0
                                        }), t.prototype.has = function(e) {
                                            return this._find(e, !1) >= 0
                                        }, t.prototype.get = function(e) {
                                            var t = this._find(e, !1);
                                            return t >= 0 ? this._values[t] : void 0
                                        }, t.prototype.set = function(e, t) {
                                            var r = this._find(e, !0);
                                            return this._values[r] = t, this
                                        }, t.prototype.delete = function(t) {
                                            var r = this._find(t, !1);
                                            if (r >= 0) {
                                                for (var i = this._keys.length, n = r + 1; n < i; n++) this._keys[n - 1] = this._keys[n], this._values[n - 1] = this._values[n];
                                                return this._keys.length--, this._values.length--, D(t, this._cacheKey) && (this._cacheKey = e, this._cacheIndex = -2), !0
                                            }
                                            return !1
                                        }, t.prototype.clear = function() {
                                            this._keys.length = 0, this._values.length = 0, this._cacheKey = e, this._cacheIndex = -2
                                        }, t.prototype.keys = function() {
                                            return new r(this._keys, this._values, i)
                                        }, t.prototype.values = function() {
                                            return new r(this._keys, this._values, n)
                                        }, t.prototype.entries = function() {
                                            return new r(this._keys, this._values, o)
                                        }, t.prototype["@@iterator"] = function() {
                                            return this.entries()
                                        }, t.prototype[s] = function() {
                                            return this.entries()
                                        }, t.prototype._find = function(e, t) {
                                            if (!D(this._cacheKey, e)) {
                                                this._cacheIndex = -1;
                                                for (var r = 0; r < this._keys.length; r++)
                                                    if (D(this._keys[r], e)) {
                                                        this._cacheIndex = r;
                                                        break
                                                    }
                                            }
                                            return this._cacheIndex < 0 && t && (this._cacheIndex = this._keys.length, this._keys.push(e), this._values.push(void 0)), this._cacheIndex
                                        }, t
                                    }();

                                    function i(e, t) {
                                        return e
                                    }

                                    function n(e, t) {
                                        return t
                                    }

                                    function o(e, t) {
                                        return [e, t]
                                    }
                                }(), g = "function" == typeof Set && "function" == typeof Set.prototype.entries ? Set : function() {
                                    function e() {
                                        this._map = new u
                                    }
                                    return Object.defineProperty(e.prototype, "size", {
                                        get: function() {
                                            return this._map.size
                                        },
                                        enumerable: !0,
                                        configurable: !0
                                    }), e.prototype.has = function(e) {
                                        return this._map.has(e)
                                    }, e.prototype.add = function(e) {
                                        return this._map.set(e, e), this
                                    }, e.prototype.delete = function(e) {
                                        return this._map.delete(e)
                                    }, e.prototype.clear = function() {
                                        this._map.clear()
                                    }, e.prototype.keys = function() {
                                        return this._map.keys()
                                    }, e.prototype.values = function() {
                                        return this._map.keys()
                                    }, e.prototype.entries = function() {
                                        return this._map.entries()
                                    }, e.prototype["@@iterator"] = function() {
                                        return this.keys()
                                    }, e.prototype[s] = function() {
                                        return this.keys()
                                    }, e
                                }(), h = "function" == typeof WeakMap ? WeakMap : function() {
                                    var e = 16,
                                        t = l.create(),
                                        i = n();
                                    return function() {
                                        function e() {
                                            this._key = n()
                                        }
                                        return e.prototype.has = function(e) {
                                            var t = s(e, !1);
                                            return void 0 !== t && l.has(t, this._key)
                                        }, e.prototype.get = function(e) {
                                            var t = s(e, !1);
                                            return void 0 !== t ? l.get(t, this._key) : void 0
                                        }, e.prototype.set = function(e, t) {
                                            return s(e, !0)[this._key] = t, this
                                        }, e.prototype.delete = function(e) {
                                            var t = s(e, !1);
                                            return void 0 !== t && delete t[this._key]
                                        }, e.prototype.clear = function() {
                                            this._key = n()
                                        }, e
                                    }();

                                    function n() {
                                        var e;
                                        do {
                                            e = "@@WeakMap@@" + a()
                                        } while (l.has(t, e));
                                        return t[e] = !0, e
                                    }

                                    function s(e, t) {
                                        if (!r.call(e, i)) {
                                            if (!t) return;
                                            Object.defineProperty(e, i, {
                                                value: l.create()
                                            })
                                        }
                                        return e[i]
                                    }

                                    function o(e, t) {
                                        for (var r = 0; r < t; ++r) e[r] = 255 * Math.random() | 0;
                                        return e
                                    }

                                    function a() {
                                        var t = function(e) {
                                            if ("function" == typeof Uint8Array) {
                                                var t = new Uint8Array(e);
                                                return "undefined" != typeof crypto ? crypto.getRandomValues(t) : "undefined" != typeof msCrypto ? msCrypto.getRandomValues(t) : o(t, e), t
                                            }
                                            return o(new Array(e), e)
                                        }(e);
                                        t[6] = 79 & t[6] | 64, t[8] = 191 & t[8] | 128;
                                        for (var r = "", i = 0; i < e; ++i) {
                                            var n = t[i];
                                            4 !== i && 6 !== i && 8 !== i || (r += "-"), n < 16 && (r += "0"), r += n.toString(16).toLowerCase()
                                        }
                                        return r
                                    }
                                }(), f = i ? Symbol.for("@reflect-metadata:registry") : void 0, p = function() {
                                    var e;
                                    return !T(f) && I(t.Reflect) && Object.isExtensible(t.Reflect) && (e = t.Reflect[f]), T(e) && (e = function() {
                                        var e, r, i, n;
                                        T(f) || void 0 === t.Reflect || f in t.Reflect || "function" != typeof t.Reflect.defineMetadata || (e = function(e) {
                                            var t = e.defineMetadata,
                                                r = e.hasOwnMetadata,
                                                i = e.getOwnMetadata,
                                                n = e.getOwnMetadataKeys,
                                                s = e.deleteMetadata,
                                                o = new h;
                                            return {
                                                isProviderFor: function(e, t) {
                                                    var r = o.get(e);
                                                    return !(T(r) || !r.has(t)) || !!n(e, t).length && (T(r) && (r = new g, o.set(e, r)), r.add(t), !0)
                                                },
                                                OrdinaryDefineOwnMetadata: t,
                                                OrdinaryHasOwnMetadata: r,
                                                OrdinaryGetOwnMetadata: i,
                                                OrdinaryOwnMetadataKeys: n,
                                                OrdinaryDeleteMetadata: s
                                            }
                                        }(t.Reflect));
                                        var s = new h,
                                            o = {
                                                registerProvider: a,
                                                getProvider: l,
                                                setProvider: p
                                            };
                                        return o;

                                        function a(t) {
                                            if (!Object.isExtensible(o)) throw new Error("Cannot add provider to a frozen registry.");
                                            switch (!0) {
                                                case e === t:
                                                    break;
                                                case T(r):
                                                    r = t;
                                                    break;
                                                case r === t:
                                                    break;
                                                case T(i):
                                                    i = t;
                                                    break;
                                                case i === t:
                                                    break;
                                                default:
                                                    void 0 === n && (n = new g), n.add(t)
                                            }
                                        }

                                        function c(t, s) {
                                            if (!T(r)) {
                                                if (r.isProviderFor(t, s)) return r;
                                                if (!T(i)) {
                                                    if (i.isProviderFor(t, s)) return r;
                                                    if (!T(n))
                                                        for (var o = B(n);;) {
                                                            var a = M(o);
                                                            if (!a) return;
                                                            var c = N(a);
                                                            if (c.isProviderFor(t, s)) return x(o), c
                                                        }
                                                }
                                            }
                                            if (!T(e) && e.isProviderFor(t, s)) return e
                                        }

                                        function l(e, t) {
                                            var r, i = s.get(e);
                                            return T(i) || (r = i.get(t)), T(r) ? (T(r = c(e, t)) || (T(i) && (i = new u, s.set(e, i)), i.set(t, r)), r) : r
                                        }

                                        function d(e) {
                                            if (T(e)) throw new TypeError;
                                            return r === e || i === e || !T(n) && n.has(e)
                                        }

                                        function p(e, t, r) {
                                            if (!d(r)) throw new Error("Metadata provider not registered.");
                                            var i = l(e, t);
                                            if (i !== r) {
                                                if (!T(i)) return !1;
                                                var n = s.get(e);
                                                T(n) && (n = new u, s.set(e, n)), n.set(t, r)
                                            }
                                            return !0
                                        }
                                    }()), !T(f) && I(t.Reflect) && Object.isExtensible(t.Reflect) && Object.defineProperty(t.Reflect, f, {
                                        enumerable: !1,
                                        configurable: !1,
                                        writable: !1,
                                        value: e
                                    }), e
                                }(), y = function(e) {
                                    var t = new h,
                                        r = {
                                            isProviderFor: function(e, r) {
                                                var i = t.get(e);
                                                return !T(i) && i.has(r)
                                            },
                                            OrdinaryDefineOwnMetadata: function(e, t, r, n) {
                                                i(r, n, !0).set(e, t)
                                            },
                                            OrdinaryHasOwnMetadata: function(e, t, r) {
                                                var n = i(t, r, !1);
                                                return !T(n) && P(n.has(e))
                                            },
                                            OrdinaryGetOwnMetadata: function(e, t, r) {
                                                var n = i(t, r, !1);
                                                if (!T(n)) return n.get(e)
                                            },
                                            OrdinaryOwnMetadataKeys: function(e, t) {
                                                var r = [],
                                                    n = i(e, t, !1);
                                                if (T(n)) return r;
                                                for (var s = B(n.keys()), o = 0;;) {
                                                    var a = M(s);
                                                    if (!a) return r.length = o, r;
                                                    var c = N(a);
                                                    try {
                                                        r[o] = c
                                                    } catch (e) {
                                                        try {
                                                            x(s)
                                                        } finally {
                                                            throw e
                                                        }
                                                    }
                                                    o++
                                                }
                                            },
                                            OrdinaryDeleteMetadata: function(e, r, n) {
                                                var s = i(r, n, !1);
                                                if (T(s)) return !1;
                                                if (!s.delete(e)) return !1;
                                                if (0 === s.size) {
                                                    var o = t.get(r);
                                                    T(o) || (o.delete(n), 0 === o.size && t.delete(o))
                                                }
                                                return !0
                                            }
                                        };
                                    return p.registerProvider(r), r;

                                    function i(i, n, s) {
                                        var o = t.get(i),
                                            a = !1;
                                        if (T(o)) {
                                            if (!s) return;
                                            o = new u, t.set(i, o), a = !0
                                        }
                                        var c = o.get(n);
                                        if (T(c)) {
                                            if (!s) return;
                                            if (c = new u, o.set(n, c), !e.setProvider(i, n, r)) throw o.delete(n), a && t.delete(i), new Error("Wrong provider for target.")
                                        }
                                        return c
                                    }
                                }(p);

                                function v(e, t, r) {
                                    if (m(e, t, r)) return !0;
                                    var i = G(t);
                                    return !O(i) && v(e, i, r)
                                }

                                function m(e, t, r) {
                                    var i = z(t, r, !1);
                                    return !T(i) && P(i.OrdinaryHasOwnMetadata(e, t, r))
                                }

                                function b(e, t, r) {
                                    if (m(e, t, r)) return R(e, t, r);
                                    var i = G(t);
                                    return O(i) ? void 0 : b(e, i, r)
                                }

                                function R(e, t, r) {
                                    var i = z(t, r, !1);
                                    if (!T(i)) return i.OrdinaryGetOwnMetadata(e, t, r)
                                }

                                function A(e, t, r, i) {
                                    z(r, i, !0).OrdinaryDefineOwnMetadata(e, t, r, i)
                                }

                                function w(e, t) {
                                    var r = S(e, t),
                                        i = G(e);
                                    if (null === i) return r;
                                    var n = w(i, t);
                                    if (n.length <= 0) return r;
                                    if (r.length <= 0) return n;
                                    for (var s = new g, o = [], a = 0, c = r; a < c.length; a++) {
                                        var l = c[a];
                                        s.has(l) || (s.add(l), o.push(l))
                                    }
                                    for (var d = 0, u = n; d < u.length; d++) l = u[d], s.has(l) || (s.add(l), o.push(l));
                                    return o
                                }

                                function S(e, t) {
                                    var r = z(e, t, !1);
                                    return r ? r.OrdinaryOwnMetadataKeys(e, t) : []
                                }

                                function E(e) {
                                    if (null === e) return 1;
                                    switch (typeof e) {
                                        case "undefined":
                                            return 0;
                                        case "boolean":
                                            return 2;
                                        case "string":
                                            return 3;
                                        case "symbol":
                                            return 4;
                                        case "number":
                                            return 5;
                                        case "object":
                                            return null === e ? 1 : 6;
                                        default:
                                            return 6
                                    }
                                }

                                function T(e) {
                                    return void 0 === e
                                }

                                function O(e) {
                                    return null === e
                                }

                                function I(e) {
                                    return "object" == typeof e ? null !== e : "function" == typeof e
                                }

                                function k(e, t) {
                                    switch (E(e)) {
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                            return e
                                    }
                                    var r = 3 === t ? "string" : 5 === t ? "number" : "default",
                                        i = F(e, n);
                                    if (void 0 !== i) {
                                        var s = i.call(e, r);
                                        if (I(s)) throw new TypeError;
                                        return s
                                    }
                                    return function(e, t) {
                                        if ("string" === t) {
                                            var r = e.toString;
                                            if (j(r) && !I(n = r.call(e))) return n;
                                            if (j(i = e.valueOf) && !I(n = i.call(e))) return n
                                        } else {
                                            var i;
                                            if (j(i = e.valueOf) && !I(n = i.call(e))) return n;
                                            var n, s = e.toString;
                                            if (j(s) && !I(n = s.call(e))) return n
                                        }
                                        throw new TypeError
                                    }(e, "default" === r ? "number" : r)
                                }

                                function P(e) {
                                    return !!e
                                }

                                function C(e) {
                                    var t = k(e, 3);
                                    return "symbol" == typeof t ? t : function(e) {
                                        return "" + e
                                    }(t)
                                }

                                function _(e) {
                                    return Array.isArray ? Array.isArray(e) : e instanceof Object ? e instanceof Array : "[object Array]" === Object.prototype.toString.call(e)
                                }

                                function j(e) {
                                    return "function" == typeof e
                                }

                                function L(e) {
                                    return "function" == typeof e
                                }

                                function D(e, t) {
                                    return e === t || e != e && t != t
                                }

                                function F(e, t) {
                                    var r = e[t];
                                    if (null != r) {
                                        if (!j(r)) throw new TypeError;
                                        return r
                                    }
                                }

                                function B(e) {
                                    var t = F(e, s);
                                    if (!j(t)) throw new TypeError;
                                    var r = t.call(e);
                                    if (!I(r)) throw new TypeError;
                                    return r
                                }

                                function N(e) {
                                    return e.value
                                }

                                function M(e) {
                                    var t = e.next();
                                    return !t.done && t
                                }

                                function x(e) {
                                    var t = e.return;
                                    t && t.call(e)
                                }

                                function G(e) {
                                    var t = Object.getPrototypeOf(e);
                                    if ("function" != typeof e || e === d) return t;
                                    if (t !== d) return t;
                                    var r = e.prototype,
                                        i = r && Object.getPrototypeOf(r);
                                    if (null == i || i === Object.prototype) return t;
                                    var n = i.constructor;
                                    return "function" != typeof n || n === e ? t : n
                                }

                                function z(e, t, r) {
                                    var i = p.getProvider(e, t);
                                    if (!T(i)) return i;
                                    if (r) {
                                        if (p.setProvider(e, t, y)) return y;
                                        throw new Error("Illegal state.")
                                    }
                                }

                                function W(e) {
                                    return e.__ = void 0, delete e.__, e
                                }
                                e("decorate", (function(e, t, r, i) {
                                    if (T(r)) {
                                        if (!_(e)) throw new TypeError;
                                        if (!L(t)) throw new TypeError;
                                        return function(e, t) {
                                            for (var r = e.length - 1; r >= 0; --r) {
                                                var i = (0, e[r])(t);
                                                if (!T(i) && !O(i)) {
                                                    if (!L(i)) throw new TypeError;
                                                    t = i
                                                }
                                            }
                                            return t
                                        }(e, t)
                                    }
                                    if (!_(e)) throw new TypeError;
                                    if (!I(t)) throw new TypeError;
                                    if (!I(i) && !T(i) && !O(i)) throw new TypeError;
                                    return O(i) && (i = void 0),
                                        function(e, t, r, i) {
                                            for (var n = e.length - 1; n >= 0; --n) {
                                                var s = (0, e[n])(t, r, i);
                                                if (!T(s) && !O(s)) {
                                                    if (!I(s)) throw new TypeError;
                                                    i = s
                                                }
                                            }
                                            return i
                                        }(e, t, r = C(r), i)
                                })), e("metadata", (function(e, t) {
                                    return function(r, i) {
                                        if (!I(r)) throw new TypeError;
                                        if (!T(i) && ! function(e) {
                                                switch (E(e)) {
                                                    case 3:
                                                    case 4:
                                                        return !0;
                                                    default:
                                                        return !1
                                                }
                                            }(i)) throw new TypeError;
                                        A(e, t, r, i)
                                    }
                                })), e("defineMetadata", (function(e, t, r, i) {
                                    if (!I(r)) throw new TypeError;
                                    return T(i) || (i = C(i)), A(e, t, r, i)
                                })), e("hasMetadata", (function(e, t, r) {
                                    if (!I(t)) throw new TypeError;
                                    return T(r) || (r = C(r)), v(e, t, r)
                                })), e("hasOwnMetadata", (function(e, t, r) {
                                    if (!I(t)) throw new TypeError;
                                    return T(r) || (r = C(r)), m(e, t, r)
                                })), e("getMetadata", (function(e, t, r) {
                                    if (!I(t)) throw new TypeError;
                                    return T(r) || (r = C(r)), b(e, t, r)
                                })), e("getOwnMetadata", (function(e, t, r) {
                                    if (!I(t)) throw new TypeError;
                                    return T(r) || (r = C(r)), R(e, t, r)
                                })), e("getMetadataKeys", (function(e, t) {
                                    if (!I(e)) throw new TypeError;
                                    return T(t) || (t = C(t)), w(e, t)
                                })), e("getOwnMetadataKeys", (function(e, t) {
                                    if (!I(e)) throw new TypeError;
                                    return T(t) || (t = C(t)), S(e, t)
                                })), e("deleteMetadata", (function(e, t, r) {
                                    if (!I(t)) throw new TypeError;
                                    if (T(r) || (r = C(r)), !I(t)) throw new TypeError;
                                    T(r) || (r = C(r));
                                    var i = z(t, r, !1);
                                    return !T(i) && i.OrdinaryDeleteMetadata(e, t, r)
                                }))
                            }(n, i), void 0 === i.Reflect && (i.Reflect = e)
                    }()
                }(i || (i = {}))
            }
        },
        t = {};

    function r(i) {
        var n = t[i];
        if (void 0 !== n) return n.exports;
        var s = t[i] = {
            exports: {}
        };
        return e[i](s, s.exports, r), s.exports
    }
    r.d = (e, t) => {
        for (var i in t) r.o(t, i) && !r.o(e, i) && Object.defineProperty(e, i, {
            enumerable: !0,
            get: t[i]
        })
    }, r.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), r.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    };
    var i = {};
    return (() => {
        "use strict";
        var e;
        r.r(i), r.d(i, {
                commandQueue: () => Jn,
                enableDebug: () => Yn,
                version: () => Zn
            }), r(630),
            function(e) {
                e[e.Transient = 0] = "Transient", e[e.Singleton = 1] = "Singleton", e[e.ResolutionScoped = 2] = "ResolutionScoped", e[e.ContainerScoped = 3] = "ContainerScoped"
            }(e || (e = {}));
        const t = e;
        var n = function(e, t) {
            return n = Object.setPrototypeOf || {
                __proto__: []
            }
            instanceof Array && function(e, t) {
                e.__proto__ = t
            } || function(e, t) {
                for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
            }, n(e, t)
        };

        function s(e, t) {
            function r() {
                this.constructor = e
            }
            n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        }

        function o(e) {
            var t = "function" == typeof Symbol && Symbol.iterator,
                r = t && e[t],
                i = 0;
            if (r) return r.call(e);
            if (e && "number" == typeof e.length) return {
                next: function() {
                    return e && i >= e.length && (e = void 0), {
                        value: e && e[i++],
                        done: !e
                    }
                }
            };
            throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
        }

        function a(e, t) {
            var r = "function" == typeof Symbol && e[Symbol.iterator];
            if (!r) return e;
            var i, n, s = r.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;) o.push(i.value)
            } catch (e) {
                n = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (r = s.return) && r.call(s)
                } finally {
                    if (n) throw n.error
                }
            }
            return o
        }

        function c() {
            for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(a(arguments[t]));
            return e
        }

        function l(e) {
            return !!e.useClass
        }

        function d(e) {
            return !!e.useFactory
        }
        var u = function() {
            function e(e) {
                this.wrap = e, this.reflectMethods = ["get", "getPrototypeOf", "setPrototypeOf", "getOwnPropertyDescriptor", "defineProperty", "has", "set", "deleteProperty", "apply", "construct", "ownKeys"]
            }
            return e.prototype.createProxy = function(e) {
                var t, r = this,
                    i = !1;
                return new Proxy({}, this.createHandler((function() {
                    return i || (t = e(r.wrap()), i = !0), t
                })))
            }, e.prototype.createHandler = function(e) {
                var t = {};
                return this.reflectMethods.forEach((function(r) {
                    t[r] = function() {
                        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
                        return t[0] = e(), Reflect[r].apply(void 0, c(t))
                    }
                })), t
            }, e
        }();

        function g(e) {
            return "string" == typeof e || "symbol" == typeof e
        }

        function h(e) {
            return "object" == typeof e && "token" in e && "transform" in e
        }

        function f(e) {
            return !!e.useToken
        }

        function p(e) {
            return null != e.useValue
        }
        const y = function() {
                function e() {
                    this._registryMap = new Map
                }
                return e.prototype.entries = function() {
                    return this._registryMap.entries()
                }, e.prototype.getAll = function(e) {
                    return this.ensure(e), this._registryMap.get(e)
                }, e.prototype.get = function(e) {
                    this.ensure(e);
                    var t = this._registryMap.get(e);
                    return t[t.length - 1] || null
                }, e.prototype.set = function(e, t) {
                    this.ensure(e), this._registryMap.get(e).push(t)
                }, e.prototype.setAll = function(e, t) {
                    this._registryMap.set(e, t)
                }, e.prototype.has = function(e) {
                    return this.ensure(e), this._registryMap.get(e).length > 0
                }, e.prototype.clear = function() {
                    this._registryMap.clear()
                }, e.prototype.ensure = function(e) {
                    this._registryMap.has(e) || this._registryMap.set(e, [])
                }, e
            }(),
            v = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return s(t, e), t
            }(y),
            m = function() {
                this.scopedResolutions = new Map
            };
        var b = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return s(t, e), t
            }(y),
            R = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return s(t, e), t
            }(y);
        const A = function() {
            this.preResolution = new b, this.postResolution = new R
        };
        var w = new Map,
            S = function() {
                function e(e) {
                    this.parent = e, this._registry = new v, this.interceptors = new A, this.disposed = !1, this.disposables = new Set
                }
                return e.prototype.register = function(e, r, i) {
                    var n;
                    if (void 0 === i && (i = {
                            lifecycle: t.Transient
                        }), this.ensureNotDisposed(), n = function(e) {
                            return l(e) || p(e) || f(e) || d(e)
                        }(r) ? r : {
                            useClass: r
                        }, f(n))
                        for (var s = [e], o = n; null != o;) {
                            var a = o.useToken;
                            if (s.includes(a)) throw new Error("Token registration cycle detected! " + c(s, [a]).join(" -> "));
                            s.push(a);
                            var u = this._registry.get(a);
                            o = u && f(u.provider) ? u.provider : null
                        }
                    if ((i.lifecycle === t.Singleton || i.lifecycle == t.ContainerScoped || i.lifecycle == t.ResolutionScoped) && (p(n) || d(n))) throw new Error('Cannot use lifecycle "' + t[i.lifecycle] + '" with ValueProviders or FactoryProviders');
                    return this._registry.set(e, {
                        provider: n,
                        options: i
                    }), this
                }, e.prototype.registerType = function(e, t) {
                    return this.ensureNotDisposed(), g(t) ? this.register(e, {
                        useToken: t
                    }) : this.register(e, {
                        useClass: t
                    })
                }, e.prototype.registerInstance = function(e, t) {
                    return this.ensureNotDisposed(), this.register(e, {
                        useValue: t
                    })
                }, e.prototype.registerSingleton = function(e, r) {
                    if (this.ensureNotDisposed(), g(e)) {
                        if (g(r)) return this.register(e, {
                            useToken: r
                        }, {
                            lifecycle: t.Singleton
                        });
                        if (r) return this.register(e, {
                            useClass: r
                        }, {
                            lifecycle: t.Singleton
                        });
                        throw new Error('Cannot register a type name as a singleton without a "to" token')
                    }
                    var i = e;
                    return r && !g(r) && (i = r), this.register(e, {
                        useClass: i
                    }, {
                        lifecycle: t.Singleton
                    })
                }, e.prototype.resolve = function(e, t) {
                    void 0 === t && (t = new m), this.ensureNotDisposed();
                    var r = this.getRegistration(e);
                    if (!r && g(e)) throw new Error('Attempted to resolve unregistered dependency token: "' + e.toString() + '"');
                    if (this.executePreResolutionInterceptor(e, "Single"), r) {
                        var i = this.resolveRegistration(r, t);
                        return this.executePostResolutionInterceptor(e, i, "Single"), i
                    }
                    if (function(e) {
                            return "function" == typeof e || e instanceof u
                        }(e)) return i = this.construct(e, t), this.executePostResolutionInterceptor(e, i, "Single"), i;
                    throw new Error("Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.")
                }, e.prototype.executePreResolutionInterceptor = function(e, t) {
                    var r, i;
                    if (this.interceptors.preResolution.has(e)) {
                        var n = [];
                        try {
                            for (var s = o(this.interceptors.preResolution.getAll(e)), a = s.next(); !a.done; a = s.next()) {
                                var c = a.value;
                                "Once" != c.options.frequency && n.push(c), c.callback(e, t)
                            }
                        } catch (e) {
                            r = {
                                error: e
                            }
                        } finally {
                            try {
                                a && !a.done && (i = s.return) && i.call(s)
                            } finally {
                                if (r) throw r.error
                            }
                        }
                        this.interceptors.preResolution.setAll(e, n)
                    }
                }, e.prototype.executePostResolutionInterceptor = function(e, t, r) {
                    var i, n;
                    if (this.interceptors.postResolution.has(e)) {
                        var s = [];
                        try {
                            for (var a = o(this.interceptors.postResolution.getAll(e)), c = a.next(); !c.done; c = a.next()) {
                                var l = c.value;
                                "Once" != l.options.frequency && s.push(l), l.callback(e, t, r)
                            }
                        } catch (e) {
                            i = {
                                error: e
                            }
                        } finally {
                            try {
                                c && !c.done && (n = a.return) && n.call(a)
                            } finally {
                                if (i) throw i.error
                            }
                        }
                        this.interceptors.postResolution.setAll(e, s)
                    }
                }, e.prototype.resolveRegistration = function(e, r) {
                    if (this.ensureNotDisposed(), e.options.lifecycle === t.ResolutionScoped && r.scopedResolutions.has(e)) return r.scopedResolutions.get(e);
                    var i, n = e.options.lifecycle === t.Singleton,
                        s = e.options.lifecycle === t.ContainerScoped,
                        o = n || s;
                    return i = p(e.provider) ? e.provider.useValue : f(e.provider) ? o ? e.instance || (e.instance = this.resolve(e.provider.useToken, r)) : this.resolve(e.provider.useToken, r) : l(e.provider) ? o ? e.instance || (e.instance = this.construct(e.provider.useClass, r)) : this.construct(e.provider.useClass, r) : d(e.provider) ? e.provider.useFactory(this) : this.construct(e.provider, r), e.options.lifecycle === t.ResolutionScoped && r.scopedResolutions.set(e, i), i
                }, e.prototype.resolveAll = function(e, t) {
                    var r = this;
                    void 0 === t && (t = new m), this.ensureNotDisposed();
                    var i = this.getAllRegistrations(e);
                    if (!i && g(e)) throw new Error('Attempted to resolve unregistered dependency token: "' + e.toString() + '"');
                    if (this.executePreResolutionInterceptor(e, "All"), i) {
                        var n = i.map((function(e) {
                            return r.resolveRegistration(e, t)
                        }));
                        return this.executePostResolutionInterceptor(e, n, "All"), n
                    }
                    var s = [this.construct(e, t)];
                    return this.executePostResolutionInterceptor(e, s, "All"), s
                }, e.prototype.isRegistered = function(e, t) {
                    return void 0 === t && (t = !1), this.ensureNotDisposed(), this._registry.has(e) || t && (this.parent || !1) && this.parent.isRegistered(e, !0)
                }, e.prototype.reset = function() {
                    this.ensureNotDisposed(), this._registry.clear(), this.interceptors.preResolution.clear(), this.interceptors.postResolution.clear()
                }, e.prototype.clearInstances = function() {
                    var e, t;
                    this.ensureNotDisposed();
                    try {
                        for (var r = o(this._registry.entries()), i = r.next(); !i.done; i = r.next()) {
                            var n = a(i.value, 2),
                                s = n[0],
                                c = n[1];
                            this._registry.setAll(s, c.filter((function(e) {
                                return !p(e.provider)
                            })).map((function(e) {
                                return e.instance = void 0, e
                            })))
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            i && !i.done && (t = r.return) && t.call(r)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                }, e.prototype.createChildContainer = function() {
                    var r, i;
                    this.ensureNotDisposed();
                    var n = new e(this);
                    try {
                        for (var s = o(this._registry.entries()), c = s.next(); !c.done; c = s.next()) {
                            var l = a(c.value, 2),
                                d = l[0],
                                u = l[1];
                            u.some((function(e) {
                                return e.options.lifecycle === t.ContainerScoped
                            })) && n._registry.setAll(d, u.map((function(e) {
                                return e.options.lifecycle === t.ContainerScoped ? {
                                    provider: e.provider,
                                    options: e.options
                                } : e
                            })))
                        }
                    } catch (e) {
                        r = {
                            error: e
                        }
                    } finally {
                        try {
                            c && !c.done && (i = s.return) && i.call(s)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                    return n
                }, e.prototype.beforeResolution = function(e, t, r) {
                    void 0 === r && (r = {
                        frequency: "Always"
                    }), this.interceptors.preResolution.set(e, {
                        callback: t,
                        options: r
                    })
                }, e.prototype.afterResolution = function(e, t, r) {
                    void 0 === r && (r = {
                        frequency: "Always"
                    }), this.interceptors.postResolution.set(e, {
                        callback: t,
                        options: r
                    })
                }, e.prototype.dispose = function() {
                    return e = this, t = void 0, i = function() {
                        var e;
                        return function(e, t) {
                            var r, i, n, s, o = {
                                label: 0,
                                sent: function() {
                                    if (1 & n[0]) throw n[1];
                                    return n[1]
                                },
                                trys: [],
                                ops: []
                            };
                            return s = {
                                next: a(0),
                                throw: a(1),
                                return: a(2)
                            }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                                return this
                            }), s;

                            function a(s) {
                                return function(a) {
                                    return function(s) {
                                        if (r) throw new TypeError("Generator is already executing.");
                                        for (; o;) try {
                                            if (r = 1, i && (n = 2 & s[0] ? i.return : s[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, s[1])).done) return n;
                                            switch (i = 0, n && (s = [2 & s[0], n.value]), s[0]) {
                                                case 0:
                                                case 1:
                                                    n = s;
                                                    break;
                                                case 4:
                                                    return o.label++, {
                                                        value: s[1],
                                                        done: !1
                                                    };
                                                case 5:
                                                    o.label++, i = s[1], s = [0];
                                                    continue;
                                                case 7:
                                                    s = o.ops.pop(), o.trys.pop();
                                                    continue;
                                                default:
                                                    if (!((n = (n = o.trys).length > 0 && n[n.length - 1]) || 6 !== s[0] && 2 !== s[0])) {
                                                        o = 0;
                                                        continue
                                                    }
                                                    if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
                                                        o.label = s[1];
                                                        break
                                                    }
                                                    if (6 === s[0] && o.label < n[1]) {
                                                        o.label = n[1], n = s;
                                                        break
                                                    }
                                                    if (n && o.label < n[2]) {
                                                        o.label = n[2], o.ops.push(s);
                                                        break
                                                    }
                                                    n[2] && o.ops.pop(), o.trys.pop();
                                                    continue
                                            }
                                            s = t.call(e, o)
                                        } catch (e) {
                                            s = [6, e], i = 0
                                        } finally {
                                            r = n = 0
                                        }
                                        if (5 & s[0]) throw s[1];
                                        return {
                                            value: s[0] ? s[1] : void 0,
                                            done: !0
                                        }
                                    }([s, a])
                                }
                            }
                        }(this, (function(t) {
                            switch (t.label) {
                                case 0:
                                    return this.disposed = !0, e = [], this.disposables.forEach((function(t) {
                                        var r = t.dispose();
                                        r && e.push(r)
                                    })), [4, Promise.all(e)];
                                case 1:
                                    return t.sent(), [2]
                            }
                        }))
                    }, new((r = void 0) || (r = Promise))((function(n, s) {
                        function o(e) {
                            try {
                                c(i.next(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(i.throw(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r((function(e) {
                                e(t)
                            }))).then(o, a)
                        }
                        c((i = i.apply(e, t || [])).next())
                    }));
                    var e, t, r, i
                }, e.prototype.getRegistration = function(e) {
                    return this.isRegistered(e) ? this._registry.get(e) : this.parent ? this.parent.getRegistration(e) : null
                }, e.prototype.getAllRegistrations = function(e) {
                    return this.isRegistered(e) ? this._registry.getAll(e) : this.parent ? this.parent.getAllRegistrations(e) : null
                }, e.prototype.construct = function(e, t) {
                    var r = this;
                    if (e instanceof u) return e.createProxy((function(e) {
                        return r.resolve(e, t)
                    }));
                    var i, n = function() {
                        var i = w.get(e);
                        if (!i || 0 === i.length) {
                            if (0 === e.length) return new e;
                            throw new Error('TypeInfo not known for "' + e.name + '"')
                        }
                        var n = i.map(r.resolveParams(t, e));
                        return new(e.bind.apply(e, c([void 0], n)))
                    }();
                    return "function" != typeof(i = n).dispose || i.dispose.length > 0 || this.disposables.add(n), n
                }, e.prototype.resolveParams = function(e, t) {
                    var r = this;
                    return function(i, n) {
                        var s, o, l, d;
                        try {
                            return "object" == typeof(d = i) && "token" in d && "multiple" in d ? h(i) ? i.multiple ? (s = r.resolve(i.transform)).transform.apply(s, c([r.resolveAll(i.token)], i.transformArgs)) : (o = r.resolve(i.transform)).transform.apply(o, c([r.resolve(i.token, e)], i.transformArgs)) : i.multiple ? r.resolveAll(i.token) : r.resolve(i.token, e) : h(i) ? (l = r.resolve(i.transform, e)).transform.apply(l, c([r.resolve(i.token, e)], i.transformArgs)) : r.resolve(i, e)
                        } catch (e) {
                            throw new Error(function(e, t, r) {
                                var i, n, s, o, l = a(e.toString().match(/constructor\(([\w, ]+)\)/) || [], 2)[1];
                                return i = "Cannot inject the dependency " + (o = t, (null === (s = void 0 === l ? null : l) ? "at position #" + o : '"' + s.split(",")[o].trim() + '" at position #' + o) + ' of "') + e.name + '" constructor. Reason:', void 0 === n && (n = "    "), c([i], r.message.split("\n").map((function(e) {
                                    return n + e
                                }))).join("\n")
                            }(t, n, e))
                        }
                    }
                }, e.prototype.ensureNotDisposed = function() {
                    if (this.disposed) throw new Error("This container has been disposed, you cannot interact with a disposed container")
                }, e
            }(),
            E = new S;
        const T = function() {
                return function(e) {
                    w.set(e, function(e) {
                        var t = Reflect.getMetadata("design:paramtypes", e) || [],
                            r = Reflect.getOwnMetadata("injectionTokens", e) || {};
                        return Object.keys(r).forEach((function(e) {
                            t[+e] = r[e]
                        })), t
                    }(e))
                }
            },
            O = function() {
                return function(e) {
                    T()(e), E.registerSingleton(e)
                }
            };
        if ("undefined" == typeof Reflect || !Reflect.getMetadata) throw new Error("tsyringe requires a reflect polyfill. Please add 'import \"reflect-metadata\"' to the top of your entry point.");

        function I() {
            for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
            var i = Array(e),
                n = 0;
            for (t = 0; t < r; t++)
                for (var s = arguments[t], o = 0, a = s.length; o < a; o++, n++) i[n] = s[o];
            return i
        }
        var k, P, C = function() {
            function e(e, t) {
                this.context = e, this.queryString = t
            }
            return e.prototype.isDebuggingEnabled = function() {
                return this.isQueryStringParamPresent() || this.isLocalStorageItemPresent()
            }, e.prototype.isQueryStringParamPresent = function() {
                return "true" === this.getQuery(this.buildContext())
            }, e.prototype.isLocalStorageItemPresent = function() {
                try {
                    return "true" === window.localStorage.getItem(this.buildContext())
                } catch (e) {
                    return !1
                }
            }, e.prototype.getQuery = function(e) {
                var t = new RegExp("[?&]" + encodeURIComponent(e) + "=([^&]*)").exec(this.queryString);
                return t ? decodeURIComponent(t[1]) : null
            }, e.prototype.buildContext = function() {
                return this.context + "_debug"
            }, e
        }();
        ! function(e) {
            e.DEBUG = "DEBUG", e.ERROR = "ERR"
        }(P || (P = {}));
        var _ = ((k = {})[P.DEBUG] = "#8bc34a", k[P.ERROR] = "#ff0000", k);

        function j() {}
        var L, D = function() {
                function e(e, t, r) {
                    this.context = t, this.queryString = r, this.logLogger = this.getMethodOrNoop(e, "log"), this.errorLogger = this.getMethodOrNoop(e, "error"), this.isDebuggingEnabled = new C(t, r).isDebuggingEnabled()
                }
                return e.prototype.debug = function() {
                    for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                    this.isDebuggingEnabled && this.log.apply(this, I([this.logLogger, P.DEBUG], e))
                }, e.prototype.error = function() {
                    for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                    this.log.apply(this, I([this.errorLogger, P.ERROR], e))
                }, e.prototype.log = function(e, t) {
                    for (var r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];
                    e.apply(void 0, I(["%c" + this.context, this.style(t), t + ":"], r))
                }, e.prototype.getMethodOrNoop = function(e, t) {
                    if (!e) return j;
                    if ("object" != typeof e) return j;
                    var r = e[t];
                    return "function" != typeof r ? j : r
                }, e.prototype.style = function(e) {
                    return "display: inline-block; color: #fff; background: " + _[e] + "; padding: 1px 4px; border-radius: 3px;"
                }, e
            }(),
            F = function() {
                function e(e) {
                    this.trackJsInstance = this.createInstanceAndTrackUsage(e)
                }
                return e.prototype.error = function(e) {
                    this.trackJsInstance.track(e)
                }, e.prototype.createInstanceAndTrackUsage = function(e) {
                    var t = e.trackJsErrorLoggerFactory,
                        r = e.application,
                        i = e.version,
                        n = e.metadata;
                    if (!t) throw new Error("trackJsErrorLoggerFactory needs to be provided");
                    return t.createLoggerInstance({
                        application: r,
                        version: i,
                        metadata: n || []
                    })
                }, e
            }(),
            B = function() {
                function e(e) {
                    this.options = e, this.window = window, this.console = console;
                    var t = this.options,
                        r = t.trackJsErrorLoggerFactory,
                        i = t.application;
                    if (this.consoleLogger = new D(this.console, i, this.getQueryString()), r) try {
                        this.trackJsErrorLogger = new F(this.options)
                    } catch (e) {
                        throw this.consoleLogger.error("TrackJS instantiation failed: ", e), e
                    } else this.consoleLogger.debug("Remote error logging is disabled.")
                }
                return e.prototype.debug = function() {
                    for (var e, t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];
                    (e = this.consoleLogger).debug.apply(e, t)
                }, e.prototype.error = function(e) {
                    var t;
                    if (e) {
                        this.consoleLogger.error("[KA frontend-logging ConsoleLogger]", e);
                        var r = this.getAsError(e);
                        try {
                            null === (t = this.trackJsErrorLogger) || void 0 === t || t.error(r)
                        } catch (e) {
                            throw this.consoleLogger.error("Error logging failed: ", e), e
                        }
                    }
                }, e.prototype.getAsError = function(e) {
                    return e instanceof Error || "object" == typeof e && null !== e ? e : new Error("" + e)
                }, e.prototype.getQueryString = function() {
                    return this.window.location.search
                }, e
            }();
        ! function(e) {
            e.PROD = "production", e.NONPROD = "none", e.DEV = "development"
        }(L || (L = {}));
        let N = class {
            constructor() {
                this.libertyJsLoggingApplicationKey = "libertyjs"
            }
            getVersion() {
                return this.requireEnvVar("44.47.2", "PACKAGE_VERSION")
            }
            isProduction() {
                return this.requireEnvVar("production", "LIBERTY_ENV") === L.PROD
            }
            getLoggingApplicationKey() {
                return this.libertyJsLoggingApplicationKey
            }
            getRetailMediaWebRendererBaseUrl() {
                return this.requireEnvVar("https://d1sn3df1v3lass.cloudfront.net", "RETAIL_MEDIA_WEB_RENDERER_BASE_URL")
            }
            getRelperEcpmPredictionApiBaseUrl() {
                return this.requireEnvVar("https://advertising.kleinanzeigen.de/relper/ecpm", "RELPER_ECPM_PREDICTION_API_BASE_URL")
            }
            requireEnvVar(e, t) {
                if ("" === e || void 0 === e) throw new Error(`${t} not set`);
                return e
            }
        };
        N = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], N);
        const M = N;
        let x = class {
            constructor(e) {
                this.env = e
            }
            init(e, t, r, i, n, s) {
                if (this.customErrorLogger = s, t && !r) throw new Error("TrackJs enabled but no trackJsErrorLoggerFactory given");
                this.kaLogger = new B({
                    trackJsErrorLoggerFactory: t ? r : void 0,
                    application: this.env.getLoggingApplicationKey(),
                    version: this.env.getVersion(),
                    metadata: [{
                        key: "hostApplicationName",
                        value: e
                    }, {
                        key: "libertyTrafficSplitGroup",
                        value: i
                    }, {
                        key: "adblock",
                        value: n ? "on" : "off"
                    }]
                })
            }
            debug() {
                for (var e, t = arguments.length, r = new Array(t), i = 0; i < t; i++) r[i] = arguments[i];
                if (!this.kaLogger) throw console.debug(r), new Error("Logger not yet initialized.");
                null === (e = this.kaLogger) || void 0 === e || e.debug(...r)
            }
            error(e) {
                var t;
                if (this.customErrorLogger && this.customErrorLogger(e), !this.kaLogger) throw console.error(e), new Error("Logger not yet initialized.");
                null === (t = this.kaLogger) || void 0 === t || t.error(e)
            }
        };
        x = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [M])], x);
        const G = x;
        const z = {
                features: {},
                adblockEnabled: !1,
                slots: [],
                activeLabsExperiments: {}
            },
            W = {
                lazy: !1
            };
        let U = class {
            constructor(e) {
                this.logger = e
            }
            initialize(e, t, r) {
                let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [];
                this.config = e, this.options = Object.assign({}, z, t), this.trackers = i, this.featureOptions = r
            }
            getOptions() {
                return this.requireValue(this.options, "store.options")
            }
            getFeatureOptions() {
                return this.requireValue(this.featureOptions, "store.options.features")
            }
            isAdblockerEnabled() {
                return this.getOptions().adblockEnabled
            }
            isInitialFullConsentGiven() {
                return this.getFeatureOptions().tracking.isInitialFullConsentGiven
            }
            isFeatureEnabled(e) {
                return !!this.getFeatureOptions()[e]
            }
            getIabCategoryIds() {
                var e;
                return null !== (e = this.getConfig().iab2CategoryIds) && void 0 !== e ? e : []
            }
            getClickTrackingImprovementLabsVariant() {
                return this.getFeatureOptions().clickTrackingImprovementLabsVariant
            }
            getExperimentVariant(e) {
                const t = this.getOptions().activeLabsExperiments || {};
                return Object.keys(t).includes(e) ? t[e] : (this.logger.debug(`"${e}" is not an active experiment.`), "")
            }
            getPlatform() {
                return this.getConfig().platform
            }
            getTrackers() {
                return this.requireValue(this.trackers, "store.trackers")
            }
            getPageType() {
                return this.getConfig().pageType
            }
            getGroupName() {
                return this.getConfig().groupName
            }
            getPageLevelSettings(e) {
                const {
                    pageLevelSettings: t
                } = this.getConfig(), r = t.find((t => t.type === e));
                return void 0 === r ? {} : r.settings
            }
            getPrebidOptions() {
                return this.getOptions().prebid
            }
            getSlotSize(e) {
                const {
                    maxWidth: t,
                    maxHeight: r
                } = this.getSlotOptionsByPositionName(e);
                if (t && r) return {
                    maxWidth: t,
                    maxHeight: r
                }
            }
            getRefreshIntervalTime() {
                return this.getConfig().pageLevelSettings.map((e => e.settings.refreshInterval)).filter((e => e))[0]
            }
            getSlotOptionsByPositionName(e) {
                const t = (this.getOptions().slots || []).find((t => t.positionNameMatcher.test(e)));
                return Object.assign(Object.assign({}, W), t)
            }
            getSlotConfigs() {
                return this.getConfig().slots || []
            }
            getReportingBasePath() {
                return this.getFeatureOptions().tracking.sendMetricsBaseUrl
            }
            getTrackingFeature() {
                return this.getFeatureOptions().tracking
            }
            getBreakpointFeature() {
                var e;
                return null !== (e = this.getFeatureOptions().breakpointHandling) && void 0 !== e ? e : {
                    enabled: !1
                }
            }
            getFirstPartyRenderingFeature() {
                return this.getFeatureOptions().firstPartyRendering
            }
            getQuery(e) {
                if (!Array.isArray(e) || 0 === e.length) throw Error("[Store] No advertisers given to Store#getQuery");
                const t = e[0].type;
                return this.getPageLevelSettings(t).query
            }
            getConfig() {
                return this.requireValue(this.config, "store.config")
            }
            requireValue(e, t) {
                if (void 0 === e) throw new Error(`Access to ${t} error. Store not yet initialized.`);
                return e
            }
        };
        U = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G])], U);
        const V = U;
        let $ = class {
            set(e) {
                this.window = e
            }
            get() {
                return void 0 === this.window ? window : this.window
            }
        };
        $ = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], $);
        const q = $;
        let H = class {
            set(e) {
                this.document = e
            }
            get() {
                return void 0 === this.document ? document : this.document
            }
            whenDomReady() {
                return new Promise((e => {
                    const t = this.get();
                    "complete" !== t.readyState && "interactive" !== t.readyState || e();
                    const r = () => {
                        e(), E.resolve(q).get().removeEventListener("DOMContentLoaded", r)
                    };
                    E.resolve(q).get().addEventListener("DOMContentLoaded", r)
                }))
            }
        };
        H = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], H);
        const Q = H;
        var K;
        ! function(e) {
            e.AAX = "aax", e.CLICK_TRACKING = "clickTracking", e.CLICK_DETECTION_IMPROVEMENT_LABS_VARIANT = "clickTrackingImprovementLabsVariant", e.USE_SMART_FLOOR_PRICE = "useSmartFloorPrice", e.TRACKING = "tracking", e.BREAKPOINT_HANDLING = "breakpointHandling", e.REFRESHMENT = "refreshment"
        }(K || (K = {}));
        const Y = K;
        let J, Z = class {
            constructor(e, t) {
                this.logger = e, this.windowWrapper = t
            }
            start(e, t) {
                void 0 !== J && this.logger.debug("Refresh interval already running, did you forget stopping it first?"), this.logger.debug(`Start refresh interval of ${e}ms...`), J = this.windowWrapper.get().setInterval((() => {
                    t()
                }), e)
            }
            stop() {
                void 0 !== J && (this.logger.debug("Stop refresh interval"), this.windowWrapper.get().clearInterval(J), J = void 0)
            }
        };
        Z = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, q])], Z);
        const X = Z;
        let ee = class {
            constructor(e, t, r) {
                this.store = e, this.intervalLoader = t, this.logger = r
            }
            enableRefreshing(e, t) {
                const r = this.store.getRefreshIntervalTime();
                this.setupIntervalRefresh(r, e, t)
            }
            setupIntervalRefresh(e, t, r) {
                this.intervalLoader.stop(), this.store.isFeatureEnabled(Y.REFRESHMENT) ? e && this.intervalLoader.start(e, (() => {
                    const e = r.filter((e => e.getRefreshCapability().isRefreshPossible()));
                    t.fill(e)
                })) : this.logger.debug("Feature refreshment is disabled!")
            }
        };
        ee = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, X, G])], ee);
        const te = ee;
        var re, ie;
        ! function(e) {
            e.V1 = "v1", e.CONTROL = "c", e.DEFAULT = "d"
        }(re || (re = {})),
        function(e) {
            e.ADSENSE_WEB = "adsense_web", e.AFFILIATESHUB_WEB = "affiliateshub_web", e.DISPLAY_WEB = "display_web", e.DISPLAY_WEB_PREBID = "display_web_prebid", e.DISPLAY_WEB_HUBVISOR = "display_web_hubvisor", e.ADBLOCK_CRITEO_WEB = "adblock_criteo_web", e.DISPLAY_WEB_AAX = "display_web_aax", e.IGNITE_WEB = "ignite_web", e.IGNITE_MWEB = "ignite_mweb", e.DISPLAY_WEB_AMAZON = "display_web_amazon", e.DISPLAY_WEB_UNIFIED_AUCTION = "display_web_unified_auction", e.RETAIL_MEDIA_WEB = "retailmedia_web", e.BING_WEB = "bing_web", e.FIRST_PARTY_PLA = "first_party_pla"
        }(ie || (ie = {}));
        const ne = ie,
            se = Object.values(ie);
        var oe;
        ! function(e) {
            e.AD_BLOCKER_ACTIVE = "adblockerActive", e.ADVERTISER_REQUESTS = "advertiserRequests", e.ADVERTISER_CLICKS = "advertiserClicks", e.DONE_TIME = "doneTime", e.ADVERTISER_FILLS = "advertiserFills", e.DURATION_FROM_FIRST_JS_TO_LIBERTY_INIT = "durationFromFirstJsToLibertyInit", e.MISSING_QUERY = "missingQuery", e.FILL_PREPARATION_COMPLETED = "fillPreparationCompleted", e.INTERSTITIAL_EVENT = "interstitialEvent", e.INTERSTITIAL_IMPRESSION = "interstitialImpression"
        }(oe || (oe = {}));
        const ae = oe;
        var ce;
        let le = ce = class {
            constructor() {
                this.logger = E.resolve(G), this.observers = [], this.advertiserRequests = ce.initializeCounterByAdvertiserTypes(), this.missingQuery = ce.initializeCounterByAdvertiserTypes(), this.adblockerActive = 0, this.advertiserClicks = [], this.advertiserFills = [], this.startTime = void 0, this.endTime = void 0, this.notifyObservers = this.notifyObservers.bind(this)
            }
            static initializeCounterByAdvertiserTypes() {
                return se.reduce(((e, t) => (e[t] = 0, e)), {})
            }
            recordInterstitialEvent(e) {
                const t = e.join("_");
                this.notifyObservers({
                    type: ae.INTERSTITIAL_EVENT,
                    value: t
                })
            }
            recordInterstitialImpression(e) {
                const t = 0 === e.length ? "empty" : e.join("_");
                this.notifyObservers({
                    type: ae.INTERSTITIAL_IMPRESSION,
                    value: t
                })
            }
            incrementAdvertiserRequestMetric(e) {
                this.validate(e.type), this.advertiserRequests[e.type] += 1, this.notifyObservers({
                    type: ae.ADVERTISER_REQUESTS,
                    value: this.buildAdvertiserData(e)
                })
            }
            incrementMissingQuery(e) {
                this.validate(e), this.missingQuery[e] += 1, this.notifyObservers({
                    type: ae.MISSING_QUERY,
                    value: {
                        advertiserType: e
                    }
                })
            }
            incrementAdvertiserFillMetric(e, t) {
                const r = this.buildAdvertiserData(e),
                    i = Object.assign(Object.assign({}, r), {
                        slotRefreshCount: e.slotRefreshCount,
                        slotInitLoadingDuration: this.normalizeDuration(null == t ? void 0 : t.slotInitLoadingDuration),
                        slotHeaderBiddingLoadingDuration: this.normalizeDuration(null == t ? void 0 : t.slotHeaderBiddingLoadingDuration),
                        slotGamLoadingDuration: this.normalizeDuration(null == t ? void 0 : t.slotGamLoadingDuration),
                        slotLoadingDuration: this.normalizeDuration(null == t ? void 0 : t.slotLoadingDuration),
                        slotTotalLoadingDuration: this.normalizeDuration(null == t ? void 0 : t.slotTotalLoadingDuration)
                    });
                this.advertiserFills.push(i), this.notifyObservers({
                    type: ae.ADVERTISER_FILLS,
                    value: i
                })
            }
            getAdvertiserFills() {
                return this.advertiserFills
            }
            incrementAdvertiserClickMetric(e) {
                const t = this.buildAdvertiserData(e);
                this.advertiserClicks.push(t), this.notifyObservers({
                    type: ae.ADVERTISER_CLICKS,
                    value: t
                })
            }
            recordExecutionStart(e) {
                this.startTime = (new Date).getTime(), this.notifyObservers({
                    type: ae.DURATION_FROM_FIRST_JS_TO_LIBERTY_INIT,
                    value: this.startTime - e
                })
            }
            recordExecutionEnd() {
                this.endTime = (new Date).getTime(), void 0 !== this.startTime && this.notifyObservers({
                    type: ae.DONE_TIME,
                    value: this.endTime - this.startTime
                })
            }
            getAdvertiserClicks() {
                return this.advertiserClicks
            }
            setAdblockerActive() {
                this.adblockerActive = 1, this.notifyObservers({
                    type: ae.AD_BLOCKER_ACTIVE,
                    value: 1
                })
            }
            sendFillPreparationsCompleted() {
                this.notifyObservers({
                    type: ae.FILL_PREPARATION_COMPLETED,
                    value: null
                })
            }
            setAdblockerInactive() {
                this.adblockerActive = 0, this.notifyObservers({
                    type: ae.AD_BLOCKER_ACTIVE,
                    value: 0
                })
            }
            getAdblockerActiveMetric() {
                return this.adblockerActive
            }
            getAdvertiserRequestsMetrics() {
                return this.advertiserRequests
            }
            getMissingQueryMetrics() {
                return this.missingQuery
            }
            onChange(e) {
                this.observers.push(e)
            }
            buildAdvertiserData(e) {
                return {
                    adSettingId: e.adSettingId,
                    adSettingName: e.adSettingName,
                    advertiserType: e.type,
                    positionName: e.positionName,
                    positionId: e.positionId,
                    positionTrackingCode: e.trackingCode,
                    isBackfill: e.isBackfill
                }
            }
            notifyObservers(e) {
                this.logger.debug("Publish event", e), this.observers.forEach((t => {
                    t(e)
                }))
            }
            validate(e) {
                if (void 0 === this.advertiserRequests[e]) throw new Error(`Unknown advertiser type '${e}'. Pick one of: ${se}`)
            }
            normalizeDuration(e) {
                return !e || e < 0 ? 0 : e
            }
        };
        le = ce = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [])], le);
        const de = le;
        class ue {
            constructor(e, t) {
                this.clickDetector = e, this.enabled = t, this.metrics = E.resolve(de)
            }
            setupClickTracking(e) {
                this.enabled && e.onLoadDone((t => {
                    t.isFilled && this.clickDetector.startDetectingClicks(e.containerId, (() => {
                        this.metrics.incrementAdvertiserClickMetric(t.advertiser)
                    }))
                }))
            }
        }
        class ge {
            constructor(e) {
                this.isMouseIn = !1, this.keyPressedCount = 0, this.logger = e
            }
            startDetectingClicks(e, t) {
                this.clickDetectorListener = t;
                const r = document.getElementById(e);
                if (null === r) {
                    const t = new Error(`Container #${e} not found for click tracking.`);
                    throw this.logger.error(t), t
                }
                this.setupOnVisibilityChangeEventListenerToDetectClicks(), this.setupMouseEnterAndLeaveEventsToEnableVisibilityChangeListener(r)
            }
            setupMouseEnterAndLeaveEventsToEnableVisibilityChangeListener(e) {
                document.addEventListener("keydown", (() => {
                    this.keyPressedCount += 1
                })), document.addEventListener("keyup", (() => {
                    this.keyPressedCount -= 1
                })), e.addEventListener("mouseenter", (() => {
                    this.isMouseIn = !0
                })), e.addEventListener("mouseleave", (() => {
                    this.isMouseIn = !1
                }))
            }
            setupOnVisibilityChangeEventListenerToDetectClicks() {
                window.document.addEventListener("visibilitychange", (() => {
                    this.isMouseIn && document.hidden && 0 === this.keyPressedCount && this.triggerClick()
                })), window.addEventListener("beforeunload", (() => {
                    this.isMouseIn && 0 === this.keyPressedCount && this.triggerClick()
                }))
            }
            triggerClick() {
                this.clickDetectorListener && this.clickDetectorListener()
            }
        }
        class he {
            constructor() {
                this.handleKeydown = () => {
                    this.keyPressedCount += 1
                }, this.handleKeyup = () => {
                    this.keyPressedCount -= 1
                }, this.handleMouseEnter = () => {
                    this.isMouseIn = !0
                }, this.handleMouseLeave = () => {
                    this.isMouseIn = !1
                }, this.handleVisibilityChange = () => {
                    this.isMouseIn && document.hidden && 0 === this.keyPressedCount && this.triggerClick()
                }, this.isMouseIn = !1, this.keyPressedCount = 0
            }
            startDetectingClicks(e, t) {
                this.clickDetectorListener = t;
                const r = document.getElementById(e);
                if (null === r) throw new Error(`Container #${e} not found for click tracking.`);
                this.observeIframesAndRemoveListenersIfIframeIsRemoved(r), this.setupOnVisibilityChangeEventListenerToDetectClicks(), this.setupMouseEnterAndLeaveEventsToEnableVisibilityChangeListener(r)
            }
            observeIframesAndRemoveListenersIfIframeIsRemoved(e) {
                const t = new MutationObserver((r => {
                    r.forEach((r => {
                        r.removedNodes.forEach((() => {
                            this.removeListeners(e), t.disconnect()
                        }))
                    }))
                }));
                t.observe(e, {
                    subtree: !1,
                    childList: !0
                })
            }
            removeListeners(e) {
                document.removeEventListener("keydown", this.handleKeydown, !1), document.removeEventListener("keyup", this.handleKeyup, !1), window.document.removeEventListener("visibilitychange", this.handleVisibilityChange, !1), e.removeEventListener("mouseenter", this.handleMouseEnter, !1), e.removeEventListener("mouseleave", this.handleMouseLeave, !1)
            }
            setupMouseEnterAndLeaveEventsToEnableVisibilityChangeListener(e) {
                document.addEventListener("keydown", this.handleKeydown, !1), document.addEventListener("keyup", this.handleKeyup, !1), e.addEventListener("mouseenter", this.handleMouseEnter, !1), e.addEventListener("mouseleave", this.handleMouseLeave, !1)
            }
            setupOnVisibilityChangeEventListenerToDetectClicks() {
                window.document.addEventListener("visibilitychange", this.handleVisibilityChange), window.addEventListener("beforeunload", (() => {
                    this.isMouseIn && !this.keyPressedCount && this.triggerClick()
                }))
            }
            triggerClick() {
                this.clickDetectorListener && this.clickDetectorListener()
            }
        }
        var fe;
        ! function(e) {
            e.BROWSER_NAVIGATION_START = "libertyPerformanceBrowserNavigationStart", e.SLOT_LOADING_START = "slotLoadingStart", e.SLOT_BIDDING_ENDED = "slotBiddingEnded", e.SLOT_RENDER_ENDED_EVENT = "slotRenderEndedEvent", e.SLOT_LOADING_ENDED = "slotLoadingEnded"
        }(fe || (fe = {}));
        let pe = class {
            constructor(e, t) {
                this.logger = e, this.windowWrapper = t
            }
            loadingAll(e) {
                e.forEach((e => {
                    this.markSlot(fe.SLOT_LOADING_START, e.containerId)
                }))
            }
            loading(e) {
                return this.markSlot(fe.SLOT_LOADING_START, e)
            }
            biddingDone(e) {
                return this.markSlot(fe.SLOT_BIDDING_ENDED, e)
            }
            renderingDone(e) {
                return this.markSlot(fe.SLOT_RENDER_ENDED_EVENT, e)
            }
            loadingDone(e) {
                return this.markSlot(fe.SLOT_LOADING_ENDED, e)
            }
            markSlot(e, t) {
                try {
                    this.getPerformance().mark(this.createSlotMarkName(e, t))
                } catch (e) {
                    this.logger.debug("Browser does not support performance measurement. Ignoring...", e)
                }
            }
            createSlotMarkName(e, t) {
                return `${e}-${t}`
            }
            getPerformance() {
                return this.windowWrapper.get().performance
            }
        };
        pe = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, q])], pe);
        const ye = pe;
        let ve = class {
            constructor(e, t) {
                this.logger = e, this.libertyPerformanceMarker = t
            }
            getPerformanceDurationList(e) {
                if ("function" == typeof this.libertyPerformanceMarker.getPerformance().measure) return {
                    slotInitLoadingDuration: this.getDuration("slotInitLoading", fe.BROWSER_NAVIGATION_START, fe.SLOT_LOADING_START, e),
                    slotHeaderBiddingLoadingDuration: this.getDuration("libertyHeaderBidding", fe.SLOT_LOADING_START, fe.SLOT_BIDDING_ENDED, e),
                    slotGamLoadingDuration: this.getDuration("libertyGamLoading", fe.SLOT_BIDDING_ENDED, fe.SLOT_RENDER_ENDED_EVENT, e),
                    slotGamFirstPartyDuration: this.getDuration("libertySlotThirdParty", fe.SLOT_RENDER_ENDED_EVENT, fe.SLOT_LOADING_ENDED, e),
                    slotLoadingDuration: this.getDuration("libertySlotLoading", fe.SLOT_LOADING_START, fe.SLOT_LOADING_ENDED, e),
                    slotTotalLoadingDuration: this.getDuration("libertyTotalSlotLoading", fe.BROWSER_NAVIGATION_START, fe.SLOT_LOADING_ENDED, e)
                };
                this.logger.debug("performance.measure is undefined! Browser does not support performance measurement. Ignoring...")
            }
            getDuration(e, t, r, i) {
                try {
                    const n = this.libertyPerformanceMarker.getPerformance().measure(e, this.getStartSlotPerformanceMark(t, i), this.getSlotPerformanceMark(r, i)).duration;
                    return Math.round(n)
                } catch (e) {
                    return 0
                }
            }
            getStartSlotPerformanceMark(e, t) {
                return e === fe.BROWSER_NAVIGATION_START ? this.getNavigationStartMark() : this.getSlotPerformanceMark(e, t)
            }
            getNavigationStartMark() {
                return this.libertyPerformanceMarker.getPerformance().getEntriesByName(fe.BROWSER_NAVIGATION_START).length > 0 ? fe.BROWSER_NAVIGATION_START : void 0
            }
            getSlotPerformanceMark(e, t) {
                return this.libertyPerformanceMarker.createSlotMarkName(e, t)
            }
        };
        ve = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, ye])], ve);
        const me = ve,
            be = "liberty-filled",
            Re = "liberty-unfilled";
        class Ae {
            isVisible(e) {
                var t;
                return !1 !== (null === (t = e.checkVisibility) || void 0 === t ? void 0 : t.call(e))
            }
            setVisibility(e, t) {
                t ? (e.classList.remove(Re), e.classList.add(be)) : (e.classList.add(Re), e.classList.remove(be))
            }
            cleanVisibility(e) {
                e.classList.remove(Re), e.classList.remove(be)
            }
        }
        const we = [/^id$/, /^data-liberty-.*$/, /^class$/];
        class Se {
            constructor(e, t) {
                this.positionName = e, this.breakpointFeature = t, this.documentWrapper = E.resolve(Q), this.htmlSlotVisibility = E.resolve(Ae)
            }
            isPresentInDom() {
                return !!this.getDomElement()
            }
            isVisible() {
                const e = this.getDomElementOrThrow();
                return this.htmlSlotVisibility.isVisible(e)
            }
            setContainerId(e) {
                this.checkTheValidityOfTheContainerId(e), this.getDomElementOrThrow().id = e
            }
            cleanContainer() {
                const e = this.getDomElementOrThrow(),
                    t = e.attributes;
                for (let r = t.length - 1; r >= 0; r--) {
                    const i = t[r].name;
                    !we.some((e => e.test(i))) && e.removeAttribute(i)
                }
            }
            setVisibility(e) {
                const t = this.domElementWithParent();
                this.htmlSlotVisibility.setVisibility(t, e)
            }
            cleanVisibility() {
                const e = this.domElementWithParent();
                this.htmlSlotVisibility.cleanVisibility(e)
            }
            getDomElementOrThrow() {
                const e = this.getDomElement();
                if (null === e) throw new Error(`DOM element ${this.domElementQuery()} does not exist`);
                return e
            }
            domElementWithParent() {
                const e = this.getDomElementOrThrow(),
                    t = e.getAttribute("data-liberty-parent-selector");
                return t ? this.getParentElementFor(e, t) : e
            }
            getParentElementFor(e, t) {
                const r = e.closest(t);
                if (!r) throw new Error(`Slot ${this.positionName}: No parent element found for "${t}"`);
                return r
            }
            getDomElement() {
                return this.documentWrapper.get().querySelector(this.domElementQuery())
            }
            checkTheValidityOfTheContainerId(e) {
                const t = this.documentWrapper.get().getElementById(e);
                if (null !== t && t !== this.getDomElement()) throw new Error(`A DOM element with ID ${e} already exists. Make sure to use a non-existing ID.`);
                if (!/^[a-zA-Z_]/.test(e)) throw new Error(`A DOM element with ID ${e} is not valid. Must start with a letter (a-z or A-Z) or an underscore (_)`)
            }
            domElementQuery() {
                return `[data-liberty-position-name="${this.positionName}"]`
            }
        }
        var Ee;
        ! function(e) {
            e.AMAZON_PUBLISHER_SERVICES_TAG = "apstag", e.ADVERTISING_WEB_RENDERER = "AdvertisingWebRenderer", e.PREBID = "pbjs", e.GOOGLE_TAG = "googletag", e.ADSENSE = "_googCsa", e.CRITEO = "Criteo", e.AAX = "aax", e.Hubvisor = "Hubvisor", e.RETAIL_MEDIA_WEB_RENDERER = "RetailMediaWebRenderer"
        }(Ee || (Ee = {}));
        const Te = Ee;
        let Oe = class {
            constructor(e) {
                this.windowWrapper = e
            }
            loadFromWindow(e) {
                let {
                    identifier: t,
                    name: r
                } = e;
                const i = this.extractWindowElement(t);
                if (!i) throw new Error(`${r} with ID window.${t} is not present and thus could not be loaded.`);
                return i
            }
            extractWindowElement(e) {
                return this.windowWrapper.get()[e]
            }
        };
        Oe = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [q])], Oe);
        const Ie = Oe;
        let ke = class {
            constructor(e) {
                this.windowLoader = e
            }
            load() {
                return this.windowLoader.loadFromWindow({
                    identifier: Te.ADSENSE,
                    name: "Adsense"
                })
            }
        };
        ke = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ie])], ke);
        const Pe = ke;
        class Ce {
            constructor(e) {
                this.advertisers = e, this.promisesByContainerId = this.initializePromisesByContainerId(e)
            }
            containsContainerId(e) {
                return this.promisesByContainerId.has(e)
            }
            containsAdvertiserType(e) {
                return this.advertisers.some((t => t.type === e))
            }
            getAllContainerIds() {
                return Array.from(this.promisesByContainerId.keys())
            }
            getCurrentAdvertiser(e) {
                const t = this.advertisers.find((t => t.getContainerId() === e));
                if (void 0 === t) throw new Error(`Advertiser for container ${e} not found to communicate fetch result.`);
                return t
            }
            markContainerAs(e, t) {
                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                this.getPromiseOrThrow(e, `Container #${e} is not initialized for marking it as (un)filled.`).resolve({
                    containerId: e,
                    advertiser: this.getCurrentAdvertiser(e),
                    filled: t,
                    fillInformation: r
                })
            }
            markAllContainersAsUnfilled(e) {
                e.forEach((e => {
                    this.markContainerAs(e, !1)
                }))
            }
            reject(e) {
                this.getPromiseOrThrow(e, `Container #${e} is not initialized for marking it as (un)filled.`).reject({
                    containerId: e,
                    advertiser: this.getCurrentAdvertiser(e),
                    filled: !1,
                    fillInformation: {}
                })
            }
            abortAll() {
                this.advertisers.forEach((e => {
                    this.markContainerAs(e.getContainerId(), !1)
                }))
            }
            getPromises() {
                return [...this.promisesByContainerId.values()].map((e => e.promise))
            }
            getPromiseOrThrow(e, t) {
                const r = this.promisesByContainerId.get(e);
                if (void 0 === r) throw new Error(t);
                return r
            }
            initializePromisesByContainerId(e) {
                const t = new Map;
                return e.forEach((e => {
                    let r = null,
                        i = null;
                    const n = {
                        promise: new Promise(((e, t) => {
                            r = e, i = t
                        })),
                        resolve: r,
                        reject: i
                    };
                    t.set(e.getContainerId(), n)
                })), t
            }
        }
        class _e {
            fetchAd(e) {
                return this.fetchAds([e])[0]
            }
            fetchAds(e) {
                if (!Array.isArray(e) || 0 === e.length) return [];
                const t = new Ce(e);
                return this._fetch(e, t), t.getPromises()
            }
            _fetch(e, t) {
                throw new Error("Not implemented")
            }
        }
        let je = class extends _e {
            constructor(e) {
                super(), this.adsenseTagLoader = e, this.logger = E.resolve(G), this.environment = E.resolve(M), this.store = E.resolve(V), this.metrics = E.resolve(de), this.getAdvertiserConfigSettings = e => e.map((e => e.settings.width ? e.settings : this.injectDomElementWidth(e)))
            }
            getAdvertiserType() {
                return ne.ADSENSE_WEB
            }
            _fetch(e, t) {
                if (!this.isValid(e)) return void this.abortAll(t, e);
                const r = this.adsenseTagLoader.load(),
                    i = this.getSortedAdvertisers(e),
                    n = this.getAdvertiserConfigSettings(i);
                r("ads", Object.assign(Object.assign({
                    adtest: this.environment.isProduction() ? "off" : "on"
                }, this.getPageLevelSettingsFromStore(i)), {
                    adLoadedCallback: (e, r) => {
                        t.markContainerAs(e, r)
                    }
                }), n), this.logger.debug(`[AdsenseFetcher] Load ads for ${i.length} slot(s) of type ${i.map((e=>e.type))[0]}`)
            }
            getSortedAdvertisers(e) {
                const t = [],
                    r = e.map((e => `#${e.getContainerId()}`)).join(","),
                    i = document.querySelectorAll(r);
                return Array.from(i).forEach((r => {
                    const i = e.find((e => e.getContainerId() === r.id));
                    i ? t.push(i) : this.logger.error(`[AdsenseFetcher] ${r.id} not found in advertisers list`)
                })), t
            }
            injectDomElementWidth(e) {
                const t = document.getElementById(e.getContainerId()),
                    r = null == t ? void 0 : t.getBoundingClientRect().width;
                return void 0 !== r ? Object.assign(Object.assign({}, e.settings), {
                    width: r
                }) : (this.logger.error(`[AdsenseFetcher] width not defined for slot ${e.getContainerId()}`), e.settings)
            }
            isValid(e) {
                const t = this.store.getQuery(e);
                return !!(null == t ? void 0 : t.trim())
            }
            abortAll(e, t) {
                e.abortAll(), t.forEach((e => this.metrics.incrementMissingQuery(e.type)));
                const r = t.map((e => e.type));
                this.logger.error(`[Adsense] Abort due to missing query for advertiser types { ${r} }`)
            }
            getPageLevelSettingsFromStore(e) {
                return this.store.getPageLevelSettings(e[0].type)
            }
        };
        je = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Pe])], je);
        const Le = je;
        let De = class {
            constructor(e) {
                this.documentWrapper = e
            }
            loadScriptOnce(e) {
                if (this.isScriptTagInDocument(e)) return;
                const t = this.documentWrapper.get().createElement("script");
                t.type = "text/javascript", t.async = !0, t.src = e, this.documentWrapper.get().head.appendChild(t)
            }
            isScriptTagInDocument(e) {
                return void 0 !== Array.from(document.scripts).find((t => t.src === e))
            }
        };
        De = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Q])], De);
        const Fe = De;
        let Be = class {
            constructor(e, t) {
                this.windowWrapper = e, this.scriptLoader = t
            }
            load() {
                const e = this.initializeStub(),
                    t = this.buildAaxEndpoint(e);
                return this.scriptLoader.loadScriptOnce(t), window[Te.AAX]
            }
            initializeStub() {
                this.windowWrapper.get()[Te.AAX] = this.windowWrapper.get()[Te.AAX] || {};
                const e = this.windowWrapper.get()[Te.AAX];
                return e.cmd = e.cmd || [], e.initTime = (new Date).getTime(), e.pubId = "AAX255244", e.ver = "1.2", e.hst = window.location.hostname, e
            }
            buildAaxEndpoint(e) {
                return `https://c.aaxads.com/aax.js?pub=${e.pubId}&hst=${e.hst}&ver=${e.ver}`
            }
        };
        Be = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [q, Fe])], Be);
        const Ne = Be;
        let Me = class {
            constructor(e, t, r, i) {
                this.store = e, this.environment = t, this.scriptLoader = r, this.windowWrapper = i
            }
            load() {
                const e = this.initializeStub(),
                    t = this.getAdvertisingWebRendererUrl();
                return this.scriptLoader.loadScriptOnce(t), e
            }
            initializeStub() {
                this.windowWrapper.get()[Te.ADVERTISING_WEB_RENDERER] = this.windowWrapper.get()[Te.ADVERTISING_WEB_RENDERER] || {};
                const e = this.windowWrapper.get()[Te.ADVERTISING_WEB_RENDERER];
                return e.slotSettingsQueue = e.slotSettingsQueue || [], e
            }
            getAdvertisingWebRendererUrl() {
                return this.store.getFirstPartyRenderingFeature().advertisingWebRendererUrl
            }
        };
        Me = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, M, Fe, q])], Me);
        const xe = Me;
        let Ge = class {
            constructor(e, t) {
                this.windowWrapper = e, this.logger = t
            }
            load() {
                return this.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG] || (this.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG] = this.buildProxy()), this.initTag(), this.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG]
            }
            buildProxy() {
                return {
                    _Q: [],
                    init: this.proxyToTag("init", (e => this.pushQueue("i", e))),
                    fetchBids: this.proxyToTag("fetchBids", (e => this.pushQueue("f", e))),
                    setDisplayBids: this.proxyToTag("setDisplayBids", (e => {
                        this.logger.error("Amazon script apstag needs to be loaded first before calling setDisplayBids()")
                    }))
                }
            }
            pushQueue(e, t) {
                var r;
                null === (r = this.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG]._Q) || void 0 === r || r.push([e, t])
            }
            proxyToTag(e, t) {
                var r = this;
                return function() {
                    const i = r.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG];
                    for (var n = arguments.length, s = new Array(n), o = 0; o < n; o++) s[o] = arguments[o];
                    void 0 === i._Q || void 0 !== i.bids ? (0, i[e])(...s) : t(s)
                }
            }
            initTag() {
                this.windowWrapper.get()[Te.AMAZON_PUBLISHER_SERVICES_TAG].init({
                    pubID: "5080",
                    adServer: "googletag"
                })
            }
        };
        Ge = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [q, G])], Ge);
        const ze = Ge;
        let We = class {
            constructor(e) {
                this.windowLoader = e
            }
            load() {
                return this.windowLoader.loadFromWindow({
                    identifier: Te.CRITEO,
                    name: Te.CRITEO
                })
            }
        };
        We = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ie])], We);
        const Ue = We;
        let Ve = class {
            constructor(e) {
                this.windowLoader = e
            }
            load() {
                return this.windowLoader.loadFromWindow({
                    identifier: Te.GOOGLE_TAG,
                    name: "Googletag"
                })
            }
        };
        Ve = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ie])], Ve);
        const $e = Ve;
        let qe = class {
            constructor(e) {
                this.windowLoader = e
            }
            load() {
                return this.windowLoader.loadFromWindow({
                    identifier: Te.Hubvisor,
                    name: "Hubvisor"
                })
            }
        };
        qe = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ie])], qe);
        const He = qe;
        let Qe = class {
            constructor(e) {
                this.windowLoader = e
            }
            load() {
                return this.windowLoader.loadFromWindow({
                    identifier: Te.PREBID,
                    name: "Prebid"
                })
            }
        };
        Qe = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ie])], Qe);
        const Ke = Qe;
        let Ye = class {
            constructor(e, t, r) {
                this.environment = e, this.scriptLoader = t, this.windowWrapper = r
            }
            load() {
                const e = this.initializeStub(),
                    t = this.getRetailMediaWebRendererBaseUrl();
                return this.scriptLoader.loadScriptOnce(t), e
            }
            initializeStub() {
                this.windowWrapper.get()[Te.RETAIL_MEDIA_WEB_RENDERER] = this.windowWrapper.get()[Te.RETAIL_MEDIA_WEB_RENDERER] || {};
                const e = this.windowWrapper.get()[Te.RETAIL_MEDIA_WEB_RENDERER];
                return e.slotSettingsQueue = e.slotSettingsQueue || [], e
            }
            getRetailMediaWebRendererBaseUrl() {
                return this.environment.getRetailMediaWebRendererBaseUrl() + "/retailMediaWebRenderer.min.js"
            }
        };
        Ye = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [M, Fe, q])], Ye);
        const Je = Ye,
            Ze = "liberty.ad.loaded",
            Xe = "ignite.auction.won",
            et = "adsense.auction.won";
        let tt = class {
            decodeMessage(e) {
                const t = {};
                return e.split(",").forEach((e => {
                    const [r, i] = e.split(":");
                    t[r] = i
                })), t
            }
        };
        tt = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], tt);
        const rt = tt;
        let it = class {
            constructor(e) {
                this.windowMessageDecoder = e
            }
            addPostMessageEventListener(e) {
                window.addEventListener("message", (t => {
                    t && t.data.event === Ze && this.handleOnMessage(t, e)
                }))
            }
            handleOnMessage(e, t) {
                const r = this.windowMessageDecoder.decodeMessage(e.data.info),
                    {
                        adtype: i,
                        status: n,
                        containerId: s
                    } = r;
                if (t.containsAdvertiserType(i) && t.containsContainerId(s))
                    if ("success" !== n)
                        if ("error" !== n) {
                            if ("failed" !== n) throw new Error(`Could not match message status { ${n} } to either { success }, { error }, or { failed }`);
                            t.reject(s)
                        } else t.markContainerAs(s, !1);
                else t.markContainerAs(s, !0)
            }
        };
        it = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [rt])], it);
        const nt = it;
        class st extends _e {
            constructor(e, t, r) {
                super(), this.advertisingWebRenderer = e, this.advertiserType = t, this.slotSettingsFactory = r, this.logger = E.resolve(G), this.store = E.resolve(V), this.advertisingWebRendererMessageHandler = E.resolve(nt)
            }
            getAdvertiserType() {
                return this.advertiserType
            }
            _fetch(e, t) {
                this.advertisingWebRendererMessageHandler.addPostMessageEventListener(t);
                const r = e.map((e => this.slotSettingsFactory.createSlotSettings(e)));
                this.logger.debug(`[${this.constructor.name}] Load '${this.getAdvertiserType()}' ads for ${r.length} slot(s)`, r), this.advertisingWebRenderer.slotSettingsQueue.push(...r)
            }
        }
        class ot {
            constructor() {
                this.store = E.resolve(V)
            }
            createSlotSettings(e) {
                const t = e.settings,
                    {
                        container: r
                    } = t,
                    i = function(e, t) {
                        var r = {};
                        for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (r[i] = e[i]);
                        if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                            var n = 0;
                            for (i = Object.getOwnPropertySymbols(e); n < i.length; n++) t.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[n]) && (r[i[n]] = e[i[n]])
                        }
                        return r
                    }(t, ["container"]);
                return Object.assign({
                    adType: e.type,
                    slotTrackingCode: e.trackingCode,
                    isBackfill: e.isBackfill,
                    scene: this.createSceneSetting(),
                    containerId: r
                }, i)
            }
            createSceneSetting() {
                return {
                    consentGdpr: this.store.isInitialFullConsentGiven() ? "FULL" : "NONE",
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    groupName: this.store.getGroupName()
                }
            }
        }
        const at = "_";
        class ct {
            constructor(e, t) {
                this.key = e, this.values = t.map((e => this.sanitize(e)))
            }
            asAdsenseChannel() {
                return [this.sanitize(this.key), ...this.values].join(at)
            }
            asGamKeyValue() {
                return {
                    key: this.key,
                    value: this.values.join(at)
                }
            }
            sanitize(e) {
                return e.replace(new RegExp(at, "g"), "-")
            }
        }
        class lt {
            static isDefined(e) {
                return null != e
            }
        }
        class dt {
            constructor(e) {
                this.igniteTrackingInformation = e
            }
            getIgniteTrackingInformation() {
                return this.igniteTrackingInformation
            }
        }
        let ut = class {
            create(e) {
                const t = e.map((e => e.icasTracking())).filter(lt.isDefined);
                return new dt(t)
            }
        };
        ut = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], ut);
        const gt = ut;
        let ht = class {
            constructor(e, t) {
                this.store = e, this.trackingAdTypeInformationFactory = t
            }
            createTrackingTags(e) {
                const t = this.getSlotCodeTrackingInformation(e),
                    r = [...this.getIgniteTrackingInformation(this.store.getTrackers()), t];
                return this.getDistinctExperimentTags(this.convertToIcasExperimentTags(r))
            }
            getDistinctExperimentTags(e) {
                return [...new Set(e)]
            }
            getIgniteTrackingInformation(e) {
                return this.trackingAdTypeInformationFactory.create(e).getIgniteTrackingInformation()
            }
            getSlotCodeTrackingInformation(e) {
                return new ct("stc", [e.trackingCode])
            }
            convertToIcasExperimentTags(e) {
                return e.map((e => e.asAdsenseChannel()))
            }
        };
        ht = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, gt])], ht);
        const ft = ht;
        class pt {
            constructor() {
                this.awrSlotSettingsFactory = E.resolve(ot), this.icasTrackingTagsFactory = E.resolve(ft)
            }
            createSlotSettings(e) {
                const {
                    icasExperimentTags: t
                } = e.settings, r = this.icasTrackingTagsFactory.createTrackingTags(e), i = t ? [...t, ...r] : r, n = this.awrSlotSettingsFactory.createSlotSettings(e);
                return Object.assign(Object.assign({}, n), {
                    icasExperimentTags: i
                })
            }
        }
        class yt extends _e {
            constructor(e, t) {
                super(), this.awrFetcher = new st(e, t, new pt)
            }
            getAdvertiserType() {
                return this.awrFetcher.getAdvertiserType()
            }
            _fetch(e, t) {
                this.awrFetcher._fetch(e, t)
            }
        }
        class vt extends yt {}
        class mt extends _e {
            constructor(e, t) {
                super(), this.awrFetcher = new st(e, t, new ot)
            }
            getAdvertiserType() {
                return this.awrFetcher.getAdvertiserType()
            }
            _fetch(e, t) {
                this.awrFetcher._fetch(e, t)
            }
        }

        function bt(e) {
            return e.map((e => Array.isArray(e) ? bt(e) : e)).reduce(((e, t) => e.concat(t)), [])
        }

        function Rt(e, t) {
            return () => {
                try {
                    e()
                } catch (e) {
                    t.error(e)
                }
            }
        }

        function At(e, t) {
            if (!t || 0 === t.length) return e;
            const [r, ...i] = t;
            return Object.prototype.hasOwnProperty.call(e, r) ? At(e[r], i) : void 0
        }

        function wt(e, t) {
            if (e.length !== t.length) return !1;
            for (let r = 0; r < e.length; r++)
                if (Array.isArray(e[r]) && Array.isArray(t[r])) {
                    if (!wt(e[r], t[r])) return !1
                } else if (e[r] !== t[r]) return !1;
            return !0
        }
        class St extends _e {
            constructor(e) {
                super(), this.criteo = e, this.logger = E.resolve(G)
            }
            _fetch(e, t) {
                this.validate() ? (e.forEach((e => {
                    const {
                        zoneid: r,
                        height: i,
                        width: n
                    } = e.settings, s = e.getContainerId(), o = {
                        zoneid: r,
                        containerid: s,
                        callbackSuccess: () => {
                            t.markContainerAs(s, !0), i && n && this.updateContainerIframeSize(s, i, n)
                        },
                        callbackError: () => {
                            t.markContainerAs(s, !1)
                        }
                    };
                    this.pushEvent((() => {
                        var e, t;
                        null === (t = (e = this.criteo).DisplayAcceptableAdIfAdblocked) || void 0 === t || t.call(e, o)
                    }))
                })), this.logger.debug(`[CriteoFetcher] Load ads for ${e.length} slot(s) of type ${e.map((e=>e.type))[0]}`)) : t.abortAll()
            }
            validate() {
                return "function" == typeof this.criteo.DisplayAcceptableAdIfAdblocked
            }
            updateContainerIframeSize(e, t, r) {
                const i = document.querySelector(`#${e} iframe`);
                void 0 !== i && (i.height = String(t), i.width = String(r))
            }
            pushEvent(e) {
                this.criteo.events.push(Rt(e, this.logger))
            }
            getAdvertiserType() {
                return ne.ADBLOCK_CRITEO_WEB
            }
        }
        let Et = class {
            constructor() {
                this.definedSlotsByContainerId = new Map
            }
            size() {
                return this.definedSlotsByContainerId.size
            }
            push(e, t, r, i, n) {
                this.definedSlotsByContainerId.set(e, {
                    slot: t,
                    sizes: r,
                    displayed: i,
                    outOfPageSlot: n
                })
            }
            remove(e) {
                if (this.isUndefined(e)) throw new Error(`GAM Slot '${e}' should be defined before removing it.`);
                this.definedSlotsByContainerId.delete(e)
            }
            getGamSlot(e) {
                return this.get(e).slot
            }
            getTargetings(e) {
                const t = this.getGamSlot(e);
                return t.getTargetingKeys().reduce(((e, r) => {
                    const i = t.getTargeting(r);
                    return Object.assign(Object.assign({}, e), {
                        [r]: i
                    })
                }), {})
            }
            getSizes(e) {
                return this.get(e).sizes
            }
            isUndefined(e) {
                return !this.definedSlotsByContainerId.has(e)
            }
            isDisplayed(e) {
                return this.isDefined(e) && this.get(e).displayed
            }
            isOutOfPageSlot(e) {
                return this.isDefined(e) && this.get(e).outOfPageSlot
            }
            markAsDisplayed(e) {
                if (this.isUndefined(e)) throw new Error(`GAM Slot '${e}' should be defined before mark as displayed.`);
                this.get(e).displayed = !0
            }
            get(e) {
                const t = this.definedSlotsByContainerId.get(e);
                if (void 0 === t) throw new Error(`GAM slot ${e} is not defined yet. Add it first to the registry before accessing it.`);
                return t
            }
            isDefined(e) {
                return !this.isUndefined(e)
            }
        };
        Et = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], Et);
        const Tt = Et;
        class Ot {
            constructor(e, t) {
                this.fetchResult = e, this.document = t, this.mutationObserverOptions = {
                    childList: !0
                }, this.mutationObserver = null, this.hasMutationObserver() && (this.mutationObserver = new MutationObserver(this.handleMutation.bind(this)))
            }
            observe(e) {
                const t = this.document.querySelector(`#${e}`);
                null !== this.mutationObserver && null !== t && this.mutationObserver.observe(t, this.mutationObserverOptions)
            }
            handleMutation(e) {
                e.forEach((e => {
                    const t = e.target;
                    if (!("getAttribute" in t)) return;
                    const r = t.getAttribute("id");
                    r && this.fetchResult.markContainerAs(r, !0)
                }))
            }
            hasMutationObserver() {
                return "MutationObserver" in window
            }
        }

        function It(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "property",
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
            if (! function(e) {
                    return null != e
                }(e)) throw new Error(r || `${t} should be defined`);
            return e
        }

        function kt(e) {
            return null != e
        }
        let Pt = class {
            constructor() {
                this.metrics = E.resolve(de)
            }
            recordInterstitialEventsAndSetUpImpressionTracking(e) {
                this.recordInterstitialEvents(e), this.setUpImpressionTracking(e)
            }
            recordInterstitialEvents(e) {
                e.length > 0 && this.metrics.recordInterstitialEvent(e)
            }
            setUpImpressionTracking(e) {
                const t = this.createPopstateHandler(e);
                window.addEventListener("popstate", t, !0), setTimeout((() => window.removeEventListener("popstate", t, !0)), 3e3)
            }
            createPopstateHandler(e) {
                return t => {
                    window.location.href.includes("#google_vignette") && this.metrics.recordInterstitialImpression(e)
                }
            }
        };
        Pt = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], Pt);
        const Ct = Pt;
        let _t = class {
            constructor() {
                this.interstitialMonitor = E.resolve(Ct), this.documentWrapper = E.resolve(Q), this.interstitialEvents = []
            }
            setUp(e) {
                this.interstitialEvents = e, this.setUpClickEventHandling(), this.interstitialEvents.some((e => e.isDisplayedOnUnhideWindow)) && this.setUpUnhideWindowEventHandling(), this.interstitialEvents.some((e => e.isDisplayedOnNavbarInteraction)) && this.setUpNavbarEventHandling()
            }
            setUpClickEventHandling() {
                this.documentWrapper.get().addEventListener("click", this.handleClick.bind(this), !0)
            }
            handleClick(e) {
                if (!((null == e ? void 0 : e.target) && e.target instanceof HTMLElement)) return;
                const t = e.target.closest("a[href]");
                if (!kt(t)) return;
                const r = this.getTriggeredNavigationEventNames(t);
                this.interstitialMonitor.recordInterstitialEventsAndSetUpImpressionTracking(r), 0 === r.length && this.disallowInterstitialDisplay(t)
            }
            getTriggeredNavigationEventNames(e) {
                return this.interstitialEvents.filter((e => kt(e.linkSelectQuery))).filter((t => e.matches(t.linkSelectQuery))).map((e => e.eventName))
            }
            disallowInterstitialDisplay(e) {
                e.setAttribute("data-google-interstitial", "false")
            }
            setUpUnhideWindowEventHandling() {
                this.documentWrapper.get().addEventListener("visibilitychange", this.handleVisibilityChange.bind(this), !0)
            }
            handleVisibilityChange() {
                this.documentWrapper.get().hidden || this.interstitialMonitor.recordInterstitialEventsAndSetUpImpressionTracking(["unhideWindow"])
            }
            setUpNavbarEventHandling() {
                this.documentWrapper.get().body.addEventListener("mouseleave", this.handleMouseLeave.bind(this), !1)
            }
            handleMouseLeave(e) {
                const t = this.documentWrapper.get().body.getBoundingClientRect().top + 10;
                e.isTrusted && e.clientY < t && this.interstitialMonitor.recordInterstitialEventsAndSetUpImpressionTracking(["navbar"])
            }
        };
        _t = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], _t);
        const jt = _t;
        var Lt;
        let Dt = Lt = class {
            constructor(e) {
                this.logger = e
            }
            getInterstitialEvent(e) {
                return Lt.interstitialEventConfigurations[e] || (this.logger.error(`Unknown interstitial event name '${e}'`), null)
            }
        };
        Dt.interstitialEventConfigurations = {
            nextSearchResultsPage: {
                eventName: "nextSearchResultsPage",
                isDisplayedOnUnhideWindow: !1,
                isDisplayedOnNavbarInteraction: !1,
                linkSelectQuery: "a[href*='seite\\:']"
            },
            mwebHomeGalleryToVip: {
                eventName: "mwebHomeGalleryToVip",
                isDisplayedOnUnhideWindow: !1,
                isDisplayedOnNavbarInteraction: !1,
                linkSelectQuery: ".adgallery--items a[href*='/s-anzeige/']"
            },
            unhideWindow: {
                eventName: "unhideWindow",
                isDisplayedOnUnhideWindow: !0,
                isDisplayedOnNavbarInteraction: !1
            },
            navbar: {
                eventName: "navbar",
                isDisplayedOnUnhideWindow: !1,
                isDisplayedOnNavbarInteraction: !0
            },
            mwebHomeCategoryModalToSrpb: {
                eventName: "mwebHomeCategoryModalToSrpb",
                isDisplayedOnUnhideWindow: !1,
                isDisplayedOnNavbarInteraction: !1,
                linkSelectQuery: ".modal--content .navlist--list a.navlist--item"
            },
            clickOrganicAd: {
                eventName: "clickOrganicAd",
                isDisplayedOnUnhideWindow: !1,
                isDisplayedOnNavbarInteraction: !1,
                linkSelectQuery: "a[href*='s-anzeige']"
            }
        }, Dt = Lt = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G])], Dt);
        const Ft = Dt;
        class Bt {
            constructor(e) {
                this.interstitialEvents = e
            }
            configureGamSlot(e) {
                const t = this.interstitialEvents.some((e => e.isDisplayedOnUnhideWindow)),
                    r = this.interstitialEvents.some((e => e.isDisplayedOnNavbarInteraction));
                e.setConfig({
                    interstitial: {
                        triggers: {
                            navBar: r,
                            unhideWindow: t
                        }
                    }
                })
            }
        }
        const Nt = {
            randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto)
        };
        let Mt;
        const xt = new Uint8Array(16);

        function Gt() {
            if (!Mt) {
                if ("undefined" == typeof crypto || !crypto.getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                Mt = crypto.getRandomValues.bind(crypto)
            }
            return Mt(xt)
        }
        const zt = [];
        for (let e = 0; e < 256; ++e) zt.push((e + 256).toString(16).slice(1));
        const Wt = function(e, t, r) {
            if (Nt.randomUUID && !t && !e) return Nt.randomUUID();
            const i = (e = e || {}).random || (e.rng || Gt)();
            if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {
                r = r || 0;
                for (let e = 0; e < 16; ++e) t[r + e] = i[e];
                return t
            }
            return function(e, t = 0) {
                return (zt[e[t + 0]] + zt[e[t + 1]] + zt[e[t + 2]] + zt[e[t + 3]] + "-" + zt[e[t + 4]] + zt[e[t + 5]] + "-" + zt[e[t + 6]] + zt[e[t + 7]] + "-" + zt[e[t + 8]] + zt[e[t + 9]] + "-" + zt[e[t + 10]] + zt[e[t + 11]] + zt[e[t + 12]] + zt[e[t + 13]] + zt[e[t + 14]] + zt[e[t + 15]]).toLowerCase()
            }(i)
        };
        class Ut {
            generateUuid() {
                return Wt()
            }
        }
        class Vt {
            constructor(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                this.googletag = e, this.modifySlotExtensions = t, this.logger = E.resolve(G), this.definedSlots = E.resolve(Tt), this.interstitialEventInMemoryRepository = E.resolve(Ft), this.interstitialEventHandler = E.resolve(jt)
            }
            defineSlotIfUndefined(e) {
                const t = e.getAdvertiser(),
                    r = e.getContainerId(),
                    {
                        sizes: i
                    } = e.getSettings(),
                    n = t.trackingCode,
                    s = e.getSlotLevelTargeting(),
                    o = e.getSlotLevelAdUnitCode();
                this.pushGoogleTagCmd((() => {
                    if (this.definedSlots.isUndefined(r)) {
                        const e = this.createGamSlot(t, o, i, r);
                        e.addService(this.getPubService()), this.modifySlotExtensions.forEach((r => r.modifySlot(e, t))), s && Object.entries(s).forEach((t => {
                            let [r, i] = t;
                            e.setTargeting(r, i)
                        })), e.setTargeting("pos", n), e.setTargeting("containerId", r), this.definedSlots.push(r, e, i, !1, this.isInterstitial(t))
                    }
                }))
            }
            extractInterstitialEvents(e) {
                var t;
                return (null !== (t = e.settings.showInterstitialOnEvent) && void 0 !== t ? t : []).map((e => this.interstitialEventInMemoryRepository.getInterstitialEvent(e))).filter((e => null !== e))
            }
            createGamSlot(e, t, r, i) {
                return this.isInterstitial(e) ? this.createInterstitialGamSlot(e, t) : this.createNonInterstitialGamSlot(t, r, i)
            }
            createNonInterstitialGamSlot(e, t, r) {
                let i = this.googletag.defineSlot(e, t, r);
                return i = It(i, "gamSlot", "GamSlot should not be null"), i
            }
            createInterstitialGamSlot(e, t) {
                const r = this.extractInterstitialEvents(e);
                this.interstitialEventHandler.setUp(r);
                const i = new Bt(r);
                let n = this.googletag.defineOutOfPageSlot(t, this.googletag.enums.OutOfPageFormat.INTERSTITIAL);
                return n = It(n, "gamSlot", "GamSlot should not be null"), i.configureGamSlot(n), n
            }
            loadAdblocks(e) {
                this.displayOrRedefineSlots(e), this.refreshSlots(e)
            }
            displayOrRedefineSlots(e) {
                e.forEach((e => {
                    this.displayOrRedefineSlot(e)
                }))
            }
            displayOrRedefineSlot(e) {
                this.pushGoogleTagCmd((() => {
                    const t = e.getContainerId();
                    this.definedSlots.isDisplayed(t) || this.displayAndMarkAsDisplayed(t), this.shouldBeRedefined(e) && (this.redefineSlot(e), this.displayAndMarkAsDisplayed(t))
                }))
            }
            shouldBeRedefined(e) {
                const {
                    sizes: t
                } = e.getSettings(), r = e.getContainerId(), i = this.getDefinedSlot(r).getAdUnitPath(), n = this.definedSlots.getSizes(r);
                return i !== e.getSlotLevelAdUnitCode() || !wt(n, t)
            }
            redefineSlot(e) {
                const t = e.getContainerId();
                this.debug(t, "Destroy and define gamSlot..."), this.googletag.destroySlots([this.getDefinedSlot(t)]), this.definedSlots.remove(t), this.defineSlotIfUndefined(e)
            }
            refreshSlots(e) {
                this.pushGoogleTagCmd((() => {
                    const t = function(e, t) {
                            const r = new Set;
                            return e.filter((e => {
                                const t = e.getContainerId(),
                                    i = !r.has(t);
                                return i && r.add(t), i
                            }))
                        }(e),
                        r = t.map((e => e.getContainerId()));
                    this.logger.debug("Batched load:", r);
                    const i = r.map((e => this.definedSlots.getGamSlot(e)));
                    t.forEach((e => {
                        const t = e.getAdvertiser().slotRefreshCount,
                            r = this.definedSlots.getGamSlot(e.getContainerId());
                        Vt.prepareSlotForGam(r, t)
                    })), this.getPubService().refresh(i)
                }))
            }
            displayAndMarkAsDisplayed(e) {
                this.display(e), this.definedSlots.markAsDisplayed(e)
            }
            display(e) {
                if (this.debug(e, "Display..."), this.definedSlots.isOutOfPageSlot(e)) {
                    const t = this.definedSlots.getGamSlot(e);
                    this.googletag.display(t)
                } else this.googletag.display(e)
            }
            static prepareSlotForGam(e, t) {
                Vt.setImpressionId(e), Vt.setSlotRefreshCount(e, t)
            }
            getDefinedSlot(e) {
                return this.definedSlots.getGamSlot(e)
            }
            static setImpressionId(e) {
                e.setTargeting("imp_id", (new Ut).generateUuid())
            }
            static setSlotRefreshCount(e, t) {
                e.setTargeting("slot_refresh_count", t.toString())
            }
            pushGoogleTagCmd(e) {
                this.googletag.cmd.push(Rt(e, this.logger))
            }
            getPubService() {
                return this.googletag.pubads()
            }
            debug(e, t) {
                this.logger.debug(`GamSlot ${e}: ${t}`)
            }
            isInterstitial(e) {
                return !!e.settings.isInterstitial
            }
        }
        class $t {
            constructor(e, t, r) {
                this.advertiser = e, this.store = t, this.slotLevelBiddingGamTargetings = r
            }
            getPageUrl() {
                return this.getSettingsFromSlotOrPageLevel("pageUrl") || ""
            }
            getUserIdHash() {
                return this.getSettingsFromSlotOrPageLevel("userIdHash") || ""
            }
            getPageLevelTargetings() {
                return this.getTargetingsFromSlotOrPageLevel() || {}
            }
            getSlotLevelTargeting() {
                const e = this.store.getSlotOptionsByPositionName(this.advertiser.positionName).gamTargetings;
                return e ? this.slotLevelBiddingGamTargetings ? Object.assign(Object.assign({}, e), this.slotLevelBiddingGamTargetings) : e : this.slotLevelBiddingGamTargetings
            }
            getAdvertiser() {
                return this.advertiser
            }
            getAdvertiserType() {
                return this.advertiser.type
            }
            getBiddingType() {
                return this.advertiser.biddingType
            }
            getContainerId() {
                return this.advertiser.getContainerId()
            }
            getSettings() {
                return this.advertiser.settings
            }
            getSlotLevelAdUnitCode() {
                const {
                    code: e
                } = this.advertiser.settings, t = e || this.getAdUnitCodeFromSlotOptions();
                if (!t) throw new Error("Ad unit code is not defined");
                return t
            }
            getAdUnitCodeFromSlotOptions() {
                return this.store.getSlotOptionsByPositionName(this.advertiser.positionName).gamAdUnitCode
            }
            getSettingsFromSlotOrPageLevel(e) {
                const t = this.advertiser.settings[e];
                return void 0 !== t ? t : this.getPageLevelSettings()[e]
            }
            getTargetingsFromSlotOrPageLevel() {
                var e, t;
                const r = null !== (e = this.advertiser.settings.gamTargets) && void 0 !== e ? e : this.advertiser.settings.dfpTargets;
                if (void 0 !== r) return r;
                const i = this.getPageLevelSettings();
                return null !== (t = i.gamTargets) && void 0 !== t ? t : i.dfpTargets
            }
            getPageLevelSettings() {
                return this.store.getPageLevelSettings(this.advertiser.type)
            }
            copy(e) {
                let {
                    settings: t,
                    advertiserType: r,
                    biddingType: i,
                    slotLevelBiddingGamTargetings: n
                } = e;
                return new $t(this.advertiser.copy({
                    settings: t,
                    advertiserType: r,
                    biddingType: i
                }), this.store, null != n ? n : this.slotLevelBiddingGamTargetings)
            }
        }
        const qt = 5628409328,
            Ht = [13868397, 13031757, 5126959378, 4789830132, 20223117, 13135437, 19240677, 19108917, 19178397, 5093868196, 5093864557, 5224989977, 5339876834, 4732557789, 5504112362, qt];
        var Qt;

        function Kt(e) {
            return Object.values(Qt).map((e => String(e))).includes(e)
        }! function(e) {
            e.TREEBAY = "treebay", e.PRO_SELLER = "pro_seller", e.EPN = "epn", e.DMH = "dmh"
        }(Qt || (Qt = {}));
        const Yt = Qt;
        let Jt = class {
            constructor(e, t, r) {
                this.logger = e, this.windowMessageDecoder = t, this.windowWrapper = r
            }
            needsIframeMessage(e) {
                return void 0 !== e && Kt(e)
            }
            resolveMessageStatus(e, t) {
                return this.logger.debug(`[GamMessageReceiver] Slot ${e}: Waiting for postMessage event because of subtype ${t}...`), new Promise((t => {
                    this.windowWrapper.get().addEventListener("message", (r => {
                        if (this.isSubtypeEvent(r, e)) {
                            this.logger.debug(`[GamMessageReceiver] Slot ${e}: Got postMessage event:`, r);
                            const i = this.isLoaded(r);
                            t({
                                containerId: e,
                                filled: i
                            })
                        }
                    }))
                }))
            }
            isSubtypeEvent(e, t) {
                if (e.data.event !== Ze) return !1;
                let r = {};
                try {
                    r = this.windowMessageDecoder.decodeMessage(e.data.info)
                } catch (t) {
                    return this.logger.error(new Error(`[GamMessageReceiver] Invalid info string: '${e.data.info}' Error: ${t} Fetching backfill...`)), !1
                }
                const i = r.containerId === t,
                    n = Kt(r.subtype);
                return i && n
            }
            isLoaded(e) {
                return "success" === this.windowMessageDecoder.decodeMessage(e.data.info).status
            }
        };
        Jt = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, rt, q])], Jt);
        const Zt = Jt;
        let Xt = class {
            constructor(e, t, r) {
                this.logger = e, this.libertyPerformanceMarker = t, this.messageReceiver = r
            }
            buildCallback(e, t, r) {
                const i = n => {
                    try {
                        const s = n.slot.getSlotElementId();
                        if (t !== s) return;
                        r(i);
                        const o = !n.isEmpty,
                            a = n.advertiserId;
                        this.handleFill(t, o, a, e)
                    } catch (e) {
                        this.logger.error(e)
                    }
                };
                return i
            }
            handleFill(e, t, r, i) {
                try {
                    if (this.libertyPerformanceMarker.renderingDone(e), t) {
                        const t = {
                            gamAdvertiserId: r
                        };
                        this.handleSubtypeOrResolve(e, i, t, r)
                    } else i.markContainerAs(e, !1)
                } catch (t) {
                    this.logger.error(t), i.markContainerAs(e, !1)
                }
            }
            handleSubtypeOrResolve(e, t, r, i) {
                const n = t.getCurrentAdvertiser(e).settings.subtype;
                i === qt || this.messageReceiver.needsIframeMessage(n) ? this.messageReceiver.resolveMessageStatus(e, n).then((i => {
                    let {
                        filled: n
                    } = i;
                    return t.markContainerAs(e, n || !1, r)
                })) : t.markContainerAs(e, !0, r)
            }
        };
        Xt = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, ye, Zt])], Xt);
        const er = Xt;
        let tr = class {
            createGoogleTagConfig(e) {
                return {
                    pps: {
                        taxonomies: {
                            IAB_CONTENT_2_2: {
                                values: e
                            }
                        }
                    }
                }
            }
        };
        tr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], tr);
        const rr = tr;
        let ir = class {
            initialize(e, t) {
                e.enableSingleRequest(), e.disableInitialLoad();
                const r = t.getPageUrl();
                void 0 !== r && e.set("page_url", r);
                const i = t.getUserIdHash();
                e.setPublisherProvidedId(String(i)), e.collapseEmptyDivs()
            }
        };
        ir = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], ir);
        const nr = ir;
        var sr;
        ! function(e) {
            e.PREBID = "prebid", e.AMAZON = "amazon", e.RELPER_IGNITE = "relper_ignite", e.ADSENSE = "adsense"
        }(sr || (sr = {}));
        const or = sr;
        let ar = class {
            constructor(e, t) {
                this.windowMessageDecoder = e, this.logger = t, this.adsenseFetcher = E.resolve(Le), this.unifiedAuctionAdvertisers = [], this.handleMessageEvent = this.handleMessageEvent.bind(this), this.handleMessage = this.handleMessage.bind(this), this.isMatchingMessage = this.isMatchingMessage.bind(this)
            }
            setExternalProperties(e, t, r) {
                this.setUnifiedAuctionAdvertisers(e), this.setFetcherResult(t), this.setIgniteFetcher(r)
            }
            setUnifiedAuctionAdvertisers(e) {
                this.unifiedAuctionAdvertisers = e
            }
            setFetcherResult(e) {
                this.fetcherResult = e
            }
            setIgniteFetcher(e) {
                this.igniteFetcher = e
            }
            handleMessageEvent(e) {
                if (this.isUnifiedAuctionMessage(e)) {
                    const t = this.windowMessageDecoder.decodeMessage(null == e ? void 0 : e.data.info),
                        r = this.isMatchingMessage(t, this.fetcherResult, this.unifiedAuctionAdvertisers, or.RELPER_IGNITE),
                        i = this.isMatchingMessage(t, this.fetcherResult, this.unifiedAuctionAdvertisers, or.ADSENSE);
                    switch (null == e ? void 0 : e.data.event) {
                        case Xe:
                            if (!r) return;
                            if (this.debug("Received matching message for registered advertiser", t, r), !this.igniteFetcher) return void this.debug("Ignite won the auction but the fetcher was not initialized.");
                            this.handleMessage(r, this.fetcherResult, this.igniteFetcher);
                            break;
                        case et:
                            if (!i) return;
                            if (!this.adsenseFetcher) return void this.debug("Adsense won the auction but the fetcher was not initialized.");
                            this.debug("Adsense won the auction.", i), this.handleMessage(i, this.fetcherResult, this.adsenseFetcher)
                    }
                }
            }
            isUnifiedAuctionMessage(e) {
                return (null == e ? void 0 : e.data) && this.fetcherResult && this.unifiedAuctionAdvertisers.length > 0 && (e.data.event === Xe || e.data.event === et)
            }
            handleMessage(e, t, r) {
                r._fetch([e], t)
            }
            isMatchingMessage(e, t, r, i) {
                return r.find((r => this.isMatchingContainerId(e, t) && this.isMatchingAdvertiser(r, e, i)))
            }
            isMatchingContainerId(e, t) {
                const {
                    containerId: r
                } = e;
                return t.getAllContainerIds().some((e => e === r))
            }
            isMatchingAdvertiser(e, t, r) {
                const {
                    containerId: i
                } = t;
                return e.getContainerId() === i && e.biddingType === r
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[UnifiedAuctionWindowMessageHandler]", ...t)
            }
        };
        ar = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [rt, G])], ar);
        const cr = ar;
        class lr {
            modifySlot(e, t) {
                throw new Error("Not implemented")
            }
        }
        class dr extends lr {
            modifySlot(e, t) {
                t.type === ne.DISPLAY_WEB_AAX && e.setTargeting("aaxReplaceable", "true")
            }
        }
        class ur extends lr {
            modifySlot(e, t) {
                e.setTargeting("content_url", String(window.location.href))
            }
        }
        class gr extends lr {
            modifySlot(e, t) {
                e.setTargeting("upr", this.buildFloorPricingTargeting(t.settings.floorPrice))
            }
            buildFloorPricingTargeting(e) {
                return (null != e ? e : 0).toFixed(2)
            }
        }
        class hr extends lr {
            modifySlot(e, t) {
                const r = t.settings.subtype;
                if (Kt(String(r))) {
                    const t = hr.adCountsbySubtype.get(r) || 0;
                    hr.adCountsbySubtype.set(r, t + 1), e.setTargeting("gam_count", String(hr.adCountsbySubtype.get(r)))
                }
            }
            static resetCount() {
                Object.values(Yt).forEach((e => {
                    hr.adCountsbySubtype.set(e, 0)
                }))
            }
        }
        hr.adCountsbySubtype = new Map;
        const fr = hr;
        let pr = class {
            createAllAdblockLoaderCustomParameterExtensions(e) {
                const t = [new fr, new dr, new ur];
                return e.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE) && t.push(new gr), t
            }
        };
        pr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], pr);
        const yr = pr;
        class vr extends _e {
            constructor(e, t, r, i, n) {
                super(), this.googletag = e, this.store = t, this.advertiserType = r, this.biddingStrategy = i, this.igniteFetcher = n, this.logger = E.resolve(G), this.libertyPerformanceMarker = E.resolve(ye), this.documentWrapper = E.resolve(Q), this.unifiedAuctionWindowMessageHandler = E.resolve(cr), this.callbackFactory = E.resolve(er), this.pubServiceInitializer = E.resolve(nr), this.adblockExtensionFactory = E.resolve(yr), this.gamAdblockLoader = new Vt(this.googletag, this.adblockExtensionFactory.createAllAdblockLoaderCustomParameterExtensions(t))
            }
            _fetch(e, t) {
                const r = this.createGamAdvertisers(e),
                    i = this.biddingStrategy.getSizeFilteredAdvertisers(r);
                this.markRemovedAdvertisersAsUnfilled(r, i, t), this.biddingStrategy.getWinningBids(i).then((e => {
                    let {
                        advertisersToForwardToGam: i,
                        advertisersToCancel: n
                    } = e;
                    if (this.markPerformanceSlotBiddingEnded(r), this.cancelAdvertisersByMarkingAsUnfilled(n, t), i.length > 0) {
                        const e = i.map((e => e.getContainerId()));
                        this.logNotUniqueSlots(e), this.setPageLevelTargetings(i), this.defineSlots(i), this.pushGoogleTagCmd((() => {
                            this.biddingStrategy.syncBiddingWithGam(i), this.loadAndDisplay(i, t)
                        }))
                    }
                    this.logger.debug(`[GamFetcher] Load ads for ${i.length} slot(s) of type ${i.map((e=>e.getAdvertiserType()))[0]}`)
                })).catch((e => {
                    this.logger.error(e)
                }))
            }
            logNotUniqueSlots(e) {
                var t;
                t = e, new Set(t).size !== t.length && this.logger.debug("[GamFetcher]: WARN: Same GAM slot is loaded multiple times!")
            }
            setGoogleTagConfig() {
                const e = this.store.getIabCategoryIds(),
                    t = (new rr).createGoogleTagConfig(e);
                this.googletag.setConfig(t), this.logger.debug("[GamFetcher] set googletag config:", t)
            }
            markPerformanceSlotBiddingEnded(e) {
                e.forEach((e => {
                    const t = e.getContainerId();
                    this.libertyPerformanceMarker.biddingDone(t)
                }))
            }
            cancelAdvertisersByMarkingAsUnfilled(e, t) {
                const r = e.map((e => e.getContainerId()));
                t.markAllContainersAsUnfilled(r)
            }
            async loadAndDisplay(e, t) {
                this.initGoogleTag(e, t), await this.documentWrapper.whenDomReady(), this.loadAdblocks(e)
            }
            initGoogleTag(e, t) {
                this.pushGoogleTagCmd((() => {
                    if (this.store.isAdblockerEnabled() && this.advertiserType === ne.DISPLAY_WEB) {
                        const r = new Ot(t, this.documentWrapper.get());
                        e.forEach((e => {
                            r.observe(e.getContainerId())
                        }))
                    } else this.setUnifiedAuctionProperties(e, t), this.registerGamCallback(t);
                    this.setGoogleTagConfig(), this.pubServiceInitializer.initialize(this.getPubService(), e[0]), this.googletag.enableServices()
                }))
            }
            setUnifiedAuctionProperties(e, t) {
                const r = this.extractUnifiedAuctionBiddingAdvertisers(e);
                this.unifiedAuctionWindowMessageHandler.setExternalProperties(r, t, this.igniteFetcher)
            }
            defineSlots(e) {
                e.forEach((e => {
                    this.gamAdblockLoader.defineSlotIfUndefined(e)
                }))
            }
            setPageLevelTargetings(e) {
                const t = Object.assign(Object.assign({}, this.getPageLevelTargetings(e)), this.biddingStrategy.getPageLevelTargetings());
                this.setPubServiceTargeting(t)
            }
            getPageLevelTargetings(e) {
                return e.length < 1 ? {} : e[0].getPageLevelTargetings()
            }
            setPubServiceTargeting(e) {
                e = Object.assign(Object.assign({}, e), {
                    adblock_group: this.buildAdBlockingTrackingInfo()
                }), this.pushGoogleTagCmd((() => {
                    Object.entries(e).forEach((e => {
                        let [t, r] = e;
                        this.getPubService().setTargeting(t, r)
                    }))
                }))
            }
            buildAdBlockingTrackingInfo() {
                return `${this.store.getPlatform()}_${this.store.getGroupName()}_${this.store.getPageType()}_${this.store.isAdblockerEnabled()?"adblocking-on":"adblocking-off"}`.toLowerCase()
            }
            registerGamCallback(e) {
                e.getAllContainerIds().forEach((t => {
                    const r = this.callbackFactory.buildCallback(e, t, (e => {
                        const t = this.getPubService();
                        t && t.removeEventListener && t.removeEventListener("slotRenderEnded", e)
                    }));
                    this.getPubService().addEventListener("slotRenderEnded", r)
                }))
            }
            loadAdblocks(e) {
                this.gamAdblockLoader.loadAdblocks(e)
            }
            pushGoogleTagCmd(e) {
                this.googletag.cmd.push(Rt(e, this.logger))
            }
            getPubService() {
                return this.googletag.pubads()
            }
            markRemovedAdvertisersAsUnfilled(e, t, r) {
                const i = t.map((e => e.getContainerId())),
                    n = e.map((e => e.getContainerId())).filter((e => !i.includes(e)));
                r.markAllContainersAsUnfilled(n)
            }
            getAdvertiserType() {
                return this.advertiserType
            }
            createGamAdvertisers(e) {
                return e.map((e => new $t(e, this.store)))
            }
            extractUnifiedAuctionBiddingAdvertisers(e) {
                return e.filter((e => this.isIgniteEnabled(e) || this.isAdsenseEnabled(e))).map((e => e.getAdvertiser()))
            }
            isIgniteEnabled(e) {
                return e.getBiddingType() === or.RELPER_IGNITE
            }
            isAdsenseEnabled(e) {
                return e.getBiddingType() === or.ADSENSE && Number(e.getSettings().adsenseEcpm) > 0
            }
        }
        class mr extends _e {
            constructor(e) {
                super(), this.advertiserType = e, this.logger = E.resolve(G)
            }
            _fetch(e, t) {
                this.logger.debug(`[NothingFetcher] Do not load ads for ${e.length} slot(s) of type ${this.getAdvertiserType()}`), t.abortAll()
            }
            getAdvertiserType() {
                return this.advertiserType
            }
        }
        const br = "fluid";
        let Rr = class {
            constructor(e) {
                this.logger = e
            }
            getResizedAdBlock(e, t) {
                const r = t.sizes,
                    i = this.filterSizes(r, e),
                    n = i.length < r.length;
                return this.logger.debug(`Slot ${t.positionName}: ${n?"":"not "}filtered sizes, old sizes:`, r, ", new sizes:", i), this.buildResizedAdBlock(i, t)
            }
            filterSizes(e, t) {
                return e.filter((e => this.hasEnoughRoom(e, t)))
            }
            buildResizedAdBlock(e, t) {
                return Object.assign(Object.assign({}, t), {
                    sizes: e
                })
            }
            hasEnoughRoom(e, t) {
                if (this.isFluid(e)) return !0;
                const [r, i] = e, n = r <= t.maxWidth, s = i <= t.maxHeight;
                return n && s
            }
            isFluid(e) {
                return e === br || Array.isArray(e) && e[0] === br
            }
        };
        Rr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G])], Rr);
        const Ar = Rr;
        let wr = class {
            constructor(e) {
                this.sizeFilter = e
            }
            getResizedAdBlock(e, t) {
                const r = this.sizeFilter.getResizedAdBlock(e, t),
                    i = At(t, ["mediaTypes", "banner", "sizes"]),
                    n = this.sizeFilter.filterSizes(i, e),
                    s = this.filterBids(t.bids, e);
                return this.buildResizedAdBlock(r, n, s)
            }
            buildResizedAdBlock(e, t, r) {
                return Object.assign(Object.assign({}, e), {
                    mediaTypes: Object.assign(Object.assign({}, e.mediaTypes), {
                        banner: Object.assign(Object.assign({}, e.mediaTypes.banner), {
                            sizes: t
                        })
                    }),
                    bids: r
                })
            }
            filterBids(e, t) {
                return e.filter((e => this.bidMatchesSlotRanges(e, t))).map(this.omitLibertyResponsiveRules)
            }
            bidMatchesSlotRanges(e, t) {
                const r = e.libertyResponsiveRules;
                if (!r) return !0;
                const {
                    minWidth: i,
                    maxWidth: n,
                    minHeight: s,
                    maxHeight: o
                } = r;
                return !(void 0 !== i && i > t.maxWidth || void 0 !== n && n < t.maxWidth || void 0 !== s && s > t.maxHeight || void 0 !== o && o < t.maxHeight)
            }
            omitLibertyResponsiveRules(e) {
                return function(e, t) {
                    if (!e) return e;
                    const r = {};
                    return Object.entries(e).forEach((e => {
                        let [i, n] = e;
                        t && !t.includes(i) && (r[i] = n)
                    })), r
                }(e, ["libertyResponsiveRules"])
            }
        };
        wr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ar])], wr);
        const Sr = wr;
        let Er = class {
            constructor(e, t, r, i) {
                this.store = e, this.responsivePrebidAdBlockFilter = t, this.responsiveGamAdBlockFilter = r, this.logger = i
            }
            getResizedAdvertisersForPrebid(e) {
                return this.getResizedAdvertisers(e, this.responsivePrebidAdBlockFilter)
            }
            getResizedAdvertisersForGam(e) {
                return this.getResizedAdvertisers(e, this.responsiveGamAdBlockFilter)
            }
            getResizedAdvertisers(e, t) {
                return e.map((e => this.getResizedAdvertiser(e, t))).filter((e => {
                    const t = e.getSettings(),
                        r = t.sizes;
                    return this.hasSizes(r, t.positionName)
                }))
            }
            getResizedAdvertiser(e, t) {
                return e.copy({
                    settings: this.getResizedAdBlock(e.getSettings(), t)
                })
            }
            getResizedAdBlock(e, t) {
                const r = this.store.getSlotSize(e.positionName);
                return r ? t.getResizedAdBlock(r, e) : e
            }
            hasSizes(e, t) {
                if (!e || 0 === e.length) {
                    const e = this.store.getSlotSize(t);
                    this.logger.debug(`Allowed size [${null==e?void 0:e.maxWidth},${null==e?void 0:e.maxHeight}] is exceeded: Disabling ${t}`)
                }
                return e && e.length > 0
            }
        };
        Er = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, Sr, Ar, G])], Er);
        const Tr = Er;
        let Or = class {
            constructor(e) {
                this.advertiserResizer = e
            }
            getSizeFilteredAdvertisers(e) {
                return this.advertiserResizer.getResizedAdvertisersForGam(e)
            }
            getPageLevelTargetings() {
                return {}
            }
            syncBiddingWithGam(e) {}
            async getWinningBids(e) {
                return {
                    advertisersToForwardToGam: e,
                    advertisersToCancel: []
                }
            }
        };
        Or = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Tr])], Or);
        const Ir = Or;
        let kr = class {
            constructor(e, t, r) {
                this.store = e, this.advertiserResizer = t, this.targetedGamAdvertiserFactory = r, this.logger = E.resolve(G), this.gamDefinedSlotRegistry = E.resolve(Tt)
            }
            getSizeFilteredAdvertisers(e) {
                const t = this.filterAdsenseAdvertisers(e);
                return this.advertiserResizer.getResizedAdvertisersForGam(t)
            }
            getPageLevelTargetings() {
                return {}
            }
            async getWinningBids(e) {
                var t;
                const r = this.filterAdsenseAdvertisers(e);
                if (0 === r.length) return {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: []
                };
                const i = r.map((e => e.getAdvertiser())),
                    n = this.store.getQuery(i),
                    s = Number(null !== (t = i[0].settings.adsenseEcpm) && void 0 !== t ? t : 0);
                return s > 0 ? {
                    advertisersToForwardToGam: this.targetedGamAdvertiserFactory.create({
                        gamAdvertisers: r,
                        queryString: null != n ? n : "",
                        ecpm: s
                    }),
                    advertisersToCancel: []
                } : {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: r
                }
            }
            syncBiddingWithGam(e) {
                const t = this.filterAdsenseAdvertisers(e);
                0 !== t.length && t.forEach((e => {
                    const t = e.getAdvertiser(),
                        r = e.getSlotLevelTargeting();
                    r ? (this.debug("Syncing advertiser with GAM. Advertiser, slotLevelTargeting:", t, e.getSlotLevelTargeting()), this.gamDefinedSlotRegistry.getGamSlot(t.getContainerId()).updateTargetingFromMap(r)) : this.debug("Cannot sync Adsense bid for advertiser with GAM. \n           GamAdvertiser#getSlotLevelTargeting() returned undefined. Advertiser:", t)
                }))
            }
            filterAdsenseAdvertisers(e) {
                return e.filter((e => {
                    var t;
                    const r = null !== (t = e.getSettings().adsenseEcpm) && void 0 !== t ? t : 0;
                    return e.getBiddingType() === or.ADSENSE && Number(r) > 0
                }))
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[AdsenseBiddingStrategy] ", ...t)
            }
        };
        kr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, Tr, class {
            create(e) {
                let {
                    gamAdvertisers: t,
                    queryString: r,
                    ecpm: i
                } = e;
                if (0 === t.length) return [];
                const n = this.createSlotLevelBiddingGamTargetings(i);
                return t.map((e => e.copy({
                    slotLevelBiddingGamTargetings: n,
                    settings: Object.assign(Object.assign({}, e.getSettings()), {
                        queryString: r
                    })
                })))
            }
            createSlotLevelBiddingGamTargetings(e) {
                return {
                    hb_pb_ignite: e.toFixed(2),
                    hb_bidder_ignite: "adsense"
                }
            }
        }])], kr);
        const Pr = kr;
        class Cr {
            constructor(e, t, r) {
                this.advertiserResizer = e, this.amazonPublisherServicesTag = t, this.amazonBidFetcher = r, this.logger = E.resolve(G), this.gamDefinedSlotRegistry = E.resolve(Tt)
            }
            getSizeFilteredAdvertisers(e) {
                const t = this.filterAmazonAdvertisers(e);
                return 0 === t.length ? [] : this.advertiserResizer.getResizedAdvertisersForGam(t)
            }
            getPageLevelTargetings() {
                return {}
            }
            async getWinningBids(e) {
                const t = this.filterAmazonAdvertisers(e);
                if (0 === t.length) return {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: []
                };
                const r = t.map(this.mapToSlot);
                let i = [];
                if (0 !== r.length) {
                    const e = await this.amazonBidFetcher.requestBids(r);
                    this.debug("Auction result:", e), i = e.bidResponses
                }
                const n = this.getFilledAdvertisers(t, i),
                    s = this.getUnfilledAdvertisers(t, i);
                return this.debug("Filled advertisers:", n.map((e => e.getAdvertiser()))), this.debug("Unfilled advertisers:", s.map((e => e.getAdvertiser()))), {
                    advertisersToForwardToGam: n,
                    advertisersToCancel: s
                }
            }
            syncBiddingWithGam(e) {
                const t = this.filterAmazonAdvertisers(e);
                if (0 === t.length) return;
                this.debug("Set GAM slot targeting for ALL existing Amazon advertisers on page"), this.amazonPublisherServicesTag.setDisplayBids();
                const r = t.map((e => [e.getAdvertiser(), this.gamDefinedSlotRegistry.getTargetings(e.getContainerId())]));
                this.debug("Slot targetings:", r)
            }
            getFilledAdvertisers(e, t) {
                const r = t.filter((e => this.isAmazonBidIdValid(e.amznbid))).map((e => e.slotID));
                return this.getAdvertisersBySlotIds(e, r)
            }
            getUnfilledAdvertisers(e, t) {
                const r = t.filter((e => !this.isAmazonBidIdValid(e.amznbid))).map((e => e.slotID));
                return this.getAdvertisersBySlotIds(e, r)
            }
            getAdvertisersBySlotIds(e, t) {
                return e.filter((e => t.includes(this.mapToSlot(e).slotID)))
            }
            isAmazonBidIdValid(e) {
                return 0 !== e && 1 !== e && 2 !== e && e.length >= 5
            }
            mapToSlot(e) {
                return {
                    slotID: e.getContainerId(),
                    slotName: e.getSettings().code,
                    sizes: e.getSettings().sizes
                }
            }
            filterAmazonAdvertisers(e) {
                return e.filter(this.isAmazonGamAdvertiser)
            }
            isAmazonGamAdvertiser(e) {
                return e.getAdvertiserType() === ne.DISPLAY_WEB_AMAZON || e.getBiddingType() === or.AMAZON
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[AmazonBiddingStrategy] ", ...t)
            }
        }
        let _r = class {
            constructor(e, t, r) {
                this.hubvisor = e, this.advertiserResizer = t, this.store = r, this.logger = E.resolve(G)
            }
            getSizeFilteredAdvertisers(e) {
                return this.advertiserResizer.getResizedAdvertisersForGam(e)
            }
            getPageLevelTargetings() {
                return {}
            }
            syncBiddingWithGam(e) {}
            async getWinningBids(e) {
                const t = It(this.store.getPageLevelSettings(ne.DISPLAY_WEB_HUBVISOR).hubvisorContext, "hubvisorContext");
                let r = e,
                    i = [];
                try {
                    await this.sendHubvisorRequest(t.event, t)
                } catch (t) {
                    r = [], i = e
                }
                return {
                    advertisersToForwardToGam: r,
                    advertisersToCancel: i
                }
            }
            pushHubvisorQueue(e) {
                this.hubvisor.cmd.push(Rt(e, this.logger))
            }
            sendHubvisorRequest(e, t) {
                const r = (r, i) => {
                    this.hubvisor(e, t, ((e, t) => {
                        e ? i(new Error(`[HubvisorBiddingStrategy] Error when sending the payload. ${e}`)) : (this.logger.debug("[HubvisorBiddingStrategy] Hubvisor is ready for usage"), r(void 0))
                    }))
                };
                return this.isSameContext(t) || (this.hubvisorPromise = void 0, this.previousHubvisorContext = t, this.logger.debug("[HubvisorBiddingStrategy] The context is:", t)), this.hubvisorPromise || (this.hubvisorPromise = new Promise(((e, t) => {
                    this.pushHubvisorQueue((() => r(e, t)))
                }))), this.hubvisorPromise
            }
            isSameContext(e) {
                return JSON.stringify(e) === JSON.stringify(this.previousHubvisorContext)
            }
        };
        _r = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Function, Tr, V])], _r);
        const jr = _r;
        let Lr = class {
            constructor(e, t) {
                this.prebidLoader = e, this.logger = t, this.pbjs = e.load()
            }
            pushCommand(e) {
                this.pbjs.que.push(Rt(e, this.logger))
            }
            setConfig(e) {
                this.pbjs.setConfig(e)
            }
            setBidderConfig(e) {
                this.pbjs.setBidderConfig(e)
            }
            bidderSettings(e) {
                this.pbjs.bidderSettings = e
            }
            requestBids(e) {
                this.pbjs.requestBids(e)
            }
            addAdUnits(e) {
                this.pbjs.addAdUnits(e)
            }
            removeAdUnit(e) {
                this.pbjs.removeAdUnit(e)
            }
            getAdUnits() {
                return this.pbjs.adUnits
            }
            getVersion() {
                return this.pbjs.version
            }
            setTargetingForGPTAsync(e) {
                this.pbjs.setTargetingForGPTAsync(e)
            }
            logCurrentConfig() {
                this.logger.debug("[Prebid] Prebid configuration:", this.pbjs.getConfig())
            }
        };
        Lr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Ke, G])], Lr);
        const Dr = Lr;
        var Fr;
        ! function(e) {
            e[e.VERSION_2_1 = 5] = "VERSION_2_1", e[e.VERSION_2_2 = 6] = "VERSION_2_2", e[e.VERSION_3_0 = 7] = "VERSION_3_0"
        }(Fr || (Fr = {}));
        let Br = class {
            createOrtb2Config(e) {
                return {
                    site: {
                        name: "kleinanzeigen.de",
                        cattax: Fr.VERSION_2_2,
                        pagecat: e,
                        content: {
                            data: [{
                                name: "kleinanzeigen.de",
                                ext: {
                                    segtax: Fr.VERSION_2_2
                                },
                                segment: e.map((e => ({
                                    id: e
                                })))
                            }]
                        }
                    }
                }
            }
        };
        Br = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], Br);
        const Nr = Br;
        let Mr = class {
            constructor(e, t, r) {
                this.store = e, this.prebid = t, this.prebidOrtb2ConfigFactory = r
            }
            requestBids(e) {
                return new Promise((t => {
                    this.pushPrebidQueue((() => {
                        this.buildAdBlocksAndRequestBids(e, t)
                    }))
                }))
            }
            buildAdBlocksAndRequestBids(e, t) {
                const {
                    adUnitCodes: r,
                    adBlocks: i
                } = this.buildAdUnitCodesAndAdBlocks(e);
                this.requestPrebidBids(i, r, t)
            }
            getOrtb2PrebidConfig() {
                const e = this.store.getIabCategoryIds();
                return this.prebidOrtb2ConfigFactory.createOrtb2Config(e)
            }
            buildAdUnitCodesAndAdBlocks(e) {
                const t = this.store.getPrebidOptions(),
                    r = this.buildPrebidAdUnits(e);
                return {
                    adUnitCodes: r.map((e => e.code)),
                    adBlocks: this.buildPrebidAdBlocks(t, r, e)
                }
            }
            requestPrebidBids(e, t, r) {
                const i = {
                    timeout: this.maxTimeout(e),
                    adUnitCodes: t,
                    bidsBackHandler: (e, t, i) => {
                        r({
                            bidResponses: e,
                            timedOut: t,
                            auctionId: i
                        })
                    }
                };
                this.prebid.requestBids(i)
            }
            buildPrebidAdBlocks(e, t, r) {
                const i = e.bidderSettings || {},
                    n = this.getOrtb2PrebidConfig(),
                    s = Object.assign({
                        ortb2: n
                    }, e.config);
                return this.prebid.setConfig(s), this.prebid.logCurrentConfig(), e.bidderConfig && this.prebid.setBidderConfig(e.bidderConfig), this.prebid.bidderSettings(this.buildPrebidBidderSettings(i)), this.setupPrebidAdUnitsArray(t), r.map((e => e.settings))
            }
            buildPrebidAdUnits(e) {
                return e.map((e => {
                    const t = e.settings;
                    return {
                        code: this.buildAdUnitCode(e),
                        bids: [...t.bids],
                        mediaTypes: Object.assign({}, t.mediaTypes)
                    }
                }))
            }
            buildAdUnitCode(e) {
                return e.getContainerId()
            }
            setupPrebidAdUnitsArray(e) {
                this.removePreviouslySetupAdUnits(e), this.prebid.addAdUnits(e)
            }
            removePreviouslySetupAdUnits(e) {
                const t = this.getPreviouslySetupAdUnits(),
                    r = this.findAllAdUnitCodesForNewFetch(e, t);
                this.prebid.removeAdUnit(r)
            }
            findAllAdUnitCodesForNewFetch(e, t) {
                return e.map((e => {
                    let {
                        code: t
                    } = e;
                    return t
                })).filter((e => t.includes(e)))
            }
            getPreviouslySetupAdUnits() {
                return this.prebid.getAdUnits().map((e => {
                    let {
                        code: t
                    } = e;
                    return t
                }))
            }
            buildPrebidBidderSettings(e) {
                const t = Object.entries(e).map((e => {
                    let [t, r] = e;
                    return {
                        [t]: this.buildPrebidBidderSetting(r)
                    }
                }));
                return Object.assign({}, ...t)
            }
            buildPrebidBidderSetting(e) {
                const {
                    bidCpmAdjustmentFactor: t
                } = e, r = function(e, t) {
                    var r = {};
                    for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (r[i] = e[i]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                        var n = 0;
                        for (i = Object.getOwnPropertySymbols(e); n < i.length; n++) t.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[n]) && (r[i[n]] = e[i[n]])
                    }
                    return r
                }(e, ["bidCpmAdjustmentFactor"]), i = this.buildBidCmpAdjustment(t);
                return Object.assign(Object.assign({}, r), {
                    bidCpmAdjustment: i
                })
            }
            buildBidCmpAdjustment(e) {
                return e ? t => t * e : void 0
            }
            maxTimeout(e) {
                const t = this.store.getPrebidOptions().defaultTimeout,
                    r = this.extractValidTimeouts(e, t);
                return r.length > 0 ? Math.max(...r) : t
            }
            extractValidTimeouts(e, t) {
                return e.map((e => e.timeout)).map((e => e && this.isValidTimeout(e) ? e : t))
            }
            isValidTimeout(e) {
                return "number" == typeof(t = e) && isFinite(t) && e >= 0;
                var t
            }
            pushPrebidQueue(e) {
                this.prebid.pushCommand(e)
            }
        };
        Mr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, Dr, Nr])], Mr);
        const xr = Mr;
        let Gr = class {
            constructor(e, t, r, i, n) {
                this.logger = e, this.prebid = t, this.prebidBidFetcher = r, this.advertiserResizer = i, this.gamDefinedSlotRegistry = n
            }
            getSizeFilteredAdvertisers(e) {
                const t = this.filterPrebidAdvertisers(e);
                return 0 === t.length ? [] : this.advertiserResizer.getResizedAdvertisersForPrebid(t)
            }
            getPageLevelTargetings() {
                return {
                    prebid_version: this.prebid.getVersion(),
                    g_prebid_version: this.prebid.getVersion(),
                    ad_h: (new Date).getUTCHours().toString()
                }
            }
            syncBiddingWithGam(e) {
                const t = this.filterPrebidAdvertisers(e);
                0 !== t.length && this.prebid.pushCommand((() => {
                    this.setTargetingForGPTAsync(t)
                }))
            }
            async getWinningBids(e) {
                const t = this.filterPrebidAdvertisers(e),
                    r = t.map((e => e.getAdvertiser()));
                if (0 === r.length) return {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: []
                };
                const i = await this.prebidBidFetcher.requestBids(r);
                return this.debug("Auction result:", i), {
                    advertisersToForwardToGam: t,
                    advertisersToCancel: []
                }
            }
            setTargetingForGPTAsync(e) {
                const t = this.filterPrebidAdvertisers(e);
                if (0 === t.length) return;
                const r = t.map((e => this.buildAdUnitCode(e))),
                    i = t.map((e => e.getAdvertiser()));
                this.prebid.pushCommand((() => {
                    this.debug("Set GAM slot targeting for these advertisers", i), this.prebid.setTargetingForGPTAsync(r);
                    const e = i.map((e => [e, this.gamDefinedSlotRegistry.getTargetings(e.getContainerId())]));
                    this.debug("Slot targetings:", e)
                }))
            }
            buildAdUnitCode(e) {
                return e.getContainerId()
            }
            isPrebidGamAdvertiser(e) {
                return e.getAdvertiserType() === ne.DISPLAY_WEB_PREBID || e.getBiddingType() === or.PREBID
            }
            filterPrebidAdvertisers(e) {
                return e.filter(this.isPrebidGamAdvertiser)
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[PrebidBiddingStrategy] ", ...t)
            }
        };
        Gr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, Dr, xr, Tr, Tt])], Gr);
        const zr = Gr;
        let Wr = class {
            constructor() {
                this.logger = E.resolve(G), this.relperApiBaseUrl = E.resolve(M).getRelperEcpmPredictionApiBaseUrl(), this.relperApiUrl = `${this.relperApiBaseUrl}/model/predict`
            }
            async fetchEcpmForQuery(e) {
                let t, {
                    query: r,
                    ecpmPredictionFactor: i
                } = e;
                try {
                    const e = this.createRequestInit({
                            query: r
                        }),
                        n = await fetch(this.relperApiUrl, e);
                    if (200 === n.status) {
                        const {
                            prediction: e
                        } = await n.json();
                        this.validateEcpmPrediction(e), t = Math.max(e * i, 0), this.logger.debug(`[RelperEcpmPredictionClient] Fetched ecpm for query from RelPer API: query: { ${r} }. ecpm: { ${t} }, predictedEcpm: { ${e} }, prediction factor: { ${i} } .`)
                    } else if (422 === n.status) {
                        const {
                            detail: e
                        } = await n.json();
                        this.logger.error(`[RelperEcpmPredictionClient] Failed to fetch ecpm for query from RelPer API: query: { ${r} }. Status: { ${n.status} }. Detail: { ${e} }. `)
                    }
                } catch (e) {
                    const t = `[RelperEcpmPredictionClient] Failed to fetch ecpm for query: { ${r} }: { ${e} }`;
                    throw this.logger.error(t), new Error(t)
                }
                return null != t ? t : 0
            }
            createRequestInit(e) {
                let {
                    query: t
                } = e;
                const r = {
                    search_keyword: t
                };
                return {
                    method: "POST",
                    redirect: "follow",
                    headers: {
                        accept: "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(r)
                }
            }
            validateEcpmPrediction(e) {
                if (!(e >= 0 || -1 === e)) throw new Error(`[RelperEcpmPredictionClient] Invalid ecpm fetched from RelPer API: { ${e} }`)
            }
        };
        Wr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O()], Wr);
        let Ur = class {
            constructor(e, t, r, i, n, s) {
                this.store = e, this.logger = t, this.metrics = r, this.gamDefinedSlotRegistry = i, this.relperEcpmPredictionClient = n, this.targetedGamAdvertiserFactory = s
            }
            getSizeFilteredAdvertisers(e) {
                const t = this.filterRelperIgniteAdvertisers(e);
                return 0 === t.length ? [] : this.isRelperIgniteBiddingEnabled(t) ? t : []
            }
            getPageLevelTargetings() {
                return {}
            }
            async getWinningBids(e) {
                var t;
                const r = this.filterRelperIgniteAdvertisers(e);
                if (0 === r.length) return this.cancelAllAdvertisers(r);
                const i = r.map((e => e.getAdvertiser())),
                    n = this.store.getQuery(i);
                if (!(null == n ? void 0 : n.trim())) return this.observeMissingQuery(r), this.cancelAllAdvertisers(r);
                const {
                    ecpmPredictionFactor: s,
                    minimumEcpm: o
                } = this.extractFirstGamAdvertiserSettings(r), a = await this.relperEcpmPredictionClient.fetchEcpmForQuery({
                    query: n,
                    ecpmPredictionFactor: s
                });
                if (a <= 0) return this.debug(`ecpm <= 0 given by RelPer prediction client: { ${a} }. Cancelling { ${r.length} } GamAdvertisers. The ecpm prediction factor is: { ${s} }`), this.cancelAllAdvertisers(r);
                if (a < o) return this.debug(`ecpm < minimum ecpm given by RelPer prediction client: { ecpm: { ${a} } < minimum: { ${o} }. Cancelling { ${r.length} } GamAdvertisers. The ecpm prediction factor is: { ${s} }`), this.cancelAllAdvertisers(r);
                const c = this.targetedGamAdvertiserFactory.create({
                    gamAdvertisers: e,
                    queryString: n,
                    ecpm: a
                });
                return this.debug(`Auction result: { ecpm: { ${a} }, query: { ${n} }, advertisers to forward to GAM & slot level targeting:`, c.map((e => e.getAdvertiser())), null === (t = c[0]) || void 0 === t ? void 0 : t.getSlotLevelTargeting()), {
                    advertisersToForwardToGam: c,
                    advertisersToCancel: []
                }
            }
            syncBiddingWithGam(e) {
                const t = this.filterRelperIgniteAdvertisers(e);
                0 !== t.length ? t.forEach((e => {
                    const t = e.getAdvertiser(),
                        r = e.getSlotLevelTargeting();
                    r ? (this.debug("Syncing advertiser with GAM. Advertiser, slotLevelTargeting:", t, e.getSlotLevelTargeting()), this.gamDefinedSlotRegistry.getGamSlot(t.getContainerId()).updateTargetingFromMap(r)) : this.debug("Cannot sync RelperIgnite bid for advertiser with GAM. \n           GamAdvertiser#getSlotLevelTargeting() returned undefined. Advertiser:", t)
                })) : this.debug("No advertisers to sync with GAM were given.")
            }
            cancelAllAdvertisers(e) {
                return {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: e
                }
            }
            observeMissingQuery(e) {
                const t = e.map((e => e.getAdvertiser()));
                t.forEach((e => this.metrics.incrementMissingQuery(e.type)));
                const r = t.map((e => ({
                    type: e.type,
                    containerId: e.getContainerId(),
                    biddingType: e.biddingType,
                    adSettingName: e.adSettingName
                })));
                this.logger.error(`[RelperIgniteBiddingStrategy] Missing query, cancelling { ${e.length} } advertisers with: { ${JSON.stringify(r,void 0,2)} }.`)
            }
            isRelperIgniteBiddingEnabled(e) {
                var t;
                return 0 !== e.length && null !== (t = e[0].getSettings().isRelperIgniteBiddingEnabled) && void 0 !== t && t
            }
            extractFirstGamAdvertiserSettings(e) {
                const {
                    relperIgniteMinimumEcpm: t,
                    relperIgniteEcpmPredictionFactor: r
                } = e[0].getSettings();
                return {
                    ecpmPredictionFactor: null != r ? r : 0,
                    minimumEcpm: null != t ? t : 0
                }
            }
            filterRelperIgniteAdvertisers(e) {
                return e.filter((e => e.getBiddingType() === or.RELPER_IGNITE))
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[RelperIgniteBiddingStrategy] ", ...t)
            }
        };
        Ur = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, G, de, Tt, Wr, class {
            create(e) {
                let {
                    gamAdvertisers: t,
                    queryString: r,
                    ecpm: i
                } = e;
                if (0 === t.length) return [];
                const n = this.createSlotLevelBiddingGamTargetings(i);
                return t.map((e => e.copy({
                    slotLevelBiddingGamTargetings: n,
                    settings: Object.assign(Object.assign({}, e.getSettings()), {
                        queryString: r
                    })
                })))
            }
            createSlotLevelBiddingGamTargetings(e) {
                return {
                    hb_pb_ignite: e.toFixed(2),
                    hb_bidder_ignite: "ignite"
                }
            }
        }])], Ur);
        const Vr = Ur;
        let $r = class {
            constructor(e) {
                this.logger = e
            }
            create(e, t, r) {
                switch (t) {
                    case or.AMAZON:
                        return this.createAmazonGamAdvertiser(e, r);
                    case or.PREBID:
                        return this.createPrebidGamAdvertiser(e, r);
                    case or.RELPER_IGNITE:
                        return this.createRelperIgniteGamAdvertiser(e, r);
                    case or.ADSENSE:
                        return this.createAdsenseGamAdvertiser(e, r);
                    default:
                        {
                            const e = `[UnifiedAuctionGamAdvertiserFactory] Invalid bidding type: ${t}`;
                            throw this.logger.error(e),
                            new Error(e)
                        }
                }
            }
            createAmazonGamAdvertiser(e, t) {
                return e.copy({
                    biddingType: or.AMAZON,
                    settings: this.pickSettings(t, ["container", "positionName", "code", "dfpTargets", "gamTargets", "sizes", "floorPrice"])
                })
            }
            createPrebidGamAdvertiser(e, t) {
                return e.copy({
                    biddingType: or.PREBID,
                    settings: this.pickSettings(t, ["container", "positionName", "code", "dfpTargets", "gamTargets", "sizes", "mediaTypes", "bids", "pageUrl", "timeout", "userIdHash", "refreshInterval", "floorPrice"])
                })
            }
            createRelperIgniteGamAdvertiser(e, t) {
                return e.copy({
                    biddingType: or.RELPER_IGNITE,
                    settings: this.pickSettings(t, ["code", "sizes", "container", "positionName", "dfpTargets", "gamTargets", "icasExperimentTags", "channel", "clientId", "contextTargets", "luckyNumber", "numberOfAds", "queryString", "templateId", "subtype", "isRelperIgniteBiddingEnabled", "relperIgniteEcpmPredictionFactor", "relperIgniteMinimumEcpm"])
                })
            }
            createAdsenseGamAdvertiser(e, t) {
                return e.copy({
                    biddingType: or.ADSENSE,
                    settings: this.pickSettings(t, ["container", "positionName", "code", "sizes", "dfpTargets", "gamTargets", "adsafe", "channel", "subtype", "query", "numberOfAds", "number", "clickableBackgrounds", "gl", "hl", "linkTarget", "numRepeated", "pubId", "sellerRatings", "siteLinks", "width", "styleId", "adsenseEcpm"])
                })
            }
            pickSettings(e, t) {
                const r = {};
                return t.forEach((t => r[t] = e[t])), r
            }
        };
        $r = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G])], $r);
        const qr = $r;
        let Hr = class {
            constructor(e) {
                this.factory = e
            }
            splitUnifiedAuctionAdvertisersByBiddingPlatform(e) {
                return e.flatMap(this.splitUnifiedAuctionAdvertiserByBiddingPlatform.bind(this))
            }
            splitUnifiedAuctionAdvertiserByBiddingPlatform(e) {
                const t = e.getSettings();
                return [this.factory.create(e, or.AMAZON, t), this.factory.create(e, or.PREBID, t), this.factory.create(e, or.RELPER_IGNITE, t), this.factory.create(e, or.ADSENSE, t)]
            }
        };
        Hr = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [qr])], Hr);
        const Qr = Hr;
        class Kr {
            constructor(e, t) {
                this.biddingStrategies = e, this.unifiedAuctionAdvertiserSplitter = t, this.logger = E.resolve(G)
            }
            getSizeFilteredAdvertisers(e) {
                if (0 === e.length) return this.debug("No GAM Advertisers given to filter"), [];
                const t = this.unifiedAuctionAdvertiserSplitter.splitUnifiedAuctionAdvertisersByBiddingPlatform(e);
                return this.validateSplitGamAdvertisers({
                    gamAdvertisers: e,
                    splitGamAdvertisers: t
                }), this.biddingStrategies.flatMap((e => e.getSizeFilteredAdvertisers(t)))
            }
            getPageLevelTargetings() {
                return this.biddingStrategies.reduce(((e, t) => Object.assign(Object.assign({}, e), t.getPageLevelTargetings())), {})
            }
            async getWinningBids(e) {
                if (0 === e.length) return this.debug("No GAM Advertisers given to bid"), {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: []
                };
                this.debug("Get winning bids for:", this.extractAdvertisers(e));
                const t = await this.fetchWinningBids(e);
                return this.debug("Received all winning bids for:", this.extractAdvertisers(e)), this.debug("Forward gamAdvertisers to GAM:", this.extractAdvertisers(t.advertisersToForwardToGam)), this.debug("Cancelling gamAdvertisers:", this.extractAdvertisers(t.advertisersToCancel)), t
            }
            syncBiddingWithGam(e) {
                0 !== e.length ? this.biddingStrategies.forEach((t => t.syncBiddingWithGam(e))) : this.debug("No GAM Advertisers given to sync")
            }
            async fetchWinningBids(e) {
                const t = (await Promise.all(this.biddingStrategies.map((t => t.getWinningBids(e))))).reduce(((e, t) => ({
                    advertisersToForwardToGam: [...e.advertisersToForwardToGam, ...t.advertisersToForwardToGam],
                    advertisersToCancel: [...e.advertisersToCancel, ...t.advertisersToCancel]
                })), {
                    advertisersToForwardToGam: [],
                    advertisersToCancel: []
                });
                return {
                    advertisersToForwardToGam: t.advertisersToForwardToGam,
                    advertisersToCancel: this.getAdvertisersToCancelForUnifiedAuction(t)
                }
            }
            getAdvertisersToCancelForUnifiedAuction(e) {
                let {
                    advertisersToCancel: t,
                    advertisersToForwardToGam: r
                } = e;
                return t.filter((e => !r.map((e => e.getContainerId())).includes(e.getContainerId())))
            }
            extractAdvertisers(e) {
                return e.map((e => e.getAdvertiser()))
            }
            validateSplitGamAdvertisers(e) {
                let {
                    gamAdvertisers: t,
                    splitGamAdvertisers: r
                } = e;
                const i = t.length * this.biddingStrategies.length;
                if (r.length !== i) throw Error(`[UnifiedAuction] ${r.length} split advertisers did not match ${i} GamAdvertisers.`)
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug("[UnifiedAuctionBiddingStrategy] ", ...t)
            }
        }
        class Yr {
            constructor(e, t) {
                this.bidResponseMapper = e, this.amazonPublisherServicesTag = t
            }
            async requestBids(e) {
                return new Promise((t => {
                    const r = {
                        slots: e,
                        timeout: 2e3
                    };
                    this.amazonPublisherServicesTag.fetchBids(r, (e => {
                        t({
                            bidResponses: e.map(this.bidResponseMapper.map)
                        })
                    }))
                }))
            }
        }
        class Jr {
            constructor(e) {
                this.cpmByAmazonBidId = new Map(Object.entries(e)), this.map = this.map.bind(this)
            }
            map(e) {
                return {
                    slotID: e.slotID,
                    amznbid: e.amznbid,
                    cpm: this.cpmByAmazonBidId.get(String(e.amznbid)) || 0
                }
            }
        }
        const Zr = {
            "1demjuo": .01,
            vncjcw: .02,
            "1v5wkcg": .03,
            "50fim8": .04,
            "14izjls": .05,
            mrpj40: .06,
            "1ma9k3k": .07,
            "9g90qo": .08,
            "18yt1q8": .09,
            r7j18g: .1,
            "1qq3280": .11,
            km0hs: .12,
            "10361hc": .13,
            ibw0zk: .14,
            "1hug1z4": .15,
            g3z9xc: .16,
            "1fmjaww": .17,
            xv9af4: .18,
            "1xdtbeo": .19,
            "78c9og": .2,
            "16qwao0": .21,
            ozma68: .22,
            "1oi6b5s": .23,
            bo5rsw: .24,
            "1b6pssg": .25,
            tffsao: .26,
            "1sxzta8": .27,
            "2sirk0": .28,
            "12b2sjk": .29,
            kjss1s: .3,
            "1k2ct1c": .31,
            f00we8: .32,
            "1eikxds": .33,
            wraww0: .34,
            "1w9uxvk": .35,
            "64dw5c": .36,
            "15mxx4w": .37,
            nvnwn4: .38,
            "1ne7xmo": .39,
            ak7e9s: .4,
            "1a2rf9c": .41,
            sbherk: .42,
            "1ru1fr4": .43,
            "1oke0w": .44,
            "1174f0g": .45,
            jfueio: .46,
            "1iyefi8": .47,
            h7xngg: .48,
            "1gqhog0": .49,
            yz7ny8: .5,
            "1yhroxs": .51,
            "8can7k": .52,
            "17uuo74": .53,
            q3knpc: .54,
            "1pm4oow": .55,
            cs45c0: .56,
            "1cao6bk": .57,
            uje5ts: .58,
            "1u1y6tc": .59,
            "3wh534": .6,
            "13f162o": .61,
            lnr5kw: .62,
            "1l6b6kg": .63,
            dc3c3k: .64,
            "1cund34": .65,
            v3dclc: .66,
            "1ulxdkw": .67,
            "4ggbuo": .68,
            "13z0cu8": .69,
            m7qccg: .7,
            "1lqadc0": .71,
            "8w9tz4": .72,
            "18etuyo": .73,
            qnjugw: .74,
            "1q63vgg": .75,
            mtq8: .76,
            zj6ups: .77,
            hrwu80: .78,
            "1hagv7k": .79,
            fk035s: .8,
            "1f2k45c": .81,
            xba3nk: .82,
            "1wtu4n4": .83,
            "6od2ww": .84,
            "166x3wg": .85,
            ofn3eo: .86,
            "1ny74e8": .87,
            b46l1c: .88,
            "1amqm0w": .89,
            svglj4: .9,
            "1se0mio": .91,
            "28jksg": .92,
            "11r3ls0": .93,
            jztla8: .94,
            "1jidm9s": .95,
            eg1pmo: .96,
            "1dylqm8": .97,
            w7bq4g: .98,
            "1vpvr40": .99,
            "5kepds": 1,
            "152yqdc": 1.01,
            nbopvk: 1.02,
            "1mu8qv4": 1.03,
            a087i8: 1.04,
            "19is8hs": 1.05,
            rri800: 1.06,
            "1ra28zk": 1.07,
            "14l79c": 1.08,
            "10n588w": 1.09,
            ivv7r4: 1.1,
            "1ief8qo": 1.11,
            gnygow: 1.12,
            "1g6ihog": 1.13,
            yf8h6o: 1.14,
            "1xxsi68": 1.15,
            "7sbgg0": 1.16,
            "17avhfk": 1.17,
            pjlgxs: 1.18,
            "1p25hxc": 1.19,
            c84ykg: 1.2,
            "1bqozk0": 1.21,
            tzez28: 1.22,
            "1thz01s": 1.23,
            "3chybk": 1.24,
            "12v1zb4": 1.25,
            l3rytc: 1.26,
            "1kmbzsw": 1.27,
            e6248w: 1.28,
            "1dom58g": 1.29,
            vxc4qo: 1.3,
            "1vfw5q8": 1.31,
            "5af400": 1.32,
            "14sz4zk": 1.33,
            n1p4hs: 1.34,
            "1mk95hc": 1.35,
            "9q8m4g": 1.36,
            "198sn40": 1.37,
            rhimm8: 1.38,
            "1r02nls": 1.39,
            ullvk: 1.4,
            "10d5mv4": 1.41,
            ilvmdc: 1.42,
            "1i4fncw": 1.43,
            gdyvb4: 1.44,
            "1fwiwao": 1.45,
            y58vsw: 1.46,
            "1xnswsg": 1.47,
            "7ibv28": 1.48,
            "170vw1s": 1.49,
            p9lvk0: 1.5,
            "1os5wjk": 1.51,
            by5d6o: 1.52,
            "1bgpe68": 1.53,
            tpfdog: 1.54,
            "1t7zeo0": 1.55,
            "32icxs": 1.56,
            "12l2dxc": 1.57,
            ktsdfk: 1.58,
            "1kccef4": 1.59,
            fa0hs0: 1.6,
            "1eskirk": 1.61,
            x1ai9s: 1.62,
            "1wjuj9c": 1.63,
            "6edhj4": 1.64,
            "15wxiio": 1.65,
            o5ni0w: 1.66,
            "1no7j0g": 1.67,
            au6znk: 1.68,
            "1acr0n4": 1.69,
            slh05c: 1.7,
            "1s4114w": 1.71,
            "1yjzeo": 1.72,
            "11h40e8": 1.73,
            jptzwg: 1.74,
            "1j8e0w0": 1.75,
            hhx8u8: 1.76,
            "1h0h9ts": 1.77,
            z979c0: 1.78,
            "1yrrabk": 1.79,
            "8ma8lc": 1.8,
            "184u9kw": 1.81,
            qdk934: 1.82,
            "1pw4a2o": 1.83,
            d23qps: 1.84,
            "1cknrpc": 1.85,
            utdr7k: 1.86,
            "1ubxs74": 1.87,
            "46gqgw": 1.88,
            "13p0rgg": 1.89,
            lxqqyo: 1.9,
            "1lgary8": 1.91,
            dm2xhc: 1.92,
            "1d4mygw": 1.93,
            vdcxz4: 1.94,
            "1uvwyyo": 1.95,
            "4qfx8g": 1.96,
            "148zy80": 1.97,
            mhpxq8: 1.98,
            "1m09yps": 1.99,
            "969fcw": 2,
            xl9p1c: 2.1,
            "2ij668": 2.2,
            nlob9c: 2.3,
            gxy22o: 2.4,
            u9ekg0: 2.5,
            "55fbb4": 2.6,
            igvtog: 2.7,
            bt5khs: 2.8,
            wwapkw: 2.9,
            "1tk6ps": 3,
            q8kge8: 3.1,
            dh34sg: 3.2,
            qsjn5s: 3.3,
            "6tcvls": 3.4,
            k4tdz4: 3.5,
            a58074: 3.6,
            yk89vk: 3.7,
            "3hhr0g": 3.8,
            n6ox6o: 3.9,
            giyo00: 4,
            tuf6dc: 4.1,
            "6jda80": 4.2,
            jutslc: 4.3,
            d73jeo: 4.4,
            vicqo0: 4.5,
            fm7sw: 4.6,
            oumhhc: 4.7,
            ev13pc: 4.8,
            s6hm2o: 4.9,
            "87auio": 5,
            lircw0: 5.1,
            "9iqx34": 5.2,
            xxr6rk: 5.3,
            "2v0nwg": 5.4,
            ny5szk: 5.5,
            hafjsw: 5.6,
            ulw268: 5.7,
            "4iy874": 5.8,
            hueqkg: 5.9,
            b6ohds: 6,
            w9tmgw: 6.1,
            "1733ls": 6.2,
            pm3da8: 6.3,
            e8k0lc: 6.4,
            rk0iyo: 6.5,
            "7ktreo": 6.6,
            kwa9s0: 6.7,
            awow00: 6.8,
            zbp5og: 6.9,
            "48ymtc": 7,
            mk7u2o: 7.1,
            fwhkw0: 7.2,
            t7y39c: 7.3,
            "5ww740": 7.4,
            j8cphc: 7.5,
            ckmgao: 7.6,
            vuu8e8: 7.7,
            s3pj4: 7.8,
            p73z7k: 7.9,
            f7ilfk: 8,
            siz3sw: 8.1,
            "8jsc8w": 8.2,
            lv8um8: 8.3,
            "93rj0g": 8.4,
            xirsow: 8.5,
            "2g19ts": 8.6,
            nj6eww: 8.7,
            gvg5q8: 8.8,
            u6wo3k: 8.9,
            "5hwt1c": 9,
            itdbeo: 9.1,
            c5n280: 9.2,
            x8s7b4: 9.3,
            "261og0": 9.4,
            ql1y4g: 9.5,
            dtkmio: 9.6,
            r514w0: 9.7,
            "75udc0": 9.8,
            khavpc: 9.9,
            ahphxc: 10,
            ywprls: 10.1,
            "3tz8qo": 10.2,
            msyha8: 10.3,
            g5883k: 10.4,
            tgoqgw: 10.5,
            "65mubk": 10.6,
            jh3cow: 10.7,
            ctd3i8: 10.8,
            v4mark: 10.9,
            "1vrwg": 11,
            ogw1kw: 11.1,
            ehansw: 11.2,
            rsr668: 11.3,
            "7tkem8": 11.4,
            l50wzk: 11.5,
            "9rhkao": 11.6,
            y6htz4: 11.7,
            "33rb40": 11.8,
            o6wg74: 11.9,
            hj670g: 12,
            uumpds: 12.1,
            "4roveo": 12.2,
            i35ds0: 12.3,
            bff4lc: 12.4,
            wik9og: 12.5,
            "1ftqtc": 12.6,
            puu0hs: 12.7,
            e2b9q8: 12.8,
            rdrs3k: 12.9,
            "7el0jk": 13,
            kq1iww: 13.1,
            aqg54w: 13.2,
            z5getc: 13.3,
            "42pvy8": 13.4,
            mdz37k: 13.5,
            fq8u0w: 13.6,
            t1pce8: 13.7,
            "5qng8w": 13.8,
            j23ym8: 13.9,
            cedpfk: 14,
            w3kvls: 14.1,
            "10ucqo": 14.2,
            pfumf4: 14.3,
            fg98n4: 14.4,
            srpr0g: 14.5,
            "8sizgg": 14.6,
            m3zhts: 14.7,
            "9ci680": 14.8,
            xrifwg: 14.9,
            "2orx1c": 15,
            nrx24g: 15.1,
            h46sxs: 15.2,
            ufnbb4: 15.3,
            "546d4w": 15.4,
            ifmvi8: 15.5,
            brwmbk: 15.6,
            wv1reo: 15.7,
            "1sb8jk": 15.8,
            q7bi80: 15.9,
            dfu6m8: 16,
            qraozk: 16.1,
            "6s3xfk": 16.2,
            k3kfsw: 16.3,
            a3z20w: 16.4,
            yizbpc: 16.5,
            "3g8su8": 16.6,
            n5fz0g: 16.7,
            ghppts: 16.8,
            tt6874: 16.9,
            "6i4c1s": 17,
            jtkuf4: 17.1,
            d5ul8g: 17.2,
            vh3shs: 17.3,
            ed9mo: 17.4,
            otdjb4: 17.5,
            ets5j4: 17.6,
            s58nwg: 17.7,
            "861wcg": 17.8,
            lhieps: 17.9,
            "9ozny8": 18,
            y3zxmo: 18.1,
            "319erk": 18.2,
            o4ejuo: 18.3,
            hgoao0: 18.4,
            us4t1c: 18.5,
            "4p6z28": 18.6,
            i0nhfk: 18.7,
            bcx88w: 18.8,
            wg2dc0: 18.9,
            "1dbugw": 19,
            psc45c: 19.1,
            eesrgg: 19.2,
            rq99ts: 19.3,
            "7r2i9s": 19.4,
            l2j0n4: 19.5,
            b2xmv4: 19.6,
            zhxwjk: 19.7,
            "4f7dog": 19.8,
            mqgkxs: 19.9,
            g2qbr4: 20,
            vmq29s: 20.5,
            "8bo64g": 21,
            nb28sg: 21.5,
            bxiw3k: 22,
            qwwyrk: 22.5,
            "3lv2m8": 23,
            jk7q4g: 23.5,
            ekf18g: 24,
            y9m7eo: 24.5,
            "4ut8u8": 25,
            pxydxc: 25.5,
            am2tj4: 26,
            sxc0sg: 26.5,
            wh14w: 27,
            lzm680: 27.5,
            gzthc0: 28,
            wy64u8: 28.5,
            "6v8av4": 29,
            n8kcg0: 29.5,
            d8yyo0: 30,
            s8d1c0: 30.5,
            "2t58n4": 31,
            hsjbb4: 31.5,
            e6olc0: 32,
            z9tqf4: 32.5,
            "5v0ruo": 33,
            p58jy8: 33.5,
            "91w3r4": 34,
            u518u8: 34.5,
            "24696o": 35,
            kffgg0: 35.5,
            g73ncw: 36,
            v6hq0w: 36.5,
            "7vftvk": 37,
            o8rvgg: 37.5,
            bhajuo: 38,
            rfn7cw: 38.5,
            "44lb7k": 39,
            j3zdvk: 39.5,
            fi4nwg: 40,
            xtdv5s: 40.5,
            "50qr5s": 41,
            q3vw8w: 41.5,
            a0jg1s: 42,
            tpqm80: 42.5,
            axnnk: 43,
            le2sqo: 43.5,
            hd8oow: 44,
            wcmrcw: 44.5,
            "7nmwao": 45,
            mn0yyo: 45.5,
            cnfl6o: 46,
            seajnk: 46.5,
            "2bcpog": 47,
            ioor9c: 47.5,
            dow2dc: 48,
            ys17gg: 48.5,
            "6c6tq8": 49,
            ong0zk: 49.5,
            "9y1jpc": 50
        };
        class Xr extends _e {
            constructor(e) {
                super(), this.retailMediaWebRenderer = e, this.logger = E.resolve(G), this.store = E.resolve(V), this.libertyAdLoadedMessageHandler = E.resolve(nt)
            }
            _fetch(e, t) {
                this.libertyAdLoadedMessageHandler.addPostMessageEventListener(t);
                const r = e.map((e => this.createRetailMediaSlotSetting(e)));
                this.logger.debug(`[RetailMediaFetcher] Load '${this.getAdvertiserType()}' ads for ${r.length} slot(s)`, r), this.retailMediaWebRenderer.slotSettingsQueue.push(...r)
            }
            createRetailMediaSlotSetting(e) {
                const t = e.settings,
                    {
                        container: r,
                        positionName: i
                    } = t,
                    n = function(e, t) {
                        var r = {};
                        for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (r[i] = e[i]);
                        if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                            var n = 0;
                            for (i = Object.getOwnPropertySymbols(e); n < i.length; n++) t.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[n]) && (r[i[n]] = e[i[n]])
                        }
                        return r
                    }(t, ["container", "positionName"]);
                return Object.assign({
                    adType: e.type,
                    containerId: r
                }, n)
            }
            getAdvertiserType() {
                return ne.RETAIL_MEDIA_WEB
            }
        }
        let ei = class {
            constructor(e, t, r, i, n, s, o, a, c, l, d, u, g) {
                this.store = e, this.advertiserResizer = t, this.gamDefinedSlotRegistry = r, this.amazonTagLoader = i, this.googleTagLoader = n, this.prebidTagLoader = s, this.adsenseTagLoader = o, this.criteoTagLoader = a, this.hubvisorTagLoader = c, this.aaxTagLoader = l, this.advertisingWebRendererTagLoader = d, this.noBiddingStrategy = u, this.retailMediaWebRendererTagLoader = g, this.adsenseFetcher = E.resolve(Le)
            }
            buildBiddingFetchers() {
                const e = this.googleTagLoader.load(),
                    t = E.resolve(zr),
                    r = this.buildGamFetcher(e, ne.DISPLAY_WEB_PREBID, t),
                    i = this.amazonTagLoader.load(),
                    n = new Yr(new Jr(Zr), i),
                    s = new Cr(this.advertiserResizer, this.amazonTagLoader.load(), n),
                    o = E.resolve(Vr),
                    a = E.resolve(Pr),
                    c = this.buildGamFetcher(e, ne.DISPLAY_WEB_AMAZON, s),
                    l = E.resolve(Qr),
                    d = this.buildIgniteFetcher(this.advertisingWebRendererTagLoader.load(), ne.IGNITE_WEB);
                return [r, c, this.buildGamFetcher(this.googleTagLoader.load(), ne.DISPLAY_WEB_UNIFIED_AUCTION, new Kr([t, s, o, a], l), d)]
            }
            buildAaxFetcher() {
                return this.store.isAdblockerEnabled() ? (this.store.isFeatureEnabled(Y.AAX) && this.aaxTagLoader.load(), this.buildNoBiddingGamFetcher(this.googleTagLoader.load(), ne.DISPLAY_WEB_AAX)) : new mr(ne.DISPLAY_WEB_AAX)
            }
            buildIgniteFetchers() {
                const e = this.advertisingWebRendererTagLoader.load();
                return [this.buildIgniteFetcher(e, ne.AFFILIATESHUB_WEB), this.buildIgniteFetcher(e, ne.IGNITE_WEB), this.buildIgniteFetcher(e, ne.IGNITE_MWEB)]
            }
            buildNoBiddingGamFetcher(e, t) {
                return this.buildGamFetcher(e, t, this.noBiddingStrategy)
            }
            buildGamFetcher(e, t, r, i) {
                return new vr(e, this.store, t, r, i)
            }
            buildIgniteFetcher(e, t) {
                return new yt(e, t)
            }
            buildBingFetcher() {
                const e = this.advertisingWebRendererTagLoader.load();
                return new mt(e, ne.BING_WEB)
            }
            buildCriteoFetcher() {
                return new St(this.criteoTagLoader.load())
            }
            buildDisplayWebFetcher() {
                return this.buildNoBiddingGamFetcher(this.googleTagLoader.load(), ne.DISPLAY_WEB)
            }
            buildHubvisorFetcher() {
                const e = this.googleTagLoader.load(),
                    t = this.hubvisorTagLoader.load(),
                    r = new jr(t, this.advertiserResizer, this.store);
                return new vr(e, this.store, ne.DISPLAY_WEB_HUBVISOR, r)
            }
            buildRetailMediaFetcher() {
                const e = this.retailMediaWebRendererTagLoader.load();
                return new Xr(e)
            }
            buildFirstPartyPlaFetcher() {
                const e = this.advertisingWebRendererTagLoader.load();
                return new vt(e, ne.FIRST_PARTY_PLA)
            }
        };
        ei = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, Tr, Tt, ze, $e, Ke, Pe, Ue, He, Ne, xe, Ir, Je])], ei);
        const ti = ei;
        let ri = class {
            constructor(e) {
                this.lazyFetcherBuilder = e, this.fetchers = {}, this.adsenseFetcher = E.resolve(Le)
            }
            getFetcher(e) {
                this.fetchers[e] || this.loadMissingFetchers(e);
                const t = this.fetchers[e];
                if (t) return t;
                throw new Error(`Fetcher ${e} is unknown`)
            }
            loadMissingFetchers(e) {
                this.buildRelatedFetchers(e).forEach((e => {
                    this.fetchers[e.getAdvertiserType()] = e
                }))
            }
            buildRelatedFetchers(e) {
                switch (e) {
                    case ne.ADSENSE_WEB:
                        return [this.adsenseFetcher];
                    case ne.DISPLAY_WEB:
                        return [this.lazyFetcherBuilder.buildDisplayWebFetcher()];
                    case ne.DISPLAY_WEB_AAX:
                        return [this.lazyFetcherBuilder.buildAaxFetcher()];
                    case ne.ADBLOCK_CRITEO_WEB:
                        return [this.lazyFetcherBuilder.buildCriteoFetcher()];
                    case ne.AFFILIATESHUB_WEB:
                    case ne.IGNITE_WEB:
                    case ne.IGNITE_MWEB:
                        return this.lazyFetcherBuilder.buildIgniteFetchers();
                    case ne.BING_WEB:
                        return [this.lazyFetcherBuilder.buildBingFetcher()];
                    case ne.DISPLAY_WEB_PREBID:
                    case ne.DISPLAY_WEB_AMAZON:
                    case ne.DISPLAY_WEB_UNIFIED_AUCTION:
                        return this.lazyFetcherBuilder.buildBiddingFetchers();
                    case ne.DISPLAY_WEB_HUBVISOR:
                        return [this.lazyFetcherBuilder.buildHubvisorFetcher()];
                    case ne.RETAIL_MEDIA_WEB:
                        return [this.lazyFetcherBuilder.buildRetailMediaFetcher()];
                    case ne.FIRST_PARTY_PLA:
                        return [this.lazyFetcherBuilder.buildFirstPartyPlaFetcher()];
                    default:
                        throw new Error(`Advertiser '${e}' is unknown.`)
                }
            }
        };
        ri = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [ti])], ri);
        const ii = ri;
        let ni = class {
            constructor(e, t) {
                this.metrics = e, this.lazyFetcherLoader = t
            }
            async fetchBackfills(e) {
                const t = e.getBackFillAdvertisers();
                let r = {
                    filled: !1,
                    fillInformation: {},
                    advertiser: e.firstAdvertiser()
                };
                this.hasFills(t) ? e.debug("Fetch backfill...") : e.debug("No backfill. Abort!");
                for (const i of t) {
                    if (e.htmlSlot.cleanContainer(), r = await this.fetchFromAdvertiser(i, e), r.filled) break;
                    e.debug(`Backfill by ${i.type} failed`)
                }
                return e.handleBackfillFetchResult(r)
            }
            fetchFromAdvertiser(e, t) {
                const r = this.lazyFetcherLoader.getFetcher(e.type);
                return t.debug(`Load ${r.getAdvertiserType()} ad...`), this.metrics.incrementAdvertiserRequestMetric(e), r.fetchAd(e)
            }
            hasFills(e) {
                return e.length > 0
            }
        };
        ni = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [de, ii])], ni);
        const si = ni;
        let oi = class {
            constructor(e, t) {
                this.documentWrapper = e, this.windowWrapper = t, this.intersectionObserver = null, this.observedSlots = new Set, this.viewableSlots = new Set, this.createIntersectionObserver()
            }
            resetState() {
                this.observedSlots.clear(), this.viewableSlots.clear(), this.createIntersectionObserver()
            }
            observe(e) {
                const t = e.htmlSlot.getDomElementOrThrow();
                null !== this.intersectionObserver && (this.observedSlots.add(e), this.intersectionObserver.observe(t))
            }
            isSlotViewable(e) {
                return !this.hasIntersectionObserver() && !this.hasVisibilityState() || (this.hasIntersectionObserver() ? "visible" === this.documentWrapper.get().visibilityState && this.viewableSlots.has(e) : "visible" === this.documentWrapper.get().visibilityState)
            }
            getIntersectionObserverConfig() {
                return {
                    threshold: .5
                }
            }
            handleIntersection(e) {
                e.forEach((e => {
                    const t = e.target,
                        r = this.getSlotByPositionName(t.getAttribute("data-liberty-position-name"));
                    r && (e.isIntersecting ? (this.viewableSlots.add(r), t.setAttribute("data-liberty-is-viewable", "true")) : (this.viewableSlots.delete(r), t.setAttribute("data-liberty-is-viewable", "false")))
                }))
            }
            getSlotByPositionName(e) {
                return Array.from(this.observedSlots).find((t => t.positionName === e))
            }
            hasIntersectionObserver() {
                return "IntersectionObserver" in this.windowWrapper.get()
            }
            hasVisibilityState() {
                return "visibilityState" in this.documentWrapper.get()
            }
            createIntersectionObserver() {
                this.hasIntersectionObserver() && (this.intersectionObserver && this.intersectionObserver.disconnect(), this.intersectionObserver = new IntersectionObserver(this.handleIntersection.bind(this), this.getIntersectionObserverConfig()))
            }
        };
        oi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [Q, q])], oi);
        const ai = oi;
        class ci {
            constructor(e) {
                this.slot = e, e.onLoadDone((e => {
                    e.isFilled && (this.slotFillEvent = e)
                }))
            }
            isRefreshable() {
                if (void 0 === this.slotFillEvent) return !0;
                const e = this.slotFillEvent.gamAdvertiserId;
                return null == e || Ht.includes(e)
            }
        }
        class li {
            constructor(e) {
                this.slot = e, this.refreshCount = -1, this.logger = E.resolve(G), this.slotObserver = E.resolve(ai), this.filledAdvertiserRefreshRule = new ci(e), e.isPresentInDom() && this.slotObserver.observe(e)
            }
            isRefreshPossible() {
                const e = this.isRefreshIntervalEnabled(),
                    t = this.isFilledAdvertiserRefreshable(),
                    r = this.slotObserver.isSlotViewable(this.slot);
                return this.logger.debug(`[Slot ${this.slot.containerId}] refresh status:`, {
                    isRefreshIntervalEnabled: e,
                    isFilledAdvertiserRefreshable: t,
                    isViewable: r,
                    refreshCount: this.refreshCount
                }), e && t && r
            }
            getRefreshCount() {
                return this.refreshCount
            }
            incrementRefreshCount() {
                this.refreshCount++
            }
            isRefreshIntervalEnabled() {
                return Boolean(this.slot.firstAdvertiser().settings.refreshIntervalEnabled)
            }
            isFilledAdvertiserRefreshable() {
                return this.filledAdvertiserRefreshRule.isRefreshable()
            }
        }
        class di {
            constructor(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    r = arguments.length > 2 ? arguments[2] : void 0,
                    i = arguments.length > 3 ? arguments[3] : void 0,
                    n = arguments.length > 4 ? arguments[4] : void 0;
                this.isBackfill = t, this.positionName = r, this.positionId = i, this.slotRefreshCount = n, this.adSettingId = e.adSettingId, this.adSettingName = e.adSettingName, this.type = e.type, this.trackingCode = e.trackingCode, this.settings = e.settings, this.biddingType = e.biddingType
            }
            getContainerId() {
                return this.settings.container
            }
            isValid() {
                return this.isSizeValid()
            }
            copy(e) {
                let {
                    settings: t,
                    advertiserType: r,
                    biddingType: i
                } = e;
                const n = {
                    adSettingId: this.adSettingId,
                    adSettingName: this.adSettingName,
                    settings: t || this.settings,
                    trackingCode: this.trackingCode,
                    type: r || this.type,
                    biddingType: i || this.biddingType
                };
                return new di(n, this.isBackfill, this.positionName, this.positionId, this.slotRefreshCount)
            }
            isSizeValid() {
                const e = [ne.DISPLAY_WEB_HUBVISOR, ne.DISPLAY_WEB, ne.DISPLAY_WEB_AAX, ne.DISPLAY_WEB_PREBID, ne.DISPLAY_WEB_AMAZON, ne.DISPLAY_WEB_UNIFIED_AUCTION];
                return !(void 0 === this.settings.sizes && e.includes(this.type))
            }
            isOutOfPage() {
                return !!this.settings.isInterstitial
            }
        }
        let ui = class {
            constructor(e) {
                this.logger = e
            }
            createConfigSettings(e, t, r, i) {
                const n = Object.assign(Object.assign({}, e.settings), {
                    container: t,
                    positionName: r
                });
                return n.sizes = this.defineSizesForConfig(n, i), n
            }
            defineSizesForConfig(e, t) {
                let r = e.sizes;
                if (t.enabled) {
                    const i = t.breakpointName,
                        n = `sizes_${i}`,
                        s = e[n];
                    s ? (r = s, this.logger.debug(`Slot ${e.positionName}: ${r} ${i} sizes`)) : this.logger.debug(`${e.positionName}: ${n} not present, will use the default value sizes`)
                }
                return r
            }
        };
        ui = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G])], ui);
        const gi = ui;
        class hi {
            constructor(e, t, r, i, n, s, o) {
                this.containerId = e, this.config = t, this.adblocking = r, this.lazy = i, this.reportMissingSlot = n, this.htmlSlot = s, this.breakpointFeature = o, this.logger = E.resolve(G), this.backfillFetcher = E.resolve(si), this.advertiserConfigSettingsFactory = E.resolve(gi), this.slotFillListeners = [], this.trackingCode = t.trackingCode, this.positionName = t.positionName, this.refreshCapability = new li(this)
            }
            onLoadDone(e) {
                this.slotFillListeners.push(e)
            }
            publishLoadDone(e, t, r) {
                this.slotFillListeners.forEach((i => {
                    i({
                        advertiser: e,
                        isFilled: t,
                        gamAdvertiserId: r.gamAdvertiserId
                    })
                }))
            }
            getRefreshCapability() {
                return this.refreshCapability
            }
            isPresentInDom() {
                return this.htmlSlot.isPresentInDom()
            }
            isValid() {
                return this.hasValidAdvertisers() && this.isPresentInDom()
            }
            isVisible() {
                return this.htmlSlot.isVisible()
            }
            isLazy() {
                return this.lazy
            }
            isMissingSlotReportingEnabled() {
                return this.reportMissingSlot
            }
            setupHtmlContainer() {
                this.htmlSlot.cleanVisibility(), this.htmlSlot.setContainerId(this.containerId)
            }
            setSlotLoaded(e, t, r) {
                this.publishLoadDone(t, e, r)
            }
            setVisibility(e) {
                this.htmlSlot.setVisibility(e)
            }
            firstAdvertiser() {
                return this.getAdvertisers()[0]
            }
            getBackFillAdvertisers() {
                return this.getAdvertisers().slice(1)
            }
            async handlePrimaryFetchResult(e) {
                const {
                    advertiser: t,
                    filled: r
                } = e;
                return r ? this.resolveFill(t, e.fillInformation) : await this.fetchBackfills()
            }
            async handleBackfillFetchResult(e) {
                const {
                    advertiser: t,
                    filled: r
                } = e;
                return r ? this.resolveFill(t, e.fillInformation) : this.abortFill(t)
            }
            async fetchBackfills() {
                return this.backfillFetcher.fetchBackfills(this)
            }
            getAdvertisers() {
                let e = "advertisers";
                return this.adblocking && this.config.adblockAdvertisers.length > 0 && (e = "adblockAdvertisers"), this.buildAdvertisers(e)
            }
            buildAdvertisers(e) {
                const t = [],
                    r = this.config[e];
                for (let e = 0; e < r.length; e++) {
                    const i = this.advertiserConfigSettingsFactory.createConfigSettings(r[e], this.containerId, this.config.positionName, this.breakpointFeature),
                        n = e > 0;
                    t.push(new di(Object.assign(Object.assign({}, r[e]), {
                        trackingCode: this.trackingCode,
                        settings: i
                    }), n, this.config.positionName, this.config.positionId, this.refreshCapability.getRefreshCount()))
                }
                return t
            }
            resolveFill(e, t) {
                return this.setSlotLoaded(!0, e, t), this.debug(`Filled by ${e.type}`), {
                    containerId: this.containerId,
                    type: e.type,
                    filled: !0
                }
            }
            abortFill(e) {
                return this.setSlotLoaded(!1, e, {}), this.htmlSlot.cleanContainer(), this.debug(`Not filled by ${e.type}`), {
                    containerId: this.containerId,
                    type: e.type,
                    filled: !1
                }
            }
            hasValidAdvertisers() {
                return this.getAdvertisers().some((e => e.isValid()))
            }
            debug() {
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                this.logger.debug(`Slot ${this.containerId}: `, ...t)
            }
        }
        let fi = class {
            constructor(e, t, r, i, n) {
                this.logger = e, this.libertyPerformanceMarker = t, this.slotPerformance = r, this.metrics = i, this.windowWrapper = n
            }
            createSlot(e) {
                const t = new hi(this.buildContainerId(e), e.slotConfig, e.adblocking, e.lazy, e.reportMissingSlot, this.createHtmlSlot(e), e.breakpointFeature);
                return this.setupEventPublishing(t), this.setupTracking(t, e), this.setupClickTracking(e, t), t
            }
            buildContainerId(e) {
                return e.breakpointFeature.enabled ? `${e.slotConfig.positionName}-${e.breakpointFeature.breakpointName}` : `${e.slotConfig.positionName}`
            }
            setupEventPublishing(e) {
                e.onLoadDone((t => {
                    this.windowWrapper.get().postMessage({
                        event: "liberty.slot.loaded",
                        payload: {
                            positionName: e.positionName,
                            containerId: e.containerId,
                            advertiser: t.advertiser.type,
                            isBackfill: t.advertiser.isBackfill,
                            filled: t.isFilled
                        }
                    }, "*")
                }))
            }
            setupTracking(e, t) {
                e.onLoadDone((r => {
                    this.libertyPerformanceMarker.loadingDone(e.containerId);
                    const i = this.slotPerformance.getPerformanceDurationList(e.containerId);
                    this.logger.debug("Performance", i), r.isFilled && r.advertiser && (this.metrics.incrementAdvertiserFillMetric(r.advertiser, i), t.adblocking || this.checkSlotVisibility(e, r.advertiser))
                }))
            }
            checkSlotVisibility(e, t) {
                e.isVisible() || t.isOutOfPage() || this.logger.error(`Slot container ${e.containerId} is not visible in DOM.`)
            }
            setupClickTracking(e, t) {
                new ue(this.getClickDetector(e.clickTrackingImprovementLabsVariant), e.enableClickTracking).setupClickTracking(t)
            }
            getClickDetector(e) {
                return e === re.V1 ? new he : new ge(E.resolve(G))
            }
            createHtmlSlot(e) {
                const t = e.slotConfig.positionName;
                return new Se(t, e.breakpointFeature)
            }
        };
        fi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, ye, me, de, q])], fi);
        const pi = fi;
        let yi = class {
            constructor(e, t) {
                this.store = e, this.slotFactory = t
            }
            buildSlotsByContainerId() {
                const e = {};
                return this.buildSlots().forEach((t => {
                    e[t.containerId] = t
                })), e
            }
            buildSlots() {
                return this.store.getSlotConfigs().map((e => {
                    var t;
                    const r = this.store.getSlotOptionsByPositionName(e.positionName),
                        i = Boolean(r.lazy);
                    return this.slotFactory.createSlot({
                        slotConfig: e,
                        adblocking: this.store.isAdblockerEnabled(),
                        lazy: i,
                        enableClickTracking: this.store.isFeatureEnabled(Y.CLICK_TRACKING),
                        clickTrackingImprovementLabsVariant: this.store.getClickTrackingImprovementLabsVariant(),
                        reportMissingSlot: null === (t = r.reportMissingSlot) || void 0 === t || t,
                        breakpointFeature: this.store.getBreakpointFeature()
                    })
                }))
            }
        };
        yi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, pi])], yi);
        const vi = yi;
        class mi {
            constructor(e) {
                this.slotsByContainerId = e
            }
            getSlots() {
                return Object.values(this.slotsByContainerId)
            }
            getSlot(e) {
                return this.slotsByContainerId[e]
            }
            getSlotsByPositionNames(e) {
                return this.getSlots().filter((t => e.includes(t.positionName)))
            }
            getLazySlots() {
                return this.getSlots().filter((e => e.isLazy()))
            }
            getNonLazySlots() {
                return this.getSlots().filter((e => !e.isLazy()))
            }
        }
        let bi = class {
            constructor() {
                this.logger = E.resolve(G)
            }
            rejectInvalidSlots(e) {
                const t = e.filter((e => e.isValid())),
                    r = e.filter((e => !e.isValid())),
                    i = [];
                return t.forEach((e => {
                    try {
                        e.setupHtmlContainer(), i.push(e)
                    } catch (t) {
                        this.logger.error(t), r.push(e)
                    }
                })), this.addLogForMissingSlots(r), [i, r]
            }
            fromRejectedSlotsToPromises(e) {
                return e.map((async e => Promise.resolve({
                    containerId: e.containerId,
                    filled: !1,
                    type: void 0
                })))
            }
            addLogForMissingSlots(e) {
                e.forEach((async e => {
                    const t = e.hasValidAdvertisers(),
                        r = e.isPresentInDom();
                    if (t && !r) {
                        const t = `Slot ${e.containerId} has a valid advertiser but is not present in the DOM`;
                        e.isMissingSlotReportingEnabled() ? this.logger.error(t) : this.logger.debug(t)
                    } else this.logger.debug(`Slot ${e.containerId} not valid. isPresentInDom: ${r}, existsAdvertiser: ${t}`)
                }))
            }
        };
        bi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], bi);
        let Ri = class {
            createFromContainerFetchResult(e) {
                return {
                    advertiser: e.advertiser,
                    filled: e.filled,
                    fillInformation: e.fillInformation
                }
            }
        };
        Ri = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], Ri);
        const Ai = Ri;
        let wi = class {
            constructor(e, t, r, i, n) {
                this.logger = e, this.libertyPerformanceMarker = t, this.slotContainerFetchResultFactory = r, this.metrics = i, this.lazyFetcherLoader = n
            }
            selectAndFetchPrimarySlots(e, t, r) {
                const i = this.selectPrimarySlots(e, r);
                return this.fetchPrimarySlots(e, t, i)
            }
            selectPrimarySlots(e, t) {
                return t.filter((t => t.firstAdvertiser().type === e))
            }
            fetchPrimarySlots(e, t, r) {
                const i = r.map((e => e.firstAdvertiser()));
                this.logger.debug(`Load ${r.length} primary ${e} slots`, r.map((e => e.containerId))), this.libertyPerformanceMarker.loadingAll(r);
                let n = [];
                try {
                    i.forEach((e => this.metrics.incrementAdvertiserRequestMetric(e))), n = this.lazyFetcherLoader.getFetcher(e).fetchAds(i)
                } catch (t) {
                    t instanceof Error && this.logger.error(new Error(`Fetching ads failed for ${e}: ${t.message}`))
                }
                return n.map((async e => {
                    const r = await e,
                        i = this.slotContainerFetchResultFactory.createFromContainerFetchResult(r);
                    return t.getSlot(r.containerId).handlePrimaryFetchResult(i)
                }))
            }
        };
        wi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, ye, Ai, de, ii])], wi);
        const Si = wi;
        class Ei {
            constructor(e) {
                this.slotCollection = e, this.documentWrapper = E.resolve(Q), this.primaryFetcher = E.resolve(Si), this.slotRejecter = E.resolve(bi)
            }
            async fill(e) {
                await this.documentWrapper.whenDomReady();
                const [t, r] = this.slotRejecter.rejectInvalidSlots(e);
                t.forEach((e => {
                    e.getRefreshCapability().incrementRefreshCount()
                }));
                const i = this.fetchPrimaryFill(t);
                return [...this.slotRejecter.fromRejectedSlotsToPromises(r), ...i]
            }
            fetchPrimaryFill(e) {
                const t = this.detectRequiredPrimaryAdvertiserTypes(e);
                return this.fetchSlotsByAdvertiserType(t, e).map((e => this.handleFetch(e)))
            }
            fetchSlotsByAdvertiserType(e, t) {
                const r = [];
                return e.forEach((e => {
                    r.push(...this.fetchPrimarySlots(e, t))
                })), r
            }
            detectRequiredPrimaryAdvertiserTypes(e) {
                const t = new Set;
                return e.forEach((e => {
                    t.add(e.firstAdvertiser().type)
                })), t
            }
            async handleFetch(e) {
                const {
                    containerId: t,
                    type: r,
                    filled: i
                } = await e;
                return this.slotCollection.getSlot(t).setVisibility(i), {
                    containerId: t,
                    type: r,
                    filled: i
                }
            }
            fetchPrimarySlots(e, t) {
                return this.primaryFetcher.selectAndFetchPrimarySlots(e, this.slotCollection, t)
            }
        }
        let Ti = class {
            constructor(e, t, r, i) {
                this.logger = e, this.documentWrapper = t, this.slotBuilder = r, this.slotRefresher = i
            }
            initizialise() {
                const e = this.slotBuilder.buildSlotsByContainerId();
                this.slotCollection = new mi(e), this.slotFiller = new Ei(this.slotCollection)
            }
            async fillNonLazySlotsWithAds() {
                return void 0 === this.slotFiller || void 0 === this.slotCollection ? Promise.reject(new Error("Controller is not yet initialized")) : (this.slotRefresher.enableRefreshing(this.slotFiller, this.slotCollection.getSlots()), this.warnExistenceOfLazySlots(), await this.slotFiller.fill(this.getNonLazySlots()))
            }
            async fillSlotsWithAdsFilteredBy(e) {
                if (void 0 === this.slotCollection || void 0 === this.slotFiller) throw new Error("Controller is not yet initialized");
                const t = this.slotCollection.getSlotsByPositionNames(e);
                return await this.slotFiller.fill(t)
            }
            async fillLazySlotWithAds(e) {
                if (await this.documentWrapper.whenDomReady(), void 0 === this.slotCollection || void 0 === this.slotFiller) return Promise.reject(new Error("Controller is not yet initialized"));
                const t = e,
                    r = this.slotCollection.getSlot(t);
                if (r) {
                    if (!r.isLazy()) throw new Error(`Slot '${t}' needs to be marked as lazy in options.slots`);
                    return (await this.slotFiller.fill([r]))[0]
                }
            }
            warnExistenceOfLazySlots() {
                var e;
                const t = (null === (e = this.slotCollection) || void 0 === e ? void 0 : e.getLazySlots()) || [];
                t.length > 0 && this.logger.debug(`Ignoring ${t.length} lazy slot(s). Use liberty.loadLazySlot to load them.`)
            }
            getNonLazySlots() {
                var e;
                return (null === (e = this.slotCollection) || void 0 === e ? void 0 : e.getNonLazySlots()) || []
            }
        };
        Ti = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([O(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, Q, vi, te])], Ti);
        const Oi = Ti;
        let Ii = class {
            constructor(e, t) {
                this.store = e, this.logger = t
            }
            async increaseAdBlockerCount(e) {
                await this._sendToEndpoint("/ad-blocker", e)
            }
            async increaseAdRequestCount(e) {
                await this._sendToEndpoint("/ad-requests", e)
            }
            async increaseAdClickCount(e) {
                await this._sendToEndpoint("/ad-clicks", e)
            }
            async recordDoneTime(e) {
                await this._sendToEndpoint("/done", e)
            }
            async increaseAdImpressionCount(e) {
                await this._sendToEndpoint("/ad-impressions", e)
            }
            async increaseInitCount(e) {
                await this._sendToEndpoint("/init", e)
            }
            async increaseMissingQueryCount(e) {
                await this._sendToEndpoint("/missing-query", e)
            }
            async increaseNoJsCount(e) {
                await this._sendToEndpoint("/no-js", e)
            }
            async recordInterstitialEvent(e) {
                await this._sendToEndpoint("/interstitial-event", e)
            }
            async recordInterstitialImpression(e) {
                await this._sendToEndpoint("/interstitial-impression", e)
            }
            async _sendToEndpoint(e, t) {
                try {
                    const r = await fetch(this.store.getReportingBasePath() + e, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(t)
                    });
                    if (!r.ok) {
                        const i = await r.json();
                        this.logger.error(new Error(`LRS response fails for the endpoint ${e}. Status: ${r.status}, Detail: ${i.detail}, data: ${JSON.stringify(t)}`))
                    }
                } catch (t) {
                    this.logger.error(new Error(`Sending metric to LRS failed for the endpoint ${e}. Error: ${t}`))
                }
            }
        };
        Ii = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, G])], Ii);
        const ki = Ii;
        let Pi = class {
            constructor(e, t, r) {
                this.libertyReportingServiceClient = e, this.store = t, this.metrics = r
            }
            listenOn() {
                this.metrics.onChange((e => {
                    let {
                        type: t,
                        value: r
                    } = e;
                    switch (t) {
                        case ae.AD_BLOCKER_ACTIVE:
                            this.increaseAdBlockCount(r);
                            break;
                        case ae.ADVERTISER_REQUESTS:
                            this.increaseAdvertiserRequests(r);
                            break;
                        case ae.ADVERTISER_CLICKS:
                            this.increaseAdvertiserClicks(r);
                            break;
                        case ae.DONE_TIME:
                            this.recordDoneTime(r);
                            break;
                        case ae.ADVERTISER_FILLS:
                            this.increaseAdvertiserFills(r);
                            break;
                        case ae.DURATION_FROM_FIRST_JS_TO_LIBERTY_INIT:
                            this.increaseInitCount(r);
                            break;
                        case ae.MISSING_QUERY:
                            this.increaseMissingQueryCount();
                            break;
                        case ae.INTERSTITIAL_EVENT:
                            this.recordInterstitialEvent(r);
                            break;
                        case ae.INTERSTITIAL_IMPRESSION:
                            this.recordInterstitialImpression(r)
                    }
                }))
            }
            recordInterstitialEvent(e) {
                this.libertyReportingServiceClient.recordInterstitialEvent({
                    eventName: e,
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    clientVersion: E.resolve(M).getVersion(),
                    trafficSplitGroup: this.store.getGroupName()
                })
            }
            recordInterstitialImpression(e) {
                this.libertyReportingServiceClient.recordInterstitialImpression({
                    eventName: e,
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    clientVersion: E.resolve(M).getVersion(),
                    trafficSplitGroup: this.store.getGroupName()
                })
            }
            increaseMissingQueryCount() {
                this.libertyReportingServiceClient.increaseMissingQueryCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType()
                })
            }
            increaseInitCount(e) {
                this.libertyReportingServiceClient.increaseInitCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    beginDuration: e,
                    isFullConsentGiven: this.store.isInitialFullConsentGiven(),
                    floorPriceActive: this.store.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE),
                    trafficSplitGroup: this.store.getGroupName()
                })
            }
            increaseAdvertiserFills(e) {
                const {
                    positionName: t,
                    advertiserType: r,
                    isBackfill: i,
                    slotRefreshCount: n,
                    slotInitLoadingDuration: s,
                    slotHeaderBiddingLoadingDuration: o,
                    slotGamLoadingDuration: a,
                    slotLoadingDuration: c,
                    slotTotalLoadingDuration: l
                } = e;
                this.libertyReportingServiceClient.increaseAdImpressionCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    adType: r.toUpperCase(),
                    positionName: t,
                    isBackfill: i,
                    floorPriceActive: this.store.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE),
                    slotRefreshCount: n,
                    slotInitLoadingDuration: s,
                    slotHeaderBiddingLoadingDuration: o,
                    slotGamLoadingDuration: a,
                    slotLoadingDuration: c,
                    slotTotalLoadingDuration: l
                })
            }
            recordDoneTime(e) {
                this.libertyReportingServiceClient.recordDoneTime({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    executionDuration: e,
                    isFullConsentGiven: this.store.isInitialFullConsentGiven(),
                    floorPriceActive: this.store.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE)
                })
            }
            increaseAdvertiserClicks(e) {
                const {
                    positionName: t,
                    advertiserType: r,
                    isBackfill: i
                } = e;
                this.libertyReportingServiceClient.increaseAdClickCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    adType: r.toUpperCase(),
                    positionName: t,
                    isBackfill: i,
                    floorPriceActive: this.store.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE)
                })
            }
            increaseAdvertiserRequests(e) {
                const {
                    advertiserType: t
                } = e;
                this.libertyReportingServiceClient.increaseAdRequestCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType(),
                    adType: t.toUpperCase(),
                    floorPriceActive: this.store.isFeatureEnabled(Y.USE_SMART_FLOOR_PRICE)
                })
            }
            increaseAdBlockCount(e) {
                1 === e && this.libertyReportingServiceClient.increaseAdBlockerCount({
                    platform: this.store.getPlatform(),
                    pageType: this.store.getPageType()
                })
            }
        };
        Pi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [ki, V, de])], Pi);
        const Ci = Pi;
        let _i = class {
            constructor(e, t) {
                this.store = e, this.reportingServiceMetricPublisher = t
            }
            activateSendLibertyReportingServiceMetrics() {
                this.store.getTrackingFeature().sendMetricsEnabled && this.reportingServiceMetricPublisher.listenOn()
            }
        };
        _i = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [V, Ci])], _i);
        const ji = _i;
        class Li {
            constructor(e, t, r) {
                this.platform = e, this.groupName = t, this.isAdblockActivated = r
            }
            adSenseTracking() {
                return new ct(this.platform.toLowerCase(), this.createBlockingTrackingChannel())
            }
            createBlockingTrackingChannel() {
                return [this.groupName.toLowerCase(), "adblock-" + (this.isAdblockActivated ? "on" : "off")]
            }
            gamTracking() {
                return new ct("adblocker", this.isAdblockActivated ? ["on"] : ["off"])
            }
            icasTracking() {}
        }
        class Di {
            constructor(e, t) {
                this.key = e, this.values = t
            }
            asAdsenseChannel() {
                return [this.key, ...this.values].join(at)
            }
            asGamKeyValue() {
                return {
                    key: this.key,
                    value: this.values.join(at)
                }
            }
        }
        class Fi {
            constructor(e) {
                this.attributionCode = e
            }
            adSenseTracking() {
                return new Di(this.attributionCode, [])
            }
            gamTracking() {
                return new Di("liberty", [this.attributionCode])
            }
            icasTracking() {}
        }
        class Bi {
            constructor(e, t, r, i) {
                this.platform = e, this.groupName = t, this.pageType = r, this.isAdblockActivated = i
            }
            getAdblockState() {
                return "adblock-" + (this.isAdblockActivated ? "on" : "off")
            }
            adSenseTracking() {}
            gamTracking() {
                return new ct("liberty", [this.platform.toLowerCase(), this.groupName, this.pageType.toLowerCase(), this.getAdblockState()])
            }
            icasTracking() {}
        }
        class Ni {
            constructor(e, t) {
                this.platform = e, this.groupName = t
            }
            adSenseTracking() {}
            gamTracking() {
                return new ct("liberty", [this.platform.toLowerCase(), this.groupName])
            }
            icasTracking() {}
        }
        class Mi {
            constructor(e, t) {
                this.pageType = e, this.clickTrackingImprovementLabsVariant = t
            }
            adSenseTracking() {
                return new ct("clvc", this.createTrackingValue())
            }
            gamTracking() {}
            createTrackingValue() {
                return [this.pageType.toLowerCase(), this.clickTrackingImprovementLabsVariant]
            }
            icasTracking() {}
        }
        var xi;
        ! function(e) {
            e[e.REV_4 = 4] = "REV_4", e[e.REV_5 = 5] = "REV_5", e[e.REV_6 = 6] = "REV_6", e[e.REV_7 = 7] = "REV_7", e[e.REV_8 = 8] = "REV_8", e[e.REV_9 = 9] = "REV_9", e[e.REV_10 = 10] = "REV_10"
        }(xi || (xi = {}));
        const Gi = xi,
            zi = {
                "prebid-update": Gi.REV_10,
                "audex-awr-update": Gi.REV_7,
                "audex-libertyjs-update": Gi.REV_6,
                relper_icas_soft_filter: Gi.REV_5,
                "lws-aws-traffic": Gi.REV_4
            };
        class Wi {
            constructor(e, t, r) {
                this.platform = e, this.revenueExperimentKey = t, this.activeLabsExperiments = r
            }
            icasTracking() {
                const e = this.getLabsVariant();
                if (void 0 === e) return;
                const t = this.getRevenueId();
                return new ct(this.platform.toLowerCase(), this.lowerCased([`${t}`, e]))
            }
            adSenseTracking() {
                const e = this.getLabsVariant();
                if (void 0 === e) return;
                const t = this.getRevenueId();
                return new ct(this.platform.toLowerCase(), this.lowerCased([`${t}`, e]))
            }
            gamTracking() {
                const e = this.getLabsVariant();
                if (void 0 === e) return;
                const t = this.getRevenueId();
                return new ct("labstest", this.lowerCased([this.platform, `${t}`, e]))
            }
            lowerCased(e) {
                return e.map((e => e.toLowerCase()))
            }
            getRevenueId() {
                return zi[this.revenueExperimentKey]
            }
            getLabsVariant() {
                var e;
                return null === (e = this.activeLabsExperiments) || void 0 === e ? void 0 : e[this.revenueExperimentKey]
            }
        }
        let Ui = class {
            createAll(e, t, r, i, n, s, o, a, c) {
                return [new Mi(i, a), new Li(r, n, c), new Fi(s), new Ni(r, n), new Bi(r, n, i, c), ...this.createRevenueTrackers(r, o)]
            }
            createRevenueTrackers(e, t) {
                return Object.keys(zi).map((r => new Wi(e, r, t)))
            }
        };
        Ui = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], Ui);
        const Vi = Ui,
            $i = "libertyjs_debugging_feature_flags",
            qi = {
                refreshment: !0
            };
        class Hi {
            constructor() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : window.sessionStorage;
                this.storage = e
            }
            saveAll(e) {
                this.storage.setItem($i, JSON.stringify(e))
            }
            getAll() {
                var e;
                const t = null !== (e = this.storage.getItem($i)) && void 0 !== e ? e : "";
                let r;
                try {
                    r = JSON.parse(t)
                } catch (e) {
                    r = {}
                }
                return Object.assign(Object.assign({}, qi), r)
            }
        }
        let Qi = class {
            constructor(e) {
                this.windowWrapper = e, this.unifiedAuctionWindowMessageHandler = E.resolve(cr)
            }
            registerMessageEventHandler() {
                this.windowWrapper.get().addEventListener("message", (e => {
                    this.unifiedAuctionWindowMessageHandler.handleMessageEvent(e)
                }))
            }
        };
        Qi = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [q])], Qi);
        const Ki = Qi,
            Yi = "%AFS_CHANNEL%",
            Ji = "%DFP_TARGETS%",
            Zi = "%GAM_TARGETS%";
        class Xi {
            static isAdsenseChannelUnique(e, t) {
                return !t.split("+").includes(e)
            }
            static appendAdsenseChannelForTrackingInformation(e, t) {
                const r = t.asAdsenseChannel();
                return this.isAdsenseChannelUnique(r, e) ? 0 === e.length ? r : e + "+" + r : e
            }
        }
        class en {
            static appendGamTarget(e, t) {
                const {
                    key: r,
                    value: i
                } = t.asGamKeyValue(), n = e[r];
                return Object.assign(Object.assign({}, e), {
                    [r]: en.appendValue(n, i)
                })
            }
            static appendValue(e, t) {
                return [e, t].filter((e => void 0 !== e)).join(",")
            }
        }
        let tn = class {
            getInjectedContext(e, t) {
                return Object.assign(Object.assign({}, e), this.getTrackingValues(e, t))
            }
            getTrackingValues(e, t) {
                return {
                    [Ji]: this.buildGamContext(Ji, e, t),
                    [Zi]: this.buildGamContext(Zi, e, t),
                    [Yi]: this.buildForAdsenseChannel(Yi, e, t)
                }
            }
            buildGamContext(e, t, r) {
                const i = t[e];
                if (i) {
                    const e = this.getGamTrackingInformations(r);
                    return this.appendGamTargets(i, e)
                }
                return i
            }
            buildForAdsenseChannel(e, t, r) {
                const i = t[e];
                if (void 0 !== i) {
                    const e = this.getAdsenseTrackingInformations(r);
                    return this.injectIntoAdsenseChannel(i, e)
                }
                return i
            }
            getAdsenseTrackingInformations(e) {
                return this.removeUndefined(e.map((e => e.adSenseTracking())))
            }
            getGamTrackingInformations(e) {
                return this.removeUndefined(e.map((e => e.gamTracking())))
            }
            removeUndefined(e) {
                return e.filter((e => void 0 !== e))
            }
            appendGamTargets(e, t) {
                let r = e;
                return t.forEach((e => {
                    r = en.appendGamTarget(r, e)
                })), r
            }
            injectIntoAdsenseChannel(e, t) {
                let r = e;
                return t.forEach((e => {
                    r = Xi.appendAdsenseChannelForTrackingInformation(r, e)
                })), r
            }
        };
        tn = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], tn);
        const rn = tn;
        let nn = class {
            constructor(e) {
                this.trackingContextInjector = e
            }
            createInjectedContext(e, t) {
                return this.trackingContextInjector.getInjectedContext(e, t)
            }
        };
        nn = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [rn])], nn);
        const sn = nn;
        let on = class {
            buildContextWithCategoryQueryTerms(e, t) {
                const r = t["%QUERY%"] && t["%QUERY%"].trim().length > 0,
                    i = 0 === e.queries.length;
                if (r || i) return t;
                const n = this.chooseCategoryQueryTerms(e.queries);
                return this.buildContext(t, n)
            }
            buildContext(e, t) {
                const r = Object.assign(Object.assign({}, e), {
                    "%QUERY%": t
                });
                return void 0 !== e["%DFP_TARGETS%"] && (r["%DFP_TARGETS%"] = Object.assign(Object.assign({}, e["%DFP_TARGETS%"]), {
                    catmap: t
                })), void 0 !== e["%GAM_TARGETS%"] && (r["%GAM_TARGETS%"] = Object.assign(Object.assign({}, e["%GAM_TARGETS%"]), {
                    catmap: t
                })), r
            }
            chooseCategoryQueryTerms(e) {
                const t = e.length;
                return e[this.getRandomInt(t)]
            }
            getRandomInt(e) {
                return Math.floor(Math.random() * Math.floor(e))
            }
        };
        on = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], on);
        const an = on;
        const cn = /^%.+%$/;
        let ln = class {
            getInjectedConfig(e, t) {
                return this.inject(e, t)
            }
            inject(e, t) {
                const r = Array.isArray(e) ? [] : {};
                return Object.entries(e).forEach((e => {
                    let [i, n] = e;
                    if ("object" == typeof n && null !== n) r[i] = this.inject(n, t);
                    else if (this.isValidForInjection(n)) {
                        const e = n;
                        r[i] = this.requireNonNullWithCustomMessage(t[e], n)
                    } else r[i] = n
                })), r
            }
            requireNonNullWithCustomMessage(e, t) {
                return It(e, t, `Could not inject context '${t}' with value '${e}', because value is null or undefined.`)
            }
            isValidForInjection(e) {
                return "string" == typeof e && cn.test(e)
            }
        };
        ln = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], ln);
        const dn = ln;
        let un = class {
            buildContextWithLuckyNumber(e) {
                var t;
                const r = String(null !== (t = e["%LUCKY_NUMBER%"]) && void 0 !== t ? t : "");
                return Object.assign(Object.assign({}, e), {
                    "%DFP_TARGETS%": Object.assign(Object.assign({}, e["%DFP_TARGETS%"]), {
                        lucky_number: r
                    }),
                    "%GAM_TARGETS%": Object.assign(Object.assign({}, e["%GAM_TARGETS%"]), {
                        lucky_number: r
                    })
                })
            }
        };
        un = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], un);
        const gn = un;
        let hn = class {
            constructor(e, t, r, i, n, s, o) {
                this.logger = e, this.categoryQueryTermsContextInjector = t, this.luckyNumberContextInjector = r, this.contextInjector = i, this.trackerFactory = n, this.trackingContextInjectorFactory = s, this.windowWrapper = o
            }
            createConfig(e, t, r) {
                const i = this.luckyNumberContextInjector.buildContextWithLuckyNumber(t),
                    n = this.categoryQueryTermsContextInjector.buildContextWithCategoryQueryTerms(e, i);
                this.logger.debug("Context with Lucky Number and Category Query Terms:", n);
                const s = this.trackingContextInjectorFactory.createInjectedContext(n, r),
                    o = this.contextInjector.getInjectedConfig(e, Object.assign(Object.assign({}, s), {
                        "%CURRENT_URL%": this.windowWrapper.get().location.href
                    }));
                return this.logger.debug("Config including context:", o), o
            }
        };
        hn = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [G, an, gn, dn, Vi, sn, q])], hn);
        const fn = hn;
        class pn extends TypeError {
            constructor(e, t) {
                let r;
                const {
                    message: i,
                    explanation: n
                } = e, s = function(e, t) {
                    var r = {};
                    for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (r[i] = e[i]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                        var n = 0;
                        for (i = Object.getOwnPropertySymbols(e); n < i.length; n++) t.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[n]) && (r[i[n]] = e[i[n]])
                    }
                    return r
                }(e, ["message", "explanation"]), {
                    path: o
                } = e, a = 0 === o.length ? i : `At path: ${o.join(".")} -- ${i}`;
                super(null != n ? n : a), null != n && (this.cause = a), Object.assign(this, s), this.name = this.constructor.name, this.failures = () => null != r ? r : r = [e, ...t()]
            }
        }

        function yn(e) {
            return "object" == typeof e && null != e
        }

        function vn(e) {
            return yn(e) && !Array.isArray(e)
        }

        function mn(e) {
            return "symbol" == typeof e ? e.toString() : "string" == typeof e ? JSON.stringify(e) : `${e}`
        }

        function bn(e, t, r, i) {
            if (!0 === e) return;
            !1 === e ? e = {} : "string" == typeof e && (e = {
                message: e
            });
            const {
                path: n,
                branch: s
            } = t, {
                type: o
            } = r, {
                refinement: a,
                message: c = `Expected a value of type \`${o}\`${a?` with refinement \`${a}\``:""}, but received: \`${mn(i)}\``
            } = e;
            return Object.assign(Object.assign({
                value: i,
                type: o,
                refinement: a,
                key: n[n.length - 1],
                path: n,
                branch: s
            }, e), {
                message: c
            })
        }

        function* Rn(e, t, r, i) {
            var n;
            yn(n = e) && "function" == typeof n[Symbol.iterator] || (e = [e]);
            for (const n of e) {
                const e = bn(n, t, r, i);
                e && (yield e)
            }
        }

        function* An(e, t, r = {}) {
            const {
                path: i = [],
                branch: n = [e],
                coerce: s = !1,
                mask: o = !1
            } = r, a = {
                path: i,
                branch: n,
                mask: o
            };
            s && (e = t.coercer(e, a));
            let c = "valid";
            for (const i of t.validator(e, a)) i.explanation = r.message, c = "not_valid", yield [i, void 0];
            for (let [l, d, u] of t.entries(e, a)) {
                const t = An(d, u, {
                    path: void 0 === l ? i : [...i, l],
                    branch: void 0 === l ? n : [...n, d],
                    coerce: s,
                    mask: o,
                    message: r.message
                });
                for (const r of t) r[0] ? (c = null != r[0].refinement ? "not_refined" : "not_valid", yield [r[0], void 0]) : s && (d = r[1], void 0 === l ? e = d : e instanceof Map ? e.set(l, d) : e instanceof Set ? e.add(d) : yn(e) && (void 0 !== d || l in e) && (e[l] = d))
            }
            if ("not_valid" !== c)
                for (const i of t.refiner(e, a)) i.explanation = r.message, c = "not_refined", yield [i, void 0];
            "valid" === c && (yield [void 0, e])
        }
        class wn {
            constructor(e) {
                const {
                    type: t,
                    schema: r,
                    validator: i,
                    refiner: n,
                    coercer: s = (e => e),
                    entries: o = function*() {}
                } = e;
                this.type = t, this.schema = r, this.entries = o, this.coercer = s, this.validator = i ? (e, t) => Rn(i(e, t), t, this, e) : () => [], this.refiner = n ? (e, t) => Rn(n(e, t), t, this, e) : () => []
            }
            assert(e, t) {
                return Sn(e, this, t)
            }
            create(e, t) {
                return function(e, t, r) {
                    const i = En(e, t, {
                        coerce: !0,
                        message: r
                    });
                    if (i[0]) throw i[0];
                    return i[1]
                }(e, this, t)
            }
            is(e) {
                return function(e, t) {
                    return !En(e, t)[0]
                }(e, this)
            }
            mask(e, t) {
                return function(e, t, r) {
                    const i = En(e, t, {
                        coerce: !0,
                        mask: !0,
                        message: r
                    });
                    if (i[0]) throw i[0];
                    return i[1]
                }(e, this, t)
            }
            validate(e, t = {}) {
                return En(e, this, t)
            }
        }

        function Sn(e, t, r) {
            const i = En(e, t, {
                message: r
            });
            if (i[0]) throw i[0]
        }

        function En(e, t, r = {}) {
            const i = An(e, t, r),
                n = function(e) {
                    const {
                        done: t,
                        value: r
                    } = e.next();
                    return t ? void 0 : r
                }(i);
            return n[0] ? [new pn(n[0], (function*() {
                for (const e of i) e[0] && (yield e[0])
            })), void 0] : [void 0, n[1]]
        }

        function Tn(e, t) {
            return new wn({
                type: e,
                schema: null,
                validator: t
            })
        }

        function On(e) {
            return new wn({
                type: "array",
                schema: e,
                * entries(t) {
                    if (e && Array.isArray(t))
                        for (const [r, i] of t.entries()) yield [r, i, e]
                },
                coercer: e => Array.isArray(e) ? e.slice() : e,
                validator: e => Array.isArray(e) || `Expected an array value, but received: ${mn(e)}`
            })
        }

        function In() {
            return Tn("boolean", (e => "boolean" == typeof e))
        }

        function kn() {
            return Tn("number", (e => "number" == typeof e && !isNaN(e) || `Expected a number, but received: ${mn(e)}`))
        }

        function Pn(e) {
            const t = e ? Object.keys(e) : [],
                r = Tn("never", (() => !1));
            return new wn({
                type: "object",
                schema: e || null,
                * entries(i) {
                    if (e && yn(i)) {
                        const n = new Set(Object.keys(i));
                        for (const r of t) n.delete(r), yield [r, i[r], e[r]];
                        for (const e of n) yield [e, i[e], r]
                    }
                },
                validator: e => vn(e) || `Expected an object, but received: ${mn(e)}`,
                coercer(t, r) {
                    if (!vn(t)) return t;
                    const i = Object.assign({}, t);
                    if (r.mask && e)
                        for (const t in i) void 0 === e[t] && delete i[t];
                    return i
                }
            })
        }

        function Cn(e) {
            return new wn(Object.assign(Object.assign({}, e), {
                validator: (t, r) => void 0 === t || e.validator(t, r),
                refiner: (t, r) => void 0 === t || e.refiner(t, r)
            }))
        }

        function _n(e, t) {
            return new wn({
                type: "record",
                schema: null,
                * entries(r) {
                    if (yn(r))
                        for (const i in r) {
                            const n = r[i];
                            yield [i, i, e], yield [i, n, t]
                        }
                },
                validator: e => vn(e) || `Expected an object, but received: ${mn(e)}`,
                coercer: e => vn(e) ? Object.assign({}, e) : e
            })
        }

        function jn() {
            return Tn("string", (e => "string" == typeof e || `Expected a string, but received: ${mn(e)}`))
        }

        function Ln(e) {
            const t = Object.keys(e);
            return new wn({
                type: "type",
                schema: e,
                * entries(r) {
                    if (yn(r))
                        for (const i of t) yield [i, r[i], e[i]]
                },
                validator: e => vn(e) || `Expected an object, but received: ${mn(e)}`,
                coercer: e => vn(e) ? Object.assign({}, e) : e
            })
        }

        function Dn() {
            return Tn("unknown", (() => !0))
        }

        function Fn(e) {
            return function(e, t, r) {
                return new wn(Object.assign(Object.assign({}, e), {* refiner(i, n) {
                        yield* e.refiner(i, n);
                        const s = Rn(r(i, n), n, e, i);
                        for (const e of s) yield Object.assign(Object.assign({}, e), {
                            refinement: t
                        })
                    }
                }))
            }(e, "nonempty", (t => function(e) {
                return e instanceof Map || e instanceof Set ? e.size : e.length
            }(t) > 0 || `Expected a nonempty ${e.type} but received an empty one`))
        }
        const Bn = Tn("NaN", (e => "number" == typeof e && isNaN(e))),
            Nn = function(e) {
                const t = e.map((e => e.type)).join(" | ");
                return new wn({
                    type: "union",
                    schema: null,
                    coercer(t, r) {
                        for (const i of e) {
                            const [e, n] = i.validate(t, {
                                coerce: !0,
                                mask: r.mask
                            });
                            if (!e) return n
                        }
                        return t
                    },
                    validator(r, i) {
                        const n = [];
                        for (const t of e) {
                            const [...e] = An(r, t, i), [s] = e;
                            if (!s[0]) return [];
                            for (const [t] of e) t && n.push(t)
                        }
                        return [`Expected the value to satisfy a union of \`${t}\`, but received: ${mn(r)}`, ...n]
                    }
                })
            }([kn(), Bn]);
        let Mn = class {
            validate(e, t) {
                this.validateConfig(e), this.validateOptions(t)
            }
            validateConfig(e) {
                const t = On(Ln({
                        type: jn(),
                        settings: Ln({})
                    })),
                    r = Ln({
                        platform: jn(),
                        pageType: jn(),
                        groupName: jn(),
                        groupNameSource: jn(),
                        queries: On(),
                        pageLevelSettings: On(),
                        slots: On(Ln({
                            advertisers: t,
                            adblockAdvertisers: t
                        })),
                        trackingDimensions: _n(jn(), jn())
                    });
                try {
                    Sn(e, r)
                } catch (e) {
                    if (e instanceof pn) throw new Error(`config: ${e.message}`)
                }
                this.validateMatchingPageLevelSettings(e), this.validateRefreshInterval(e)
            }
            validateRefreshInterval(e) {
                e.pageLevelSettings.forEach((e => {
                    const t = e.type;
                    if (e.settings.refreshInterval < 1e3) throw Error(`config.pageLevelSettings[${t}].settings.refreshInterval must be >= 1000`)
                }))
            }
            validateMatchingPageLevelSettings(e) {
                this.getTypes(e).forEach((t => {
                    if (!e.pageLevelSettings.find((e => e.type === t))) throw Error(`config.pageLevelSettings[i].${t} not found`)
                }))
            }
            getTypes(e) {
                return bt([e.slots.map((e => e.advertisers.map((e => e.type)))), e.slots.map((e => e.adblockAdvertisers.map((e => e.type))))])
            }
            validateOptions(e) {
                const t = Ln({
                    activeLabsExperiments: Cn(_n(jn(), jn())),
                    prebid: Pn({
                        defaultTimeout: kn(),
                        config: _n(jn(), Dn()),
                        bidderSettings: Cn(_n(jn(), Dn())),
                        bidderConfig: Cn(Pn({
                            bidders: On(jn()),
                            config: _n(jn(), Dn())
                        }))
                    }),
                    slots: On((r = e => {
                        Sn(e, Ln({
                            maxHeight: Dn(),
                            maxWidth: Dn()
                        }));
                        const t = this.ensureBothArePresent(e.maxHeight, e.maxWidth, Nn);
                        return Ln({
                            positionNameMatcher: Tn("regexp", (e => e instanceof RegExp)),
                            maxWidth: t,
                            maxHeight: t,
                            gamAdUnitCode: Cn(jn()),
                            gamTargetings: Cn(Ln({
                                format: On(jn())
                            }))
                        })
                    }, new wn({
                        type: "dynamic",
                        schema: null,
                        * entries(e, t) {
                            const i = r(e);
                            yield* i.entries(e, t)
                        },
                        validator: (e, t) => r(e).validator(e, t),
                        coercer: (e, t) => r(e).coercer(e, t),
                        refiner: (e, t) => r(e).refiner(e, t)
                    }))),
                    features: Ln({
                        [Y.AAX]: In(),
                        [Y.CLICK_TRACKING]: In(),
                        [Y.CLICK_DETECTION_IMPROVEMENT_LABS_VARIANT]: jn(),
                        [Y.USE_SMART_FLOOR_PRICE]: In(),
                        [Y.TRACKING]: Ln({
                            pageFirstJsExecutionTime: kn(),
                            sendMetricsBaseUrl: Fn(jn()),
                            isInitialFullConsentGiven: In(),
                            sendMetricsEnabled: In(),
                            trackJs: Ln({
                                enabled: In(),
                                hostApplicationName: jn()
                            })
                        }),
                        [Y.BREAKPOINT_HANDLING]: Cn(Ln({
                            enabled: In(),
                            breakpointName: Cn(Fn(jn()))
                        }))
                    })
                });
                var r;
                try {
                    Sn(e, t)
                } catch (e) {
                    if (e instanceof pn) throw new Error(`options: ${e.message}`)
                }
            }
            ensureBothArePresent(e, t, r) {
                return void 0 !== e || void 0 !== t ? r : Cn(r)
            }
        };
        Mn = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], Mn);
        const xn = Mn;
        const Gn = /%.*%/;
        let zn = class {
            validate(e) {
                const t = It(e, "context");
                this.validateVariables(t)
            }
            validateVariables(e) {
                Object.keys(e).forEach((e => {
                    if (!e.match(Gn)) throw Error(`context.${e} does not match ${Gn}`)
                }))
            }
        };
        zn = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], zn);
        const Wn = zn;
        let Un = class {
            constructor() {
                this.configValidator = E.resolve(xn), this.contextValidator = E.resolve(Wn)
            }
            validateIsAdblockActivated(e) {
                It(e, "isAdblockActivated")
            }
            validateArguments(e, t, r) {
                this.configValidator.validate(e, t), this.contextValidator.validate(r)
            }
        };
        Un = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T()], Un);
        const Vn = Un;
        let $n = class {
            constructor(e, t, r, i, n, s, o, a, c) {
                this.environment = e, this.logger = t, this.validator = r, this.store = i, this.metrics = n, this.controller = s, this.trackerFactory = o, this.configFactory = a, this.windowMessageEventHandler = c, this.featureFlagRepository = new Hi
            }
            initialize(e, t, r) {
                this.logger.debug(`Liberty.js v${this.environment.getVersion()} loaded`), this.logger.debug("Config without Context:", e), this.logger.debug("Context:", t), this.logger.debug("Options:", r);
                try {
                    this.validator.validateIsAdblockActivated(r.adblockEnabled), this.validator.validateArguments(e, r, t), this.initializeStore(e, t, r), this.initializeMetricsSending(), this.metrics.recordExecutionStart(r.features.tracking.pageFirstJsExecutionTime), this.sendAdblockerMetric(), this.windowMessageEventHandler.registerMessageEventHandler(), this.metrics.sendFillPreparationsCompleted(), this.controller.initizialise()
                } catch (e) {
                    throw this.logger.error(e), e
                }
            }
            initializeStore(e, t, r) {
                const i = this.getAllTrackers(e, r, t),
                    n = this.configFactory.createConfig(e, t, i),
                    s = this.buildFeatureOptions(r);
                this.store.initialize(n, r, s, i)
            }
            buildFeatureOptions(e) {
                const t = this.featureFlagRepository.getAll(),
                    r = e.features;
                return Object.assign(Object.assign({}, r), t)
            }
            getAllTrackers(e, t, r) {
                return this.trackerFactory.createAll(e, r, e.platform, e.pageType, e.groupName, e.attributionCode, t.activeLabsExperiments, t.features.clickTrackingImprovementLabsVariant, t.adblockEnabled)
            }
            initializeMetricsSending() {
                E.resolve(ji).activateSendLibertyReportingServiceMetrics()
            }
            initializeLogger(e, t, r, i) {
                var n, s;
                const o = null === (n = null == e ? void 0 : e.trackJs) || void 0 === n ? void 0 : n.enabled,
                    a = null === (s = null == e ? void 0 : e.trackJs) || void 0 === s ? void 0 : s.hostApplicationName;
                if (void 0 === o || void 0 === a) throw new Error("Required parameter tracking.trackJs.enabled or tracking.trackJs.hostApplicationName not set");
                this.logger.init(a, o, t, r, i, null == e ? void 0 : e.errorLogger)
            }
            async load() {
                try {
                    const e = await this.controller.fillNonLazySlotsWithAds();
                    return await Promise.allSettled(e), e.forEach((e => {
                        e.catch((e => {
                            this.logger.error(e)
                        }))
                    })), this.metrics.recordExecutionEnd(), e
                } catch (e) {
                    this.logger.error(e)
                }
            }
            async loadSlotsFilteredByPositionNames(e) {
                try {
                    return await this.controller.fillSlotsWithAdsFilteredBy(e)
                } catch (e) {
                    this.logger.error(e)
                }
            }
            async loadLazySlot(e) {
                try {
                    return await this.controller.fillLazySlotWithAds(e)
                } catch (e) {
                    this.logger.error(e)
                }
            }
            setFeatureFlags(e) {
                this.featureFlagRepository.saveAll(e)
            }
            registerMetricHandler(e) {
                e && this.metrics.onChange(e)
            }
            sendAdblockerMetric() {
                this.store.isAdblockerEnabled() ? this.metrics.setAdblockerActive() : this.metrics.setAdblockerInactive()
            }
        };
        $n = function(e, t, r, i) {
            var n, s = arguments.length,
                o = s < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, i);
            else
                for (var a = e.length - 1; a >= 0; a--)(n = e[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(t, r, o) : n(t, r)) || o);
            return s > 3 && o && Object.defineProperty(t, r, o), o
        }([T(), function(e, t) {
            if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
        }("design:paramtypes", [M, G, Vn, V, de, Oi, Vi, fn, Ki])], $n);
        const qn = $n;
        var Hn;
        ! function(e) {
            e.LOAD = "LOAD", e.LOAD_LAZY_SLOT = "LOAD_LAZY_SLOT", e.LOAD_SLOTS_FILTERED_BY_POSITION_NAMES = "LOAD_SLOTS_FILTERED_BY_POSITION_NAMES", e.SET_FEATURE_FLAGS = "SET_FEATURE_FLAGS"
        }(Hn || (Hn = {}));
        const Qn = Hn;
        class Kn {
            constructor() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                this.queue = e
            }
            push(e) {
                this.queue.push(e)
            }
            dequeue() {
                return this.queue.shift()
            }
            length() {
                return this.queue.length
            }
        }

        function Yn(e, t) {
            localStorage.setItem("libertyjs_debug", "true"), void 0 !== e && (function(e) {
                if (!/^([a-l]|x|z[a-k]?)$/.exec(e)) throw new Error("Liberty group is invalid. Please check existing Liberty group name.");
                document.cookie = `liberty_manual_group=${e}; path=/`
            }(e), void 0 !== t && window.liberty.commandQueue.push({
                commandName: Qn.SET_FEATURE_FLAGS,
                args: {
                    featureFlags: t
                }
            })), window.location.reload()
        }
        window.liberty = window.liberty || {};
        const Jn = (new class {
            initCommandQueueAndAssignToLiberty(e) {
                let t;
                return this.isUndefinedOrArray(e.commandQueue) ? (t = this.createCommandQueueFrom(e.commandQueue), e.commandQueue = t) : t = e.commandQueue, t
            }
            isUndefinedOrArray(e) {
                return void 0 === e || Array.isArray(e)
            }
            createCommandQueueFrom(e) {
                return new Kn(e || [])
            }
        }).initCommandQueueAndAssignToLiberty(window.liberty);

        function Zn() {
            return E.resolve(M).getVersion()
        }
        new class {
            constructor(e) {
                this.commandQueue = e
            }
            processQueueAndOverwritePush() {
                this.commandQueue.push = e => {
                    this.executeCommand(e)
                }, this.executeCommands()
            }
            executeCommands() {
                const e = this.commandQueue.dequeue();
                void 0 !== e && (this.executeCommand(e), this.executeCommands())
            }
            executeCommand(e) {
                var t, r, i;
                const n = e.commandName;
                switch (n) {
                    case Qn.LOAD:
                        {
                            const n = e.args;n.options = Object.assign({}, n.options, {
                                adblockEnabled: n.adblockEnabled
                            }),
                            E.clearInstances(),
                            this.libertyInstance = E.resolve(qn),
                            this.libertyInstance.initializeLogger(null === (r = null === (t = n.options) || void 0 === t ? void 0 : t.features) || void 0 === r ? void 0 : r.tracking, n.trackJsErrorLoggerFactory, n.config.groupName, null === (i = n.options) || void 0 === i ? void 0 : i.adblockEnabled),
                            this.libertyInstance.registerMetricHandler(n.onMetricsUpdate),
                            this.libertyInstance.initialize(n.config, n.context, n.options),
                            this.libertyInstance.load();
                            break
                        }
                    case Qn.LOAD_LAZY_SLOT:
                        this.getLibertyInstance().loadLazySlot(e.args.positionName);
                        break;
                    case Qn.LOAD_SLOTS_FILTERED_BY_POSITION_NAMES:
                        this.getLibertyInstance().loadSlotsFilteredByPositionNames(e.args.positionNames);
                        break;
                    case Qn.SET_FEATURE_FLAGS:
                        this.getLibertyInstance().setFeatureFlags(e.args.featureFlags);
                        break;
                    default:
                        throw new Error(`Liberty command '${n}' unrecognized!`)
                }
            }
            getLibertyInstance() {
                if (!this.libertyInstance) throw new Error("LOAD command needs to be done first!");
                return this.libertyInstance
            }
        }(Jn).processQueueAndOverwritePush()
    })(), i
})()));
//# sourceMappingURL=liberty.min.js.map